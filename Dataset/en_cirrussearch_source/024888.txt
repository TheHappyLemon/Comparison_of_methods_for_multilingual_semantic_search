A computer mouse (plural mice, also mouses) is a hand-held pointing device that detects two-dimensional motion relative to a surface. This motion is typically translated into the motion of the pointer (called a cursor) on a display, which allows a smooth control of the graphical user interface of a computer. The first public demonstration of a mouse controlling a computer system was done by Doug Engelbart in 1968 as part of the Mother of All Demos. Mice originally used two separate wheels to directly track movement across a surface: one in the x-dimension and one in the Y. Later, the standard design shifted to use a ball rolling on a surface to detect motion, in turn connected to internal rollers. Most modern mice use optical movement detection with no moving parts. Though originally all mice were connected to a computer by a cable, many modern mice are cordless, relying on short-range radio communication with the connected system. In addition to moving a cursor, computer mice have one or more buttons to allow operations such as the selection of a menu item on a display. Mice often also feature other elements, such as touch surfaces and scroll wheels, which enable additional control and dimensional input. The earliest known written use of the term mouse or mice in reference to a computer pointing device is in Bill English's July 1965 publication, "Computer-Aided Display Control". This likely originated from its resemblance to the shape and size of a mouse, with the cord resembling its tail. The popularity of wireless mice without cords makes the resemblance less obvious. According to Roger Bates, a hardware designer under English, the term also came about because the cursor on the screen was for some unknown reason referred to as "CAT" and was seen by the team as if it would be chasing the new desktop device. The plural for the small rodent is always "mice" in modern usage. The plural for a computer mouse is either "mice" or "mouses" according to most dictionaries, with "mice" being more common. The first recorded plural usage is "mice"; the online Oxford Dictionaries cites a 1984 use, and earlier uses include J. C. R. Licklider's "The Computer as a Communication Device" of 1968. The trackball, a related pointing device, was invented in 1946 by Ralph Benjamin as part of a post-World War II-era fire-control radar plotting system called the Comprehensive Display System (CDS). Benjamin was then working for the British Royal Navy Scientific Service. Benjamin's project used analog computers to calculate the future position of target aircraft based on several initial input points provided by a user with a joystick. Benjamin felt that a more elegant input device was needed and invented what they called a "roller ball" for this purpose. The device was patented in 1947, but only a prototype using a metal ball rolling on two rubber-coated wheels was ever built, and the device was kept as a military secret. Another early trackball was built by Kenyon Taylor, a British electrical engineer working in collaboration with Tom Cranston and Fred Longstaff. Taylor was part of the original Ferranti Canada, working on the Royal Canadian Navy's DATAR (Digital Automated Tracking and Resolving) system in 1952. DATAR was similar in concept to Benjamin's display. The trackball used four disks to pick up motion, two each for the X and Y directions. Several rollers provided mechanical support. When the ball was rolled, the pickup discs spun and contacts on their outer rim made periodic contact with wires, producing pulses of output with each movement of the ball. By counting the pulses, the physical movement of the ball could be determined. A digital computer calculated the tracks and sent the resulting data to other ships in a task force using pulse-code modulation radio signals. This trackball used a standard Canadian five-pin bowling ball. It was not patented, since it was a secret military project. Douglas Engelbart of the Stanford Research Institute (now SRI International) has been credited in published books by Thierry Bardini, Paul Ceruzzi, Howard Rheingold, and several others as the inventor of the computer mouse. Engelbart was also recognized as such in various obituary titles after his death in July 2013. By 1963, Engelbart had already established a research lab at SRI, the Augmentation Research Center (ARC), to pursue his objective of developing both hardware and software computer technology to "augment" human intelligence. That November, while attending a conference on computer graphics in Reno, Nevada, Engelbart began to ponder how to adapt the underlying principles of the planimeter to inputting X- and Y-coordinate data. On 14 November 1963, he first recorded his thoughts in his personal notebook about something he initially called a "bug", which is a "3-point" form could have a "drop point and 2 orthogonal wheels". He wrote that the "bug" would be "easier" and "more natural" to use, and unlike a stylus, it would stay still when let go, which meant it would be "much better for coordination with the keyboard". In 1964, Bill English joined ARC, where he helped Engelbart build the first mouse prototype. They christened the device the mouse as early models had a cord attached to the rear part of the device which looked like a tail, and in turn, resembled the common mouse. According to Roger Bates, a hardware designer in English, another reason for choosing this name was because the cursor on the screen was also referred to as "CAT" at this time. As noted above, this "mouse" was first mentioned in print in a July 1965 report, on which English was the lead author. On 9 December 1968, Engelbart publicly demonstrated the mouse at what would come to be known as The Mother of All Demos. Engelbart never received any royalties for it, as his employer SRI held the patent, which expired before the mouse became widely used in personal computers. In any event, the invention of the mouse was just a small part of Engelbart's much larger project of augmenting human intellect. Several other experimental pointing-devices developed for Engelbart's oN-Line System (NLS) exploited different body movements – for example, head-mounted devices attached to the chin or nose – but ultimately the mouse won out because of its speed and convenience. The first mouse, a bulky device (pictured) used two potentiometers perpendicular to each other and connected to wheels: the rotation of each wheel translated into motion along one axis. At the time of the "Mother of All Demos", Engelbart's group had been using their second-generation, 3-button mouse for about a year. On 2 October 1968, three years after Engelbart's prototype but more than two months before his public demo, a mouse device named Rollkugelsteuerung (German for "Trackball control") was shown in a sales brochure by the German company AEG-Telefunken as an optional input device for the SIG 100 vector graphics terminal, part of the system around their process computer TR 86 and the TR 440 [de] main frame. Based on an even earlier trackball device, the mouse device had been developed by the company in 1966 in what had been a parallel and independent discovery. As the name suggests and unlike Engelbart's mouse, the Telefunken model already had a ball (diameter 40 mm, weight 40 g) and two mechanical 4-bit rotational position transducers with Gray code-like states, allowing easy movement in any direction. The bits remained stable for at least two successive states to relax debouncing requirements. This arrangement was chosen so that the data could also be transmitted to the TR 86 front-end process computer and over longer distance telex lines with c. 50 baud. Weighing 465 grams (16.4 oz), the device with a total height of about 7 cm (2.8 in) came in a c. 12 cm (4.7 in) diameter hemispherical injection-molded thermoplastic casing featuring one central push button. As noted above, the device was based on an earlier trackball-like device (also named Rollkugel) that was embedded into radar flight control desks. This trackball had been originally developed by a team led by Rainer Mallebrein [de] at Telefunken Konstanz for the German Bundesanstalt für Flugsicherung [de] (Federal Air Traffic Control). It was part of the corresponding workstation system SAP 300 and the terminal SIG 3001, which had been designed and developed since 1963. Development for the TR 440 main frame began in 1965. This led to the development of the TR 86 process computer system with its SIG 100-86 terminal. Inspired by a discussion with a university customer, Mallebrein came up with the idea of "reversing" the existing Rollkugel trackball into a moveable mouse-like device in 1966, so that customers did not have to be bothered with mounting holes for the earlier trackball device. The device was finished in early 1968, and together with light pens and trackballs, it was commercially offered as an optional input device for their system starting later that year. Not all customers opted to buy the device, which added costs of DM 1,500 per piece to the already up to 20-million DM deal for the main frame, of which only a total of 46 systems were sold or leased. They were installed at more than 20 German universities including RWTH Aachen, Technical University Berlin, University of Stuttgart and Konstanz. Several Rollkugel mice installed at the Leibniz Supercomputing Centre in Munich in 1972 are well preserved in a museum, two others survived in a museum at Stuttgart University, two in Hamburg, the one from Aachen at the Computer History Museum in the US, and yet another sample was recently donated to the Heinz Nixdorf MuseumsForum (HNF) in Paderborn. Anecdotal reports claim that Telefunken's attempt to patent the device was rejected by the German Patent Office due to lack of inventiveness. For the air traffic control system, the Mallebrein team had already developed a precursor to touch screens in form of an ultrasonic-curtain-based pointing device in front of the display. In 1970, they developed a device named "Touchinput-Einrichtung" ("touch input device") based on a conductively coated glass screen. The Xerox Alto was one of the first computers designed for individual use in 1973 and is regarded as the first modern computer to use a mouse. Alan Kay designed the 16-by-16 mouse cursor icon with its left edge vertical and right edge 45-degrees so it displays well on the bitmap.Inspired by PARC's Alto, the Lilith, a computer which had been developed by a team around Niklaus Wirth at ETH Zürich between 1978 and 1980, provided a mouse as well. The third marketed version of an integrated mouse shipped as a part of a computer and intended for personal computer navigation came with the Xerox 8010 Star in 1981. By 1982, the Xerox 8010 was probably the best-known computer with a mouse. The Sun-1 also came with a mouse, and the forthcoming Apple Lisa was rumored to use one, but the peripheral remained obscure; Jack Hawley of The Mouse House reported that one buyer for a large organization believed at first that his company sold lab mice. Hawley, who manufactured mice for Xerox, stated that "Practically, I have the market all to myself right now"; a Hawley mouse cost $415. In 1982, Logitech introduced the P4 Mouse at the Comdex trade show in Las Vegas, its first hardware mouse. That same year Microsoft made the decision to make the MS-DOS program Microsoft Word mouse-compatible, and developed the first PC-compatible mouse. The Microsoft Mouse shipped in 1983, thus beginning the Microsoft Hardware division of the company. However, the mouse remained relatively obscure until the appearance of the Macintosh 128K (which included an updated version of the single-button Lisa Mouse) in 1984, and of the Amiga 1000 and the Atari ST in 1985. A mouse typically controls the motion of a pointer in two dimensions in a graphical user interface (GUI). The mouse turns movements of the hand backward and forward, left and right into equivalent electronic signals that in turn are used to move the pointer. The relative movements of the mouse on the surface are applied to the position of the pointer on the screen, which signals the point where actions of the user take place, so hand movements are replicated by the pointer. Clicking or pointing (stopping movement while the cursor is within the bounds of an area) can select files, programs or actions from a list of names, or (in graphical interfaces) through small images called "icons" and other elements. For example, a text file might be represented by a picture of a paper notebook and clicking while the cursor points at this icon might cause a text editing program to open the file in a window. Different ways of operating the mouse cause specific things to happen in the GUI: Point: stop the motion of the pointer while it is inside the boundaries of what the user wants to interact with. This act of pointing is what the "pointer" and "pointing device" are named after. In web design lingo, pointing is referred to as "hovering". This usage spread to web programming and Android programming, and is now found in many contexts. Click: pressing and releasing a button. (left) Single-click: clicking the main button. (left) Double-click: clicking the button two times in quick succession counts as a different gesture than two separate single clicks. (left) Triple-click: clicking the button three times in quick succession counts as a different gesture than three separate single clicks. Triple clicks are far less common in traditional navigation. Right-click: clicking the secondary button. In modern applications, this frequently opens a context menu. Middle-click: clicking the tertiary button. Drag: pressing and holding a button, and moving the mouse before releasing the button. This is frequently used to move or copy files or other objects via drag and drop; other uses include selecting text and drawing in graphics applications. Mouse button chording or chord clicking: Clicking with more than one button simultaneously. Clicking while simultaneously typing a letter on the keyboard. Clicking and rolling the mouse wheel simultaneously. Clicking while holding down a modifier key. Moving the pointer a long distance: When a practical limit of mouse movement is reached, one lifts up the mouse, brings it to the opposite edge of the working area while it is held above the surface, and then lowers it back onto the working surface. This is often not necessary, because acceleration software detects fast movement, and moves the pointer significantly faster in proportion than for slow mouse motion. Multi-touch: this method is similar to a multi-touch touchpad on a laptop with support for tap input for multiple fingers, the most famous example being the Apple Magic Mouse. The Concept of Gestural Interfaces Gestural interfaces have become an integral part of modern computing, allowing users to interact with their devices in a more intuitive and natural way. In addition to traditional pointing-and-clicking actions, users can now employ gestural inputs to issue commands or perform specific actions. These stylized motions of the mouse cursor, known as "gestures", have the potential to enhance user experience and streamline workflow. Mouse Gestures in Action To illustrate the concept of gestural interfaces, let's consider a drawing program as an example. In this scenario, a user can employ a gesture to delete a shape on the canvas. By rapidly moving the mouse cursor in an "x" motion over the shape, the user can trigger the command to delete the selected shape. This gesture-based interaction enables users to perform actions quickly and efficiently without relying solely on traditional input methods. Challenges and Benefits of Gestural Interfaces While gestural interfaces offer a more immersive and interactive user experience, they also present challenges. One of the primary difficulties lies in the requirement of finer motor control from users. Gestures demand precise movements, which can be more challenging for individuals with limited dexterity or those who are new to this mode of interaction. However, despite these challenges, gestural interfaces have gained popularity due to their ability to simplify complex tasks and improve efficiency. Several gestural conventions have become widely adopted, making them more accessible to users. One such convention is the drag and drop gesture, which has become pervasive across various applications and platforms. The Drag and Drop Gesture The drag and drop gesture is a fundamental gestural convention that enables users to manipulate objects on the screen seamlessly. It involves a series of actions performed by the user: Pressing the mouse button while the cursor hovers over an interface object. Moving the cursor to a different location while holding the button down. Releasing the mouse button to complete the action. This gesture allows users to transfer or rearrange objects effortlessly. For instance, a user can drag and drop a picture representing a file onto an image of a trash can, indicating the intention to delete the file. This intuitive and visual approach to interaction has become synonymous with organizing digital content and simplifying file management tasks. Standard Semantic Gestures In addition to the drag and drop gesture, several other semantic gestures have emerged as standard conventions within the gestural interface paradigm. These gestures serve specific purposes and contribute to a more intuitive user experience. Some of the notable semantic gestures include: Crossing-based goal: This gesture involves crossing a specific boundary or threshold on the screen to trigger an action or complete a task. For example, swiping across the screen to unlock a device or confirm a selection. Menu traversal: Menu traversal gestures facilitate navigation through hierarchical menus or options. Users can perform gestures such as swiping or scrolling to explore different menu levels or activate specific commands. Pointing: Pointing gestures involve positioning the mouse cursor over an object or element to interact with it. This fundamental gesture enables users to select, click, or access contextual menus. Mouseover (pointing or hovering): Mouseover gestures occur when the cursor is positioned over an object without clicking. This action often triggers a visual change or displays additional information about the object, providing users with real-time feedback. These standard semantic gestures, along with the drag and drop convention, form the building blocks of gestural interfaces, allowing users to interact with digital content using intuitive and natural movements. At the end of 20th century, digitizer mice (puck) with magnifying glass was used with AutoCAD for the digitizations of blueprints. Other uses of the mouse's input occur commonly in special application domains. In interactive three-dimensional graphics, the mouse's motion often translates directly into changes in the virtual objects' or camera's orientation. For example, in the first-person shooter genre of games (see below), players usually employ the mouse to control the direction in which the virtual player's "head" faces: moving the mouse up will cause the player to look up, revealing the view above the player's head. A related function makes an image of an object rotate so that all sides can be examined. 3D design and animation software often modally chord many different combinations to allow objects and cameras to be rotated and moved through space with the few axes of movement mice can detect. When mice have more than one button, the software may assign different functions to each button. Often, the primary (leftmost in a right-handed configuration) button on the mouse will select items, and the secondary (rightmost in a right-handed) button will bring up a menu of alternative actions applicable to that item. For example, on platforms with more than one button, the Mozilla web browser will follow a link in response to a primary button click, will bring up a contextual menu of alternative actions for that link in response to a secondary-button click, and will often open the link in a new tab or window in response to a click with the tertiary (middle) mouse button. The German company Telefunken published on their early ball mouse on 2 October 1968. Telefunken's mouse was sold as optional equipment for their computer systems. Bill English, builder of Engelbart's original mouse, created a ball mouse in 1972 while working for Xerox PARC. The ball mouse replaced the external wheels with a single ball that could rotate in any direction. It came as part of the hardware package of the Xerox Alto computer. Perpendicular chopper wheels housed inside the mouse's body chopped beams of light on the way to light sensors, thus detecting in their turn the motion of the ball. This variant of the mouse resembled an inverted trackball and became the predominant form used with personal computers throughout the 1980s and 1990s. The Xerox PARC group also settled on the modern technique of using both hands to type on a full-size keyboard and grabbing the mouse when required. The ball mouse has two freely rotating rollers. These are located 90 degrees apart. One roller detects the forward-backward motion of the mouse and the other the left-right motion. Opposite the two rollers is a third one (white, in the photo, at 45 degrees) that is spring-loaded to push the ball against the other two rollers. Each roller is on the same shaft as an encoder wheel that has slotted edges; the slots interrupt infrared light beams to generate electrical pulses that represent wheel movement. Each wheel's disc has a pair of light beams, located so that a given beam becomes interrupted or again starts to pass light freely when the other beam of the pair is about halfway between changes. Simple logic circuits interpret the relative timing to indicate which direction the wheel is rotating. This incremental rotary encoder scheme is sometimes called quadrature encoding of the wheel rotation, as the two optical sensors produce signals that are in approximately quadrature phase. The mouse sends these signals to the computer system via the mouse cable, directly as logic signals in very old mice such as the Xerox mice, and via a data-formatting IC in modern mice. The driver software in the system converts the signals into motion of the mouse cursor along X and Y axes on the computer screen. The ball is mostly steel, with a precision spherical rubber surface. The weight of the ball, given an appropriate working surface under the mouse, provides a reliable grip so the mouse's movement is transmitted accurately. Ball mice and wheel mice were manufactured for Xerox by Jack Hawley, doing business as The Mouse House in Berkeley, California, starting in 1975. Based on another invention by Jack Hawley, proprietor of the Mouse House, Honeywell produced another type of mechanical mouse. Instead of a ball, it had two wheels rotating at off axes. Key Tronic later produced a similar product. Modern computer mice took form at the École Polytechnique Fédérale de Lausanne (EPFL) under the inspiration of Professor Jean-Daniel Nicoud and at the hands of engineer and watchmaker André Guignard. This new design incorporated a single hard rubber mouseball and three buttons, and remained a common design until the mainstream adoption of the scroll-wheel mouse during the 1990s. In 1985, René Sommer added a microprocessor to Nicoud's and Guignard's design. Through this innovation, Sommer is credited with inventing a significant component of the mouse, which made it more "intelligent"; though optical mice from Mouse Systems had incorporated microprocessors by 1984. Another type of mechanical mouse, the "analog mouse" (now generally regarded as obsolete), uses potentiometers rather than encoder wheels, and is typically designed to be plug compatible with an analog joystick. The "Color Mouse", originally marketed by RadioShack for their Color Computer (but also usable on MS-DOS machines equipped with analog joystick ports, provided the software accepted joystick input) was the best-known example. Early optical mice relied entirely on one or more light-emitting diodes (LEDs) and an imaging array of photodiodes to detect movement relative to the underlying surface, eschewing the internal moving parts a mechanical mouse uses in addition to its optics. A laser mouse is an optical mouse that uses coherent (laser) light. The earliest optical mice detected movement on pre-printed mousepad surfaces, whereas the modern LED optical mouse works on most opaque diffuse surfaces; it is usually unable to detect movement on specular surfaces like polished stone. Laser diodes provide good resolution and precision, improving performance on opaque specular surfaces. Later, more surface-independent optical mice use an optoelectronic sensor (essentially, a tiny low-resolution video camera) to take successive images of the surface on which the mouse operates. Battery powered, wireless optical mice flash the LED intermittently to save power, and only glow steadily when movement is detected. Often called "air mice" since they do not require a surface to operate, inertial mice use a tuning fork or other accelerometer (US Patent 4787051) to detect rotary movement for every axis supported. The most common models (manufactured by Logitech and Gyration) work using 2 degrees of rotational freedom and are insensitive to spatial translation. The user requires only small wrist rotations to move the cursor, reducing user fatigue or "gorilla arm". Usually cordless, they often have a switch to deactivate the movement circuitry between use, allowing the user freedom of movement without affecting the cursor position. A patent for an inertial mouse claims that such mice consume less power than optically based mice, and offer increased sensitivity, reduced weight and increased ease-of-use. In combination with a wireless keyboard an inertial mouse can offer alternative ergonomic arrangements which do not require a flat work surface, potentially alleviating some types of repetitive motion injuries related to workstation posture. A 3D mouse is a computer input device for viewport interaction with at least three degrees of freedom (DoF), e.g. in 3D computer graphics software for manipulating virtual objects, navigating in the viewport, defining camera paths, posing, and desktop motion capture. 3D mice can also be used as spatial controllers for video game interaction, e.g. SpaceOrb 360. To perform such different tasks the used transfer function and the device stiffness are essential for efficient interaction. The virtual motion is connected to the 3D mouse control handle via a transfer function. Position control means that the virtual position and orientation is proportional to the mouse handle's deflection whereas velocity control means that translation and rotation velocity of the controlled object is proportional to the handle deflection. A further essential property of a transfer function is its interaction metaphor: Object-in-hand metaphor: An exterocentrical metaphor whereby the scene moves in correspondence with the input device. If the handle of the input device is twisted clockwise the scene rotates clockwise. If the handle is moved left the scene shifts left, and so on. Camera-in-hand metaphor: An egocentrical metaphor whereby the user's view is controlled by direct movement of a virtual camera. If the handle is twisted clockwise the scene rotates counter-clockwise. If the handle is moved left the scene shifts right, and so on. Ware and Osborne performed an experiment investigating these metaphors whereby it was shown that there is no single best metaphor. For manipulation tasks, the object-in-hand metaphor was superior, whereas for navigation tasks the camera-in-hand metaphor was superior. Zhai used and the following three categories for device stiffness: Isotonic Input: An input device with zero stiffness, that is, there is no self-centering effect. Elastic Input: A device with some stiffness, that is, the forces on the handle are proportional to the deflections. Isometric Input: An elastic input device with infinite stiffness, that is, the device handle does not allow any deflection but records force and torque. Logitech 3D Mouse (1990) was the first ultrasonic mouse and is an example of an isotonic 3D mouse having six degrees of freedom (6DoF). Isotonic devices have also been developed with less than 6DoF, e.g. the Inspector at Technical University of Denmark (5DoF input). Other examples of isotonic 3D mice are motion controllers, i.e. is a type of game controller that typically uses accelerometers to track motion. Motion tracking systems are also used for motion capture e.g. in the film industry, although that these tracking systems are not 3D mice in a strict sense, because motion capture only means recording 3D motion and not 3D interaction. Early 3D mice for velocity control were almost ideally isometric, e.g. SpaceBall 1003, 2003, 3003, and a device developed at Deutsches Zentrum für Luft und Raumfahrt (DLR), cf. US patent US4589810A. At DLR an elastic 6DoF sensor was developed that was used in Logitech's SpaceMouse and in the products of 3DConnexion. SpaceBall 4000 FLX has a maximum deflection of approximately 3 mm (0.12 in) at a maximum force of approximately 10N, that is, a stiffness of approximately 33 N/cm (19 lbf/in). SpaceMouse has a maximum deflection of 1.5 mm (0.059 in) at a maximum force of 4.4 N (0.99 lbf), that is, a stiffness of approximately 30 N/cm (17 lbf/in). Taking this development further, the softly elastic Sundinlabs SpaceCat was developed. SpaceCat has a maximum translational deflection of approximately 15 mm (0.59 in) and maximum rotational deflection of approximately 30° at a maximum force less than 2N, that is, a stiffness of approximately 1.3 N/cm (0.74 lbf/in). With SpaceCat Sundin and Fjeld reviewed five comparative experiments performed with different device stiffness and transfer functions and performed a further study comparing 6DoF softly elastic position control with 6DoF stiffly elastic velocity control in a positioning task. They concluded that for positioning tasks position control is to be preferred over velocity control. They could further conjecture the following two types of preferred 3D mouse usage: Positioning, manipulation, and docking using isotonic or softly elastic position control and an object-in-hand metaphor. Navigation using softly or stiffly elastic rate control and a camera-in-hand metaphor. 3DConnexion's 3D mice have been commercially successful over decades. They are used in combination with the conventional mouse for CAD. The Space Mouse is used to orient the target object or change the viewpoint with the non-dominant hand, whereas the dominant hand operates the computer mouse for conventional CAD GUI operation. This is a kind of space-multiplexed input where the 6 DoF input device acts as a graspable user interface that is always connected to the view port. With force feedback the device stiffness can dynamically be adapted to the task just performed by the user, e.g. performing positioning tasks with less stiffness than navigation tasks. Logitech spacemouse 3D. On display at the Bolo Computer Museum, EPFL, Lausanne Silicon Graphics SpaceBall model 1003 (1988), allowing manipulation of objects with six degrees of freedom Logitech 3D Mouse (1990), the first ultrasonic mouse A modern six-degrees-of-freedom (6 DOF) 3D mouse (2007) Mechanism of the modern 6 DOF mouse consisting of infrared LEDs and detectors with occluders that move with the ball In 2000, Logitech introduced a "tactile mouse" known as the "iFeel Mouse" developed by Immersion Corporation that contained a small actuator to enable the mouse to generate simulated physical sensations. Such a mouse can augment user-interfaces with haptic feedback, such as giving feedback when crossing a window boundary. To surf the internet by touch-enabled mouse was first developed in 1996 and first implemented commercially by the Wingman Force Feedback Mouse. It requires the user to be able to feel depth or hardness; this ability was realized with the first electrorheological tactile mice but never marketed. Tablet digitizers are sometimes used with accessories called pucks, devices which rely on absolute positioning, but can be configured for sufficiently mouse-like relative tracking that they are sometimes marketed as mice. As the name suggests, this type of mouse is intended to provide optimum comfort and avoid injuries such as carpal tunnel syndrome, arthritis, and other repetitive strain injuries. It is designed to fit natural hand position and movements, to reduce discomfort. When holding a typical mouse, the ulna and radius bones on the arm are crossed. Some designs attempt to place the palm more vertically, so the bones take more natural parallel position. Increasing mouse height and angling the mouse topcase can improve wrist posture without negatively affecting performance. Some limit wrist movement, encouraging arm movement instead, that may be less precise but more optimal from the health point of view. A mouse may be angled from the thumb downward to the opposite side – this is known to reduce wrist pronation. However such optimizations make the mouse right or left hand specific, making more problematic to change the tired hand. Time has criticized manufacturers for offering few or no left-handed ergonomic mice: "Oftentimes I felt like I was dealing with someone who'd never actually met a left-handed person before." Another solution is a pointing bar device. The so-called roller bar mouse is positioned snugly in front of the keyboard, thus allowing bi-manual accessibility. These mice are specifically designed for use in computer games. They typically employ a wider array of controls and buttons and have designs that differ radically from traditional mice. They may also have decorative monochrome or programmable RGB LED lighting. The additional buttons can often be used for changing the sensitivity of the mouse or they can be assigned (programmed) to macros (i.e., for opening a program or for use instead of a key combination). It is also common for game mice, especially those designed for use in real-time strategy games such as StarCraft, or in multiplayer online battle arena games such as League of Legends to have a relatively high sensitivity, measured in dots per inch (DPI), which can be as high as 25,600. DPI and CPI are the same values that refer to the mouse's sensitivity. DPI is a misnomer used in the gaming world, and many manufacturers use it to refer to CPI, counts per inch. Some advanced mice from gaming manufacturers also allow users to adjust the weight of the mouse by adding or subtracting weights to allow for easier control. Ergonomic quality is also an important factor in gaming mouse, as extended gameplay times may render further use of the mouse to be uncomfortable. Some mice have been designed to have adjustable features such as removable and/or elongated palm rests, horizontally adjustable thumb rests and pinky rests. Some mice may include several different rests with their products to ensure comfort for a wider range of target consumers. Gaming mice are held by gamers in three styles of grip: Palm Grip: the hand rests on the mouse, with extended fingers. Claw Grip: palm rests on the mouse, bent fingers. Finger-Tip Grip: bent fingers, palm does not touch the mouse. To transmit their input, typical cabled mice use a thin electrical cord terminating in a standard connector, such as RS-232C, PS/2, ADB, or USB. Cordless mice instead transmit data via infrared radiation (see IrDA) or radio (including Bluetooth), although many such cordless interfaces are themselves connected through the aforementioned wired serial buses. While the electrical interface and the format of the data transmitted by commonly available mice is currently standardized on USB, in the past it varied between different manufacturers. A bus mouse used a dedicated interface card for connection to an IBM PC or compatible computer. Mouse use in DOS applications became more common after the introduction of the Microsoft Mouse, largely because Microsoft provided an open standard for communication between applications and mouse driver software. Thus, any application written to use the Microsoft standard could use a mouse with a driver that implements the same API, even if the mouse hardware itself was incompatible with Microsoft's. This driver provides the state of the buttons and the distance the mouse has moved in units that its documentation calls "mickeys". In the 1970s, the Xerox Alto mouse, and in the 1980s the Xerox optical mouse, used a quadrature-encoded X and Y interface. This two-bit encoding per dimension had the property that only one bit of the two would change at a time, like a Gray code or Johnson counter, so that the transitions would not be misinterpreted when asynchronously sampled. The earliest mass-market mice, such as on the original Macintosh, Amiga, and Atari ST mice used a D-subminiature 9-pin connector to send the quadrature-encoded X and Y axis signals directly, plus one pin per mouse button. The mouse was a simple optomechanical device, and the decoding circuitry was all in the main computer. The DE-9 connectors were designed to be electrically compatible with the joysticks popular on numerous 8-bit systems, such as the Commodore 64 and the Atari 2600. Although the ports could be used for both purposes, the signals must be interpreted differently. As a result, plugging a mouse into a joystick port causes the "joystick" to continuously move in some direction, even if the mouse stays still, whereas plugging a joystick into a mouse port causes the "mouse" to only be able to move a single pixel in each direction. Because the IBM PC did not have a quadrature decoder built in, early PC mice used the RS-232C serial port to communicate encoded mouse movements, as well as provide power to the mouse's circuits. The Mouse Systems Corporation (MSC) version used a five-byte protocol and supported three buttons. The Microsoft version used a three-byte protocol and supported two buttons. Due to the incompatibility between the two protocols, some manufacturers sold serial mice with a mode switch: "PC" for MSC mode, "MS" for Microsoft mode. In 1986 Apple first implemented the Apple Desktop Bus allowing the daisy chaining of up to 16 devices, including mice and other devices on the same bus with no configuration whatsoever. Featuring only a single data pin, the bus used a purely polled approach to device communications and survived as the standard on mainstream models (including a number of non-Apple workstations) until 1998 when Apple's iMac line of computers joined the industry-wide switch to using USB. Beginning with the Bronze Keyboard PowerBook G3 in May 1999, Apple dropped the external ADB port in favor of USB, but retained an internal ADB connection in the PowerBook G4 for communication with its built-in keyboard and trackpad until early 2005. With the arrival of the IBM PS/2 personal-computer series in 1987, IBM introduced the eponymous PS/2 port for mice and keyboards, which other manufacturers rapidly adopted. The most visible change was the use of a round 6-pin mini-DIN, in lieu of the former 5-pin MIDI style full sized DIN 41524 connector. In default mode (called stream mode) a PS/2 mouse communicates motion, and the state of each button, by means of 3-byte packets. For any motion, button press or button release event, a PS/2 mouse sends, over a bi-directional serial port, a sequence of three bytes, with the following format: Here, XS and YS represent the sign bits of the movement vectors, XV and YV indicate an overflow in the respective vector component, and LB, MB and RB indicate the status of the left, middle and right mouse buttons (1 = pressed). PS/2 mice also understand several commands for reset and self-test, switching between different operating modes, and changing the resolution of the reported motion vectors. A Microsoft IntelliMouse relies on an extension of the PS/2 protocol: the ImPS/2 or IMPS/2 protocol (the abbreviation combines the concepts of "IntelliMouse" and "PS/2"). It initially operates in standard PS/2 format, for backward compatibility. After the host sends a special command sequence, it switches to an extended format in which a fourth byte carries information about wheel movements. The IntelliMouse Explorer works analogously, with the difference that its 4-byte packets also allow for two additional buttons (for a total of five). Mouse vendors also use other extended formats, often without providing public documentation. The Typhoon mouse uses 6-byte packets which can appear as a sequence of two standard 3-byte packets, such that an ordinary PS/2 driver can handle them. For 3D (or 6-degree-of-freedom) input, vendors have made many extensions both to the hardware and to software. In the late 1990s, Logitech created ultrasound based tracking which gave 3D input to a few millimeters accuracy, which worked well as an input device but failed as a profitable product. In 2008, Motion4U introduced its "OptiBurst" system using IR tracking for use as a Maya (graphics software) plugin. Almost all wired mice today use USB and the USB human interface device class for communication. Cordless or wireless mice transmit data via radio. Some mice connect to the computer through Bluetooth or Wi-Fi, while others use a receiver that plugs into the computer, for example through a USB port. Many mice that use a USB receiver have a storage compartment for it inside the mouse. Some "nano receivers" are designed to be small enough to remain plugged into a laptop during transport, while still being large enough to easily remove. The Logitech Metaphor, the first wireless mouse (1984). On display at the Musée Bolo, EPFL An older Microsoft wireless mouse made for notebook computers Microsoft Bluetooth Mobile Mouse 3600 MS-DOS and Windows 1.0 support connecting a mouse such as a Microsoft Mouse via multiple interfaces: BallPoint, Bus (InPort), Serial port or PS/2. Windows 98 added built-in support for USB Human Interface Device class (USB HID), with native vertical scrolling support. Windows 2000 and Windows Me expanded this built-in support to 5-button mice. Windows XP Service Pack 2 introduced a Bluetooth stack, allowing Bluetooth mice to be used without any USB receivers. Windows Vista added native support for horizontal scrolling and standardized wheel movement granularity for finer scrolling. Windows 8 introduced BLE (Bluetooth Low Energy) mouse/HID support. Some systems allow two or more mice to be used at once as input devices. Late-1980s era home computers such as the Amiga used this to allow computer games with two players interacting on the same computer (Lemmings and The Settlers for example). The same idea is sometimes used in collaborative software, e.g. to simulate a whiteboard that multiple users can draw on without passing a single mouse around. Microsoft Windows, since Windows 98, has supported multiple simultaneous pointing devices. Because Windows only provides a single screen cursor, using more than one device at the same time requires cooperation of users or applications designed for multiple input devices. Multiple mice are often used in multi-user gaming in addition to specially designed devices that provide several input interfaces. Windows also has full support for multiple input/mouse configurations for multi-user environments. Starting with Windows XP, Microsoft introduced an SDK for developing applications that allow multiple input devices to be used at the same time with independent cursors and independent input points. However, it no longer appears to be available. The introduction of Windows Vista and Microsoft Surface (now known as Microsoft PixelSense) introduced a new set of input APIs that were adopted into Windows 7, allowing for 50 points/cursors, all controlled by independent users. The new input points provide traditional mouse input; however, they were designed with other input technologies like touch and image in mind. They inherently offer 3D coordinates along with pressure, size, tilt, angle, mask, and even an image bitmap to see and recognize the input point/object on the screen. As of 2009[update], Linux distributions and other operating systems that use X.Org, such as OpenSolaris and FreeBSD, support 255 cursors/input points through Multi-Pointer X. However, currently no window managers support Multi-Pointer X leaving it relegated to custom software usage. There have also been propositions of having a single operator use two mice simultaneously as a more sophisticated means of controlling various graphics and multimedia applications. Mouse buttons are microswitches which can be pressed to select or interact with an element of a graphical user interface, producing a distinctive clicking sound. Since around the late 1990s, the three-button scrollmouse has become the de facto standard. Users most commonly employ the second button to invoke a contextual menu in the computer's software user interface, which contains options specifically tailored to the interface element over which the mouse cursor currently sits. By default, the primary mouse button sits located on the left-hand side of the mouse, for the benefit of right-handed users; left-handed users can usually reverse this configuration via software. Nearly all mice now have an integrated input primarily intended for scrolling on top, usually a single-axis digital wheel or rocker switch which can also be depressed to act as a third button. Though less common, many mice instead have two-axis inputs such as a tiltable wheel, trackball, or touchpad. Those with a trackball may be designed to stay stationary, using the trackball instead of moving the mouse. Mickeys per second is a unit of measurement for the speed and movement direction of a computer mouse, where direction is often expressed as "horizontal" versus "vertical" mickey count. However, speed can also refer to the ratio between how many pixels the cursor moves on the screen and how far the mouse moves on the mouse pad, which may be expressed as pixels per mickey, pixels per inch, or pixels per centimeter. The computer industry often measures mouse sensitivity in terms of counts per inch (CPI), commonly expressed as dots per inch (DPI) – the number of steps the mouse will report when it moves one inch. In early mice, this specification was called pulses per inch (ppi). The mickey originally referred to one of these counts, or one resolvable step of motion. If the default mouse-tracking condition involves moving the cursor by one screen-pixel or dot on-screen per reported step, then the CPI does equate to DPI: dots of cursor motion per inch of mouse motion. The CPI or DPI as reported by manufacturers depends on how they make the mouse; the higher the CPI, the faster the cursor moves with mouse movement. However, software can adjust the mouse sensitivity, making the cursor move faster or slower than its CPI. As of 2007,[update] software can change the speed of the cursor dynamically, taking into account the mouse's absolute speed and the movement from the last stop-point. In most software, an example being the Windows platforms, this setting is named "speed", referring to "cursor precision". However, some operating systems name this setting "acceleration", the typical Apple OS designation. This term is incorrect. Mouse acceleration in most mouse software refers to the change in speed of the cursor over time while the mouse movement is constant.[clarification needed][citation needed] For simple software, when the mouse starts to move, the software will count the number of "counts" or "mickeys" received from the mouse and will move the cursor across the screen by that number of pixels (or multiplied by a rate factor, typically less than 1). The cursor will move slowly on the screen, with good precision. When the movement of the mouse passes the value set for some threshold, the software will start to move the cursor faster, with a greater rate factor. Usually, the user can set the value of the second rate factor by changing the "acceleration" setting. Operating systems sometimes apply acceleration, referred to as "ballistics", to the motion reported by the mouse. For example, versions of Windows prior to Windows XP doubled reported values above a configurable threshold, and then optionally doubled them again above a second configurable threshold. These doublings applied separately in the X and Y directions, resulting in very nonlinear response. Engelbart's original mouse did not require a mousepad; the mouse had two large wheels which could roll on virtually any surface. However, most subsequent mechanical mice starting with the steel roller ball mouse have required a mousepad for optimal performance. The mousepad, the most common mouse accessory, appears most commonly in conjunction with mechanical mice, because to roll smoothly the ball requires more friction than common desk surfaces usually provide. So-called "hard mousepads" for gamers or optical/laser mice also exist. Most optical and laser mice do not require a pad, the notable exception being early optical mice which relied on a grid on the pad to detect movement (e.g. Mouse Systems). Whether to use a hard or soft mousepad with an optical mouse is largely a matter of personal preference. One exception occurs when the desk surface creates problems for the optical or laser tracking, for example, a transparent or reflective surface, such as glass. Some mice also come with small "pads" attached to the bottom surface, also called mouse feet or mouse skates, that help the user slide the mouse smoothly across surfaces. Around 1981, Xerox included mice with its Xerox Star, based on the mouse used in the 1970s on the Alto computer at Xerox PARC. Sun Microsystems, Symbolics, Lisp Machines Inc., and Tektronix also shipped workstations with mice, starting in about 1981. Later, inspired by the Star, Apple Computer released the Apple Lisa, which also used a mouse. However, none of these products achieved large-scale success. Only with the release of the Apple Macintosh in 1984 did the mouse see widespread use. The Macintosh design, commercially successful and technically influential, led many other vendors to begin producing mice or including them with their other computer products (by 1986, Atari ST, Amiga, Windows 1.0, GEOS for the Commodore 64, and the Apple IIGS). The widespread adoption of graphical user interfaces in the software of the 1980s and 1990s made mice all but indispensable for controlling computers. In November 2008, Logitech built their billionth mouse. The device often functions as an interface for PC-based computer games and sometimes for video game consoles. The Classic Mac OS Desk Accessory Puzzle in 1984 was the first game designed specifically for a mouse. FPSs naturally lend themselves to separate and simultaneous control of the player's movement and aim, and on computers this has traditionally been achieved with a combination of keyboard and mouse. Players use the X-axis of the mouse for looking (or turning) left and right, and the Y-axis for looking up and down; the keyboard is used for movement and supplemental inputs. Many shooting genre players prefer a mouse over a gamepad analog stick because the wide range of motion offered by a mouse allows for faster and more varied control. Although an analog stick allows the player more granular control, it is poor for certain movements, as the player's input is relayed based on a vector of both the stick's direction and magnitude. Thus, a small but fast movement (known as "flick-shotting") using a gamepad requires the player to quickly move the stick from its rest position to the edge and back again in quick succession, a difficult maneuver. In addition the stick also has a finite magnitude; if the player is currently using the stick to move at a non-zero velocity their ability to increase the rate of movement of the camera is further limited based on the position their displaced stick was already at before executing the maneuver. The effect of this is that a mouse is well suited not only to small, precise movements but also to large, quick movements and immediate, responsive movements; all of which are important in shooter gaming. This advantage also extends in varying degrees to similar game styles such as third-person shooters. Some incorrectly ported games or game engines have acceleration and interpolation curves which unintentionally produce excessive, irregular, or even negative acceleration when used with a mouse instead of their native platform's non-mouse default input device.[citation needed] Depending on how deeply hardcoded this misbehavior is, internal user patches or external 3rd-party software may be able to fix it. Individual game engines will also have their own sensitivities.[citation needed] This often restricts one from taking a game's existing sensitivity, transferring it to another, and acquiring the same 360 rotational measurements. A sensitivity converter is required in order to translate rotational movements properly. Due to their similarity to the WIMP desktop metaphor interface for which mice were originally designed, and to their own tabletop game origins, computer strategy games are most commonly played with mice. In particular, real-time strategy and MOBA games usually require the use of a mouse. The left button usually controls primary fire. If the game supports multiple fire modes, the right button often provides secondary fire from the selected weapon. Games with only a single fire mode will generally map secondary fire to aim down the weapon sights. In some games, the right button may also invoke accessories for a particular weapon, such as allowing access to the scope of a sniper rifle or allowing the mounting of a bayonet or silencer. Players can use a scroll wheel for changing weapons (or for controlling scope-zoom magnification, in older games). On most first person shooter games, programming may also assign more functions to additional buttons on mice with more than three controls. A keyboard usually controls movement (for example, WASD for moving forward, left, backward, and right, respectively) and other functions such as changing posture. Since the mouse serves for aiming, a mouse that tracks movement accurately and with less lag (latency) will give a player an advantage over players with less accurate or slower mice. In some cases the right mouse button may be used to move the player forward, either in lieu of, or in conjunction with the typical WASD configuration. Many games provide players with the option of mapping their own choice of a key or button to a certain control. An early technique of players, circle strafing, saw a player continuously strafing while aiming and shooting at an opponent by walking in circle around the opponent with the opponent at the center of the circle. Players could achieve this by holding down a key for strafing while continuously aiming the mouse toward the opponent. Games using mice for input are so popular that many manufacturers make mice specifically for gaming. Such mice may feature adjustable weights, high-resolution optical or laser components, additional buttons, ergonomic shape, and other features such as adjustable CPI. Mouse Bungees are typically used with gaming mice because it eliminates the annoyance of the cable. Many games, such as first- or third-person shooters, have a setting named "invert mouse" or similar (not to be confused with "button inversion", sometimes performed by left-handed users) which allows the user to look downward by moving the mouse forward and upward by moving the mouse backward (the opposite of non-inverted movement). This control system resembles that of aircraft control sticks, where pulling back causes pitch up and pushing forward causes pitch down; computer joysticks also typically emulate this control-configuration. After id Software's commercial hit of Doom, which did not support vertical aiming, competitor Bungie's Marathon became the first first-person shooter to support using the mouse to aim up and down. Games using the Build engine had an option to invert the Y-axis. The "invert" feature actually made the mouse behave in a manner that users now[update] regard as non-inverted (by default, moving mouse forward resulted in looking down). Soon after, id Software released Quake, which introduced the invert feature as users now[update] know it. In 1988, the VTech Socrates educational video game console featured a wireless mouse with an attached mouse pad as an optional controller used for some games. In the early 1990s, the Super Nintendo Entertainment System video game system featured a mouse in addition to its controllers. A mouse was also released for the Nintendo 64, although it was only released in Japan. The 1992 game Mario Paint in particular used the mouse's capabilities, as did its Japanese-only successor Mario Artist on the N64 for its 64DD disk drive peripheral in 1999. Sega released official mice for their Genesis/Mega Drive, Saturn and Dreamcast consoles. NEC sold official mice for its PC Engine and PC-FX consoles. Sony released an official mouse product for the PlayStation console, included one along with the Linux for PlayStation 2 kit, as well as allowing owners to use virtually any USB mouse with the PS2, PS3, and PS4. Nintendo's Wii also had this feature implemented in a later software update, and this support was retained on its successor, the Wii U. Microsoft's Xbox line of game consoles (which used operaring systems based on modified versions of Windows NT) also had universal-wide mouse support using USB. Electronics portal Computer accessibility Footmouse Graphics tablet Gesture recognition Human–computer interaction (HCI) Mouse keys Mouse tracking Optical trackpad Pointing stick Rotational mouse General dictionaries usually mention mouses as a possible alternative plural, but technical dictionaries usually omit this rare form, e.g. Webopedia, FOLDOC, Netlingo. The 4-bit[A][B] rotary encoders (MCB CC27E08[A][B]) used in the Telefunken Rollkugel RKS 100-86 provide 14 states repeated either 4[A] or 5[B] times per revolution for an effectively resulting resolution of c. 35.6 dpi[A] or c. 43.5 dpi[B], respectively. Mallebrein erroneously remembers them even as 5-bit encoders.[C] The 14-cyclic unit-distance codes described in the first two sources are identical to a 4-bit Gray code with the two outmost states (0, 15) eliminated. At first glance the documented codes seem to differ between the two sources; in fact they are identical, but use inverted definitions of the 0/1 states and the direction of rotation: "Computer Mouse: Complete History". 2021-01-04. English, William Kirk; Engelbart, Douglas C.; Huddart, Bonnie (July 1965). Computer-Aided Display Control (Final Report). Menlo Park: Stanford Research Institute. p. 6. Retrieved 2017-01-03. Oxford English Dictionary, "mouse", sense 13 Bardini, Thierry (2000). Bootstrapping: Douglas Engelbart, Coevolution, and the Origins of Personal Computing. Stanford: Stanford University Press. p. 98. ISBN 978-0-8047-3871-2. Markoff, John Gregory (2005) [2004-06-11]. "2. Augmentation". What the Dormouse Said: How the Sixties Counterculture Shaped the Personal Computer Industry. Penguin Books / Penguin Random House LLC. pp. 123–124. ISBN 978-1-101-20108-4. Retrieved 2021-08-26. pp. 123–124: […] Although it is commonly believed that the story of how the mouse got its name has been lost in history, Roger Bates, who was a young hardware designer working for Bill English, has a clear recollection of how the name was chosen. […] He remembers that what today is called the cursor on the screen was at the time called a "CAT". Bates has forgotten what CAT stood for, and no one else seems to remember either, but in hindseight, it seems obvious that a CAT would chase the tailed mouse on the desktop. […] (336 pages) Markoff, John Gregory (2013-07-03). "Douglas C. Engelbart, 1925–2013: Computer Visionary Who Invented the Mouse". The New York Times. Archived from the original on 2021-06-15. Retrieved 2021-08-26. […] When and under what circumstances the term "the mouse" arose is hard to pin down, but one hardware designer, Roger Bates, has contended that it happened under Mr. English's watch. Mr. Bates was a college sophomore and Mr. English was his mentor at the time. Mr. Bates said the name was a logical extension of the term then used for the cursor on a screen: CAT. Mr. Bates did not remember what CAT stood for, but it seemed to all that the cursor was chasing their tailed desktop device. […] "Definition for Mouse". 2011. Archived from the original on 2019-12-07. Retrieved 2011-07-06. Licklider, J. C. R. (April 1968). "The Computer as a Communication Device" (PDF). Science and Technology. Archived (PDF) from the original on 2000-08-15. Copping, Jasper (2013-07-11). "Briton: 'I invented the computer mouse 20 years before the Americans'". The Telegraph. Retrieved 2013-07-18. Hill, Peter C. J., ed. (2005-09-16). "RALPH BENJAMIN: An Interview Conducted by Peter C. J. Hill" (Interview). Interview #465. IEEE History Center, The Institute of Electrical and Electronics Engineers, Inc. Retrieved 2013-07-18. Vardalas, J. (1994). "From DATAR to the FP-6000: Technological change in a Canadian industrial context". IEEE Annals of the History of Computing. 16 (2): 20–30. doi:10.1109/85.279228. S2CID 15277748. Ball, Norman R.; Vardalas, John N. (1993), Ferranti-Packard: Pioneers in Canadian Electrical Manufacturing, McGill-Queen's Press, ISBN 978-0-7735-0983-2 "FP-6000 -- From DATAR To The FP-6000". ieee.ca. Archived from the original on 2019-04-04. Retrieved 2021-06-28. "First mouse – CERN Courier". cerncourier.com. Retrieved 2015-06-24. Bardini, Thierry (2000). Bootstrapping: Douglas Engelbart, Coevolution, and the Origins of Personal Computing. Stanford: Stanford University Press. p. 95. ISBN 978-0-8047-3871-2. Ceruzzi, Paul E. (2012). Computing: A Concise History. Cambridge, MA: MIT Press. p. 121. ISBN 978-0-262-31039-0. Rheingold, Howard (2000). The Virtual Community: Homesteading on the Electronic Frontier. Cambridge, MA: MIT Press. p. 64. ISBN 978-0-262-26110-4. Lyon, Matthew; Hafner, Katie (1998). Where Wizards Stay Up Late: The Origins Of The Internet. New York: Simon & Schuster. p. 78. ISBN 978-0-684-87216-2. Hey, Tony; Pápay, Gyuri (2015). The Computing Universe: A Journey through a Revolution. New York: Cambridge University Press. p. 162. ISBN 978-1-316-12322-5. Atkinson, Paul (2010). Computer. London: Reaktion Books. p. 63. ISBN 978-1-86189-737-4. Khazan, Olga (2013-07-03). "Douglas Engelbart, computer visionary and inventor of the mouse, dies at 88". The Washington Post. WP Company. Retrieved 2017-01-18. Markoff, John (2013-07-03). "Computer Visionary Who Invented the Mouse". The New York Times. New York. Retrieved 2017-01-18. Arnold, Laurence (2013-07-03). "Douglas Engelbart, Computer Mouse Creator, Visionary, Dies at 88". Bloomberg. Bloomberg L.P. Retrieved 2017-01-18. Chappell, Bill. "Inventor Of Computer Mouse Dies; Doug Engelbart Was 88". The Two Way: Breaking News from NPR. Washington, D.C.: NPR. Retrieved 2017-01-18. Edwards, Benj (2008-12-09). "The computer mouse turns 40". Macworld. Retrieved 2009-04-16. ""Mouses" vs "mice"". The Ultimate Learn And Resource Center. Retrieved 2017-07-09. Maggie, Shiels (2008-07-17). "Say goodbye to the computer mouse". BBC News. Retrieved 2008-07-17. Engelbart, Douglas C.; Landau; Clegg, Evolving Collective Intelligence "The Demo That Changed the World". Smithsonian Magazine. Archived from the original on 2012-12-28. Retrieved 2013-01-03. Engelbart, Douglas C. (March 1967), Display-Selection Techniques for Text Manipulation, IEEE Transactions on Human Factors in Electronics, pp. 5–15, retrieved 2013-03-26 Engelbart, Christina. "Display-Selection Techniques for Text Manipulation – 1967 (AUGMENT, 133184) – Doug Engelbart Institute". dougengelbart.org. Retrieved 2016-03-15. Neubauer, Günter (1968-10-02). "Sichtgeräte in elektronischen Datenverarbeitungsanlagen" (PDF). Technische Mitteilungen: Beiheft Datenverarbeitung (in German). Vol. 1, no. 2. Berlin, Germany: AEG-Telefunken. pp. 15–18. DK 621.385.832: 681.325. Archived (PDF) from the original on 2021-01-21. Retrieved 2021-08-23. (1+4 pages) "SIG-100 video terminal and mouse". Mountain View, California, US: Computer History Museum. 2011 [1968]. AEG 969.68. Archived from the original on 2021-08-21. Retrieved 2021-08-24. Datenverarbeitung: Informationsblatt – TR 440 Arbeitsplatz – Sichtgerät SIG 100, Tastatur – Fernschreiber FSR 105 – Fernschreibmultiplexer FMP 301 (PDF) (in German) (0671 ed.). Konstanz, Germany: AEG-Telefunken, Fachbereich Informationstechnik. June 1971. pp. 1–4. MPN N31,A2.10. Retrieved 2021-08-24. p. 2: […] Sichtgerät SIG 100 […] Als Zusatzeinrichtung des Datensichtgerätes kann eine Rollkugelsteuerung geliefert werden. Für deren Inbetriebnahme ist jedoch der Besitz einer Tastatur-Sendeelektronik Voraussetzung. Die Rollkugelsteuerung erlaubt es, eine elektronisch eingeblendete Marke "von Hand" an jede beliebige Stelle des Bildschirms zu schieben. Mit ihrer Hilfe ist es möglich, an der gekennzeichneten Stelle eine neue Rechnerinformation sichtbar zu machen oder aber eine bereits vorhandene Information zu ändern, zu löschen oder zu erweitern. […] (4 pages) Bulow, Ralf (2009-04-28). "Auf den Spuren der deutschen Computermaus" [In the footsteps of the German computer mouse]. Heise online (in German). Heise Verlag. Archived from the original on 2021-08-23. Retrieved 2013-01-07. "Wenn die Maus zweimal klingelt". HNF-Blog – Neues von gestern aus der Computergeschichte (in German). Paderborn, Germany: Heinz Nixdorf MuseumsForum. 2016-10-04. Archived from the original on 2021-02-25. Retrieved 2021-08-23. Yacoub, Mousa; Turfa, Majd; Maurer, Fabian (2016-08-19). "2.1 Measurements and Properties". Reverse Engineering of the Computer Mouse RKS 100 (PDF). pp. 2–3, 5. Archived from the original (PDF) on 2017-11-15. Retrieved 2017-11-15. p. 2: […] The Encoders made by MCB transmit rotation through a 4-bit Gray code alternating between 14 possible configurations while only changing one bit each […] The commitment to a Gray code with only 14 possible configurations instead of one with 16 configurations may be caused by limitations on the part of the encoders. Within a full rotation, the encoders cycle through the Gray code for four times, resulting in 56 signals per turn. To rotate the encoders by 90° (14 signals), the RKS needs to be moved by around 10 mm [0.39 in]. While modern encoders use a 2-bit (i.e. 4 configurations) Gray code, the advantage of this 4-bit encoder lies in the detection of missed bit changes. If up to 6 bit changes would pass undetected, it would still be possible to find out the direction the encoder rotated in and then interpolate the movement of the mouse cursor. The Encoders work completely passive and simply connect or disconnect the four data cables from an input cable that can be connected to either ground or a power supply. The button of the RKS works in a similar way using one cable for input and one for output and connecting those while pressed. […] In total, 12 cables are used to connect the RKS to the TR-440 [de] – four data cables for each encoder, one input cable for both encoders, one ground for the upper metal plate, one input for the button and one output for the button. […] (NB. Contains some historical photos. See also: Encoder remarks.) Müller, Jürgen (2021) [2018]. "The first rolling-ball mouse". e-basteln – Solving yesterday's problems today. Hamburg, Germany. Archived from the original on 2021-08-23. Retrieved 2021-08-23. […] The encoders are made by MCB in France, „codeur à contacts" type CC27E08. […] The encoders produce a 4-bit Gray code (only a single bit will change between adjacent states) with 14 states. Also, each individual output maintains its value for at least two successive states; that allows for a somewhat slower time constant on de-bouncing the contacts. […] This sequence is repeated 5 times for a full revolution of the encoder. Since the rubber O-ring on the encoder wheel has a diameter of 13 mm [0.51 in], that makes for a resolution of 5*14 counts / (π*13 mm) = 1.7 counts/mm = 43.5 counts/inch. […] [1] (NB. See also: Encoder remarks.) Mallebrein, Rainer [in German] (2018-02-18). "Oral History of Rainer Mallebrein" (PDF) (Interview) (in German and English). Interviewed by Steinbach, Günter. Singen am Hohentwiel, Germany / Mountain View, California, US: Computer History Museum. CHM Ref: X8517.2018. Archived (PDF) from the original on 2021-01-27. Retrieved 2021-08-23. (18 pages) (NB. See also: Encoder remarks.) Ebner, Susanne (2018-01-24). "Entwickler aus Singen über die Anfänge der Computermaus: "Wir waren der Zeit voraus"" [Singen-based developer about the advent of the computer mouse: "We were ahead of time"]. Leben und Wissen. Südkurier (in German). Konstanz, Germany: Südkurier GmbH. OCLC 1184800329. ZDB-ID 1411183-4 DNB-IDN 019058799. Archived from the original on 2021-03-02. Retrieved 2021-08-22. "Technische Angaben". Telefunken TR440 (PDF) (in German). Ulm, Germany: Telefunken Aktiengesellschaft, Fachbereich Anlagen Informationstechnik. May 1966. pp. 19–20 [20]. AH 5.2 WB 160/1. Archived (PDF) from the original on 2021-09-28. Retrieved 2021-08-24. p. 20: Peripheriegeräte […] Bildschirmarbeitsplatz […] Steuermöglichkeiten […] Eingabetastatur, Funktionstastatur, Rollkugelsteuerung […] (22 pages) Benutzerstation: Sichtgeräte SIG 100, SIG 50 – Fernschreiber FSR 105 – Datenstation DAS 3200 (PDF). System TR 440 (in German) (0372 ed.). Konstanz, Germany: Telefunken Computer GmbH. March 1972. pp. 1–2. MPN N31.A2.10. Retrieved 2020-07-13. […] Sichtgerät SIG 100 […] Beim Sichtgerät lassen sich die Daten leicht über die Tastatur und Positionen über die Rollkugel eingeben. […] Rollkugel […] Als Zusatzeinrichtung des SIG 100 kann eine Rollkugelsteuerung geliefert werden, die es erlaubt, eine elektronisch eingeblendete Marke von Hand an jede beliebige Stelle des Bildschirms zu schieben. […] (6 pages) Holland, Martin (2019-05-14). ""Rollkugel": Erfinder gibt allererste PC-Maus nach Paderborn – Weltweit gibt es nur noch vier Exemplare: Der Erfinder der allerersten Computermaus hat eines der seltenen Geräte nach Nordrhein-Westfalen verschenkt". Heise online (in German). Heise Verlag. Archived from the original on 2020-11-08. Retrieved 2021-08-23. […] Mallebrein hatte die Maus für Telefunken entwickelt, das Unternehmen verkaufte sie ab 1968 zusammen mit seinem damaligen Spitzencomputer TR 440 [de]. Allerdings nur 46 Mal, vor allem an Universitäten, der Rechner war mit bis zu 20 Millionen Mark praktisch unerschwinglich teuer, sagt Mallebrein. […] Seine Maus – für 1500 Mark zu haben – geriet in Vergessenheit. Ein Patent gab es auch nicht. "Wegen zu geringer Erfindungshöhe", stand damals im Schreiben des Patentamts, erinnert sich der Senior. "Über Anwendungsmöglichkeiten war damals gar nicht gesprochen worden, nämlich dass die Maus Mensch-Maschine-Interaktion fahren kann." […] [2] "50 Jahre Computer mit der Maus – Öffentliche Veranstaltung am 5. Dezember auf dem Campus Vaihingen" (Invitation to a plenum discussion) (in German). Stuttgart, Germany: Informatik-Forum Stuttgart (infos e.V.), GI- / ACM-Regionalgruppe Stuttgart / Böblingen, Institut für Visualisierung und Interaktive Systeme der Universität Stuttgart and SFB-TRR 161. 2016-11-28. Archived from the original on 2017-11-15. Retrieved 2017-11-15. Borchers, Detlef Henning [in German] (2016-12-10). "50 Jahre Mensch-Maschine-Interaktion: Finger oder Kugel?". Heise online (in German). Heise Verlag. Archived from the original on 2017-11-15. Retrieved 2017-11-15. "Telefunken's "Rollkugel"". Missoula, Montana, US: oldmouse.com. 2009. Archived from the original on 2021-08-22. Retrieved 2021-08-23. "RKS 100-86 mouse ("Rollkugel")". Mountain View, California, US: Computer History Museum. 2011 [1968]. Item ID 102667911. Archived from the original on 2021-08-23. Retrieved 2021-08-24. "Von Rollkugeln und Mäusen – Präsentation zur Computermaus im HNF" (Press announcement) (in German). Paderborn, Germany: Heinz Nixdorf MuseumsForum. 2019-05-14. Archived from the original on 2021-08-23. Retrieved 2021-08-24. Gold, Virginia. "ACM Turing Award Goes to Creator of First Modern Personal Computer" (PDF). Association for Computing Machinery. Archived from the original on 2010-03-11. Retrieved 2011-01-11. "A brief history of the mouse cursor, from Engelbart to PARC". A brief history of the mouse cursor, from Engelbart to PARC. Retrieved 2024-02-04. Markoff, John (1982-05-10). "Computer mice are scurrying out of R&D labs". InfoWorld. pp. 10–11. Retrieved 2015-08-26. "Logitech History, March 2007" (PDF). Logitech. Archived (PDF) from the original on 2008-12-21. Retrieved 2019-04-24. "30 Years Of Microsoft Hardware". Microsoft. Retrieved 2012-07-15. Tekla S. Perry (2005-08-01). "Of Modes and Men". IEEE Spectrum: Technology, Engineering, and Science News. IEEE. Dvorak, John C. (1984-02-19). "The Mac Meets the Press". The San Francisco Examiner. ISBN 978-1-59327-010-0. "How to Use Your Computer Mouse". For Dummies. Retrieved 2013-12-11. Chatsonic (2021). The Concept of Gestural Interfaces. Independent. p. 1. "Doug Engelbart: Father of the Mouse (interview)". Retrieved 2007-09-08. Wadlow, Thomas A. (September 1981). "The Xerox Alto Computer". BYTE. 6 (9): 58–68. "The Xerox Mouse Commercialized". Making the Macintosh: Technology and Culture in Silicon Valley. Archived from the original on 2010-07-21. "Hawley Mark II X063X Mouses". oldmouse.com. "Honeywell mechanical mouse". Archived from the original on 2007-04-28. Retrieved 2007-01-31. "Honeywell mouse patent". Retrieved 2007-09-11. "Keytronic 2HW73-1ES Mouse". Archived from the original on 2007-09-27. Retrieved 2007-01-31. "Of Mice and Men... and PCs". News.softpedia.com. 1970-11-17. Retrieved 2017-11-27. "Inventions, computer mouse – the CNN site". CNN. Archived from the original on 2005-04-24. Retrieved 2006-12-31. "Computer mouse inventor dies in Vaud". World Radio Switzerland. 2009-10-14. Archived from the original on 2011-07-07. Retrieved 2009-10-28. Caruso, Denise (1984-05-14). "People". InfoWorld. Vol. 6, no. 20. InfoWorld Media Group, Inc. p. 16. ISSN 0199-6649. "Inertial mouse system". Free Patents Online. 1988. Retrieved 2018-03-23. "Highly Sensitive Inertial Mouse". Fresh Patents. Archived from the original on 2007-01-08. Retrieved 2006-12-31. Eisenberg, Anne (1999-02-25). "WHAT'S NEXT; Snuggling Up to Touchy-Feely Mice (Published 1999)". The New York Times. ISSN 0362-4331. Retrieved 2020-12-08. Yoshida, Junko (2000-08-23). "Immersion tech adds tactile feedback to PC interface". EE Times. US, "Method and Apparatus for Providing Force Feedback Over a Computer Network (US Patent 5,956,484)", issued 1996-08-01  "Mousing with Good Vibrations". Wired Magazine. 1999-08-08. ISSN 1059-1028. Heckner, T.; Kessler, C.; Egersdörfer, S.; Monkman, G. J. (14–16 June 2006). "Computer based platform for tactile actuator analysis". Actuator'06. Bremen. "Digitizer tablet Definition". PC Magazine. Retrieved 2015-10-19. "Evoluent VerticalMouse Vertical Mouse ergonomic mouse ergonomic computer mouse carpal tunnel syndrome repetitive stress disorder RSI". evoluent.com. Odell, Dan; Johnson, Peter (2015). "Evaluation of flat, angled, and vertical computer mice and their effects on wrist posture, pointing performance, and preference". Work (Reading, Mass.). 52 (2): 245–253. doi:10.3233/WOR-152167. ISSN 1875-9270. PMID 26444940. Product Specialists. "Handshoe Mouse (Original)". ergocanada.com. Archived from the original on 2014-07-14. Retrieved 2014-07-04. McCracken, Harry. "Confessions of a Left-Handed Technology User". Time. Retrieved 2015-08-15. Study at Wichita State University: "Examining First-Time Usage of the RollerMouse" [3], of 2003-12-08, uploaded 2014-07-11 "Razer Viper 8K Gaming Mouse Review | PCMag". "How to create macros on a Razer mouse". "Windows 8 How-to: Mice". Microsoft Hardware. Microsoft. Lilly, Paul (2020-09-16). "Logitech is pushing out a 25,600 DPI software update to several gaming mice | PC Gamer". PC Gamer. Feeney, Casper (2023-02-04). "What Does CPI Button On A Mouse Do? (Explained)". Lilly, Paul (2018-08-06). "Gigabyte launches a gaming mouse with adjustable weights and 16,000 dpi sensor | PC Gamer". PC Gamer. "Mad Catz R.A.T. 9 Product Page". Retrieved 2014-12-25. Adams, Thomas (2013-06-11). "Peripheral Vision: Logitech G600 MMO Gaming Mouse". GameZone. Retrieved 2013-08-09. "PC Gaming 101: Mouse Grip Styles". Digital Storm Online, Inc. Archived from the original on 2015-04-29. "The palm grip". Ergonomics guide. Razer. Archived from the original on 2013-10-31. Retrieved 2013-08-12. "Razer Mamba 2012 | RZ01-00120 Support". mysupport.razer.com. Retrieved 2022-09-22. "The claw grip". Ergonomics guide. Razer. Archived from the original on 2013-04-23. Retrieved 2013-08-12. "The fingertip grip". Ergonomics guide. Razer. Archived from the original on 2011-10-22. Retrieved 2013-08-12. "Interfacing to mouse.sys". Archived from the original on 2011-08-19. Retrieved 2011-10-08. Lyon, Richard Francis (August 1981). The Optical Mouse, and an Architectural Methodology for Smart Digital Sensors (PDF). Palo Alto, California, US: Palo Alto Research Center (PARC), Xerox Corporation. VLSI-81-1. Archived (PDF) from the original on 2021-04-15. Retrieved 2021-08-24. Front-facing side of 10: The counters needed for X and Y simply count through four states, in either direction (up or down), changing only one bit at a time (i.e. 00, 01, 11, 10). This is a simple case of either a Gray-code counter or a Johnson counter (Moebius counter). (1+3+2*11+2+2*1+2+2*4+1 pages) Paul, Matthias R. (2002-04-06). "Re: [fd-dev] ANNOUNCE: CuteMouse 2.0 alpha 1". freedos-dev. Archived from the original on 2020-02-07. Retrieved 2020-02-07. Isaja, Salvatore (2003-09-03). "FreeDOS-32 – Serial Mouse driver". Archived from the original on 2009-03-02. Chapweske, Adam (2003-04-01). "Computer Engineering Tips – PS/2 Mouse Interface". Computer-engineering.org. Archived from the original on 2008-09-16. Retrieved 2013-03-10. Retrieved 31 December 2006 Archived 2008-04-08 at the Wayback Machine "Keyboard scancodes: The PS/2 Mouse". Win.tue.nl. Retrieved 2017-12-08. Johnston, Lisa. "What Is a Nano Wireless Receiver?". Archived from the original on 2010-09-24. Retrieved 2010-09-03. "Features and Benefits of Version 8.0-Series Mouse Drivers". "Human Interface Devices Design Guide". microsoft.com. Microsoft. Archived from the original on 2010-12-22. Retrieved 2010-12-26. "Enhanced Wheel Support in Windows". "Windows and the 5-Button Wheel Mouse". Microsoft Developer Network. Microsoft. 2001-12-04. Archived from the original on 2013-03-14. Retrieved 2019-04-17. "Connect a Bluetooth device that does not have or require a transceiver". "Bluetooth Low Energy Overview". 2023-09-29. "Multipoint Mouse SDK". Microsoft Developer. Microsoft. Archived from the original on 2015-02-16. Retrieved 2012-08-05. Nakamura, S.; Tsukamoto, M.; Nishio, S. (26–28 August 2001). "Design and implementation of the double mouse system for a Window environment". 2001 IEEE Pacific Rim Conference on Communications, Computers and Signal Processing (IEEE Cat. No.01CH37233). IEEE Pacific Rim Conference on Communications, Computers and Signal Processing. Vol. 1. IEEE. pp. 204–207. doi:10.1109/PACRIM.2001.953558. hdl:11094/14053. ISBN 0-7803-7080-5. "Logitech M570 Wireless Trackball Mouse Review: Unconventional Features". "Pointer ballistics for Windows XP". Windows Hardware Developer Center Archive. Microsoft. 2002. Archived from the original on 2010-12-22. Retrieved 2010-04-29. Guy, Eric "Unit24". "Corepad Victory & Deskpad XXXL". Archived from the original on 2006-04-06. Retrieved 2007-10-03.{{cite web}}: CS1 maint: numeric names: authors list (link) Sam, Raymond (2019-07-06). "Mouse Feet Replacement Guide – Are Hyperglides worth it?". thegamingsetup. Retrieved 2020-09-29. Chan, Andrew (November 2004). "The Macintosh Phenomenon: Celebrating Twenty Years of the World's Most Adored Desktop Computers". HWM: 74–77. Gladwell, Malcolm (2011-05-16). "Creation Myth – Xerox PARC, Apple, and the truth about innovation". The New Yorker. Retrieved 2011-08-31. The mouse was conceived by the computer scientist Douglas Engelbart, developed by Xerox PARC, and made marketable by Apple Booth, Stephen A. (January 1987). "Colorful New Apple". Popular Mechanics. 164 (1): 16. ISSN 0032-4558. Shiels, Maggie (2008-12-03). "Logitech's billionth mouse". BBC News. Retrieved 2010-05-29. Mace, Scott (1984-05-07). "In Praise of Classics". InfoWorld. p. 56. Retrieved 2015-02-06. Chris Klochek and I. Scott MacKenzie (2006). Performance measures of game controllers in a three-dimensional environment. Proceedings of Graphics Interface 2006. pp. 73–79. Canadian Information Processing Society. ISBN 1-56881-308-2 "Mouse Sensitivity Converter & Calculator". GamingSmart. 2020-11-23. "First Use of Freelook in a FPS". Guinness World Records. Retrieved 2015-10-17. Phillips, Casey (2011-08-19). "Super Nostalgia: Local Gamers Fondly Remember Super Nintendo on Its 20th Anniversary". Times Free Press. Retrieved 2015-10-18. Roch, Axel [at Wikidata]. "Fire-Control and Human-Computer Interaction: Towards a History of the Computer Mouse (1940–1965)" (PDF). Mindell, David. Massachusetts Institute of Technology, Program in Science, Technology, and Society. Archived (PDF) from the original on 2021-06-28. Retrieved 2021-08-24. (11 pages) (NB. This is based on an earlier German article published in 1996 in Lab. Jahrbuch 1995/1996 für Künste und Apparate (350 pages) by Kunsthochschule für Medien Köln mit dem Verein der Freunde der Kunsthochschule für Medien Köln; Verlag der Buchhandlung Walther König [de] in Cologne, Germany. ISBN 3-88375-245-2.) Pang, Alex Soojung-Kim (March–April 2002). Candland, Kevin (ed.). "Mighty Mouse – In 1980, Apple Computer asked a group of guys fresh from Stanford's product design program to take a $400 device and make it mass-producible, reliable and cheap. Their work transformed personal computing". Stanford Magazine. Stanford, California, US: Stanford Alumni Association, Stanford University. Archived from the original on 2021-08-24. Retrieved 2021-08-23. Wikiversity has learning resources about Mouse (computing) Wikimedia Commons has media related to Computer mice. Doug Engelbart Institute mouse resources page includes stories and links The video segment of The Mother of All Demos with Doug Engelbart showing the device from 1968