Eclipse is an integrated development environment (IDE) used in computer programming. It contains a base workspace and an extensible plug-in system for customizing the environment. It is the second-most-popular IDE for Java development, and, until 2016, was the most popular. Eclipse is written mostly in Java and its primary use is for developing Java applications, but it may also be used to develop applications in other programming languages via plug-ins, including Ada, ABAP, C, C++, C#, Clojure, COBOL, D, Erlang, Fortran, Groovy, Haskell, JavaScript, Julia, Lasso, Lua, NATURAL, Perl, PHP, Prolog, Python, R, Ruby (including Ruby on Rails framework), Rust, Scala, and Scheme. It can also be used to develop documents with LaTeX (via a TeXlipse plug-in) and packages for the software Mathematica. Development environments include the Eclipse Java development tools (JDT) for Java and Scala, Eclipse CDT for C/C++, and Eclipse PDT for PHP, among others. The initial codebase originated from IBM VisualAge. The Eclipse software development kit (SDK), which includes the Java development tools, is meant for Java developers. Users can extend its abilities by installing plug-ins written for the Eclipse Platform, such as development toolkits for other programming languages, and can write and contribute their own plug-ins. Since Eclipse 3.0 (released in 2004), plug-ins are installed and managed as "bundles" using Equinox, an implementation of OSGi. The Eclipse SDK is free and open-source software, released under the terms of the Eclipse Public License, although it is incompatible with the GNU General Public License. It was one of the first IDEs to run under GNU Classpath and it runs without problems under IcedTea. Eclipse was inspired by the Smalltalk-based VisualAge family of integrated development environment (IDE) products. Although fairly successful, a major drawback of the VisualAge products was that developed code was not in a component-based software engineering model. Instead, all code for a project was held in a compressed database using SCID techniques (somewhat like a zip file but in .dat). Individual classes could not be easily accessed, certainly not outside the tool. A team primarily at the IBM Cary, NC lab developed the new product as a Java-based replacement.[failed verification] In November 2001, a consortium was formed with a board of stewards to further the development of Eclipse as open-source software. It is estimated that IBM had already invested nearly $40 million by that time. The original members were Borland, IBM, Merant, QNX Software Systems, Rational Software, Red Hat, SuSE, TogetherSoft, and WebGain. The number of stewards increased to over 80 by the end of 2003. In January 2004, the Eclipse Foundation was created. Eclipse 3.0 (released on 21 June 2004) selected the OSGi Service Platform specifications as the runtime architecture. The Association for Computing Machinery recognized Eclipse with the 2011 ACM Software System Award on 26 April 2012. The Eclipse Public License (EPL) is the fundamental license under which Eclipse projects are released. Some projects require dual licensing, for which the Eclipse Distribution License (EDL) is available, although use of this license must be applied for and is considered on a case-by-case basis. Eclipse was originally released under the Common Public License, but was later re-licensed under the Eclipse Public License. The Free Software Foundation has said that both licenses are free software licenses, but are incompatible with the GNU General Public License (GPL). According to Lee Nackman, Chief Technology Officer of IBM's Rational division (originating in 2003) at that time, the name "Eclipse" (dating from at least 2001) was not a wordplay on Sun Microsystems, as the product's primary competition at the time of naming was Microsoft Visual Studio, which Eclipse was to eclipse. Different versions of Eclipse have been given different science-related names. The versions named after Callisto, Europa, and Ganymede, which are moons of Jupiter, were followed by a version named after Galileo, the discoverer of those moons. These were followed by two sun-themed names, Helios of Greek mythology, and Indigo, one of the seven colors of a rainbow (which is produced by the sun). The version after that, Juno, has a triple meaning: a Roman mythological figure, an asteroid, and a spacecraft to Jupiter. Kepler, Luna, and Mars continued the astronomy theme, and then Neon and Oxygen constituted a theme of chemical elements. Photon represented a return to sun-themed names. As of 2018[update], the alphabetic scheme was abandoned in order to better align with the new Simultaneous Release strategy. Releases are named in the format YYYY-MM to reflect the quarterly releases, starting with version 4.9 named 2018-09. Since 2006, the Foundation has coordinated an annual Simultaneous Release. Each release includes the Eclipse Platform and several other Eclipse projects. From 2008 through 2018, each Simultaneous Release had occurred on the 4th Wednesday of June. In 2018 the project switched to quarterly (13 week) YYYY-MM releases without intermediate service releases. Legend: Old version Older version, still maintained Latest version Latest preview version Future release There is a 3.8 release of Eclipse Juno; it is not promoted on the main downloads page, but a packaged distribution is available for download. Eclipse 3.8 provides bugfixes for Indigo & adds Java 7 support, and its maintenance was dual streamed with 4.2. Features and plug-ins equivalent to a packaged distribution may be added from within the IDE. Eclipse uses plug-ins to provide all the functionality within and on top of the run-time system. Its run-time system is based on Equinox, an implementation of the OSGi core framework specification. In addition to allowing the Eclipse Platform to be extended using other programming languages, such as C and Python, the plug-in framework allows the Eclipse Platform to work with typesetting languages like LaTeX and networking applications such as telnet and database management systems. The plug-in architecture supports writing any desired extension to the environment, such as for configuration management. Java and CVS support is provided in the Eclipse SDK, with support for other version control systems provided by third-party plug-ins. With the exception of a small run-time kernel, everything in Eclipse is a plug-in. Thus, every plug-in developed integrates with Eclipse in the same way as other plug-ins; in this respect, all features are "created equal". Eclipse provides plug-ins for a wide variety of features, some of which are from third parties using both free and commercial models. Examples of plug-ins include for Unified Modeling Language (UML), for Sequence and other UML diagrams, a plug-in for DB Explorer, and many more. The Eclipse SDK includes the Eclipse Java development tools (JDT), offering an IDE with a built-in Java incremental compiler and a full model of the Java source files. This allows for advanced refactoring techniques and code analysis. The IDE also makes use of a workspace, in this case a set of metadata over a flat filespace allowing external file modifications as long as the corresponding workspace resource is refreshed afterward. Eclipse implements the graphical control elements of the Java toolkit called Standard Widget Toolkit (SWT), whereas most Java applications use the Java standard Abstract Window Toolkit (AWT), Swing, or JavaFX. Eclipse's user interface also uses an intermediate graphical user interface layer called JFace, which simplifies the construction of applications based on SWT. Eclipse was made to run on Wayland during a Google Summer of Code (GSoC) Project in 2014. As of 2017[update], language packs being developed by the Babel Project provide translations into over 40 natural languages. Eclipse provides the rich client platform (RCP) for developing general-purpose applications. The following components constitute the rich client platform: Equinox OSGi – a standard bundling framework Core platform – boot Eclipse, run plug-ins[citation needed] Standard Widget Toolkit (SWT) – a portable widget toolkit JFace – viewer classes to bring model view controller programming to SWT, file buffers, text handling, text editors Eclipse Workbench – views, editors, perspectives, wizards Examples of rich client applications based on Eclipse are: IBM Notes 8 and 9 Attachmate-Novell NetIQ Designer for Identity Manager Apache Directory Studio Remote Component Environment DBeaver, a SQL client software Portfolio Performance UDig, a GIS software AnyLogic, a multimethod simulation modeling tool Eclipse supports development for Tomcat, GlassFish and many other servers and is often capable of installing the required server (for development) directly from the IDE. It supports remote debugging, allowing a user to watch variables and step through the code of an application that is running on the attached server. The Eclipse Web Tools Platform (WTP) project is an extension of the Eclipse platform with tools for developing Web and Java EE applications. It includes source and graphical editors for a variety of languages, wizards and built-in applications to simplify development, and tools and APIs to support deploying, running, and testing apps. The Modeling project contains all the official projects of the Eclipse Foundation focusing on model-based development technologies. All are compatible with the Eclipse Modeling Framework created by IBM. Those projects are separated in several categories: Model Transformation, Model Development Tools, Concrete Syntax Development, Abstract Syntax Development, Technology and Research, and Amalgam. Model Transformation projects uses Eclipse Modeling Framework (EMF) based models as an input and produce either a model or text as an output. Model to model transformation projects includes ATLAS Transformation Language (ATL), an open source transformation language and toolkit used to transform a given model or to generate a new model from a given EMF model. Model to text transformation projects contains Acceleo, an implementation of MOFM2T, a standard model to text language from the Object Management Group (OMG). The Acceleo code generator can generate any textual language (Java, PHP, Python, etc.) from EMF based models defined with any metamodel (Unified Modeling Language (UML), Systems Modeling Language (SysML), etc.). It is open-source. Model Development Tools projects are implementations of various modeling standards used in the industry, and their toolkits. Among those projects can be found implementations of several standards: Unified Modeling Language (UML) Systems modeling language (SysML) Object Constraint Language (OCL) Business Process Model and Notation (BPMN) Semantics of Business Vocabulary and Business Rules (SBVR) XML Schema (XSD) National Electronic Distributors Association (NEDA) Model-to-Model Transformations (MMT) The Concrete Syntax Development project contains the Graphical Modeling Framework, an Eclipse-based framework dedicated to the graphical representation of EMF based models.[citation needed] The Abstract Syntax Development project hosts the Eclipse Modeling Framework, core of most of the modeling project of the Eclipse Foundation and the framework available for EMF like Connected Data Objects (CDO), EMF query or EMF validation. Technology and Research projects are prototypes of Modeling project; this project is used to host all the modeling projects of the Eclipse Foundation during their incubation phase.[citation needed] Amalgam provides the packaging and integration between all the available modeling tools for the Eclipse package dedicated to modeling tools. Application lifecycle management (ALM) and task management in Eclipse need an optional component called Mylyn (/ˈmaɪlɪn/), an open-source implementation of the task-focused interface. It provides an API for tools embedding the task-focused interface. For software developers, it helps a developer work efficiently with many different tasks (such as bugs, problem reports or new features). Tasks are integrated into Mylyn. For all tasks that have been integrated, Mylyn monitors user activity and tries to identify information relevant to the task at hand. It uses this task context to focus the Eclipse UI on the related information. Mylyn can integrate with repositories such as Bugzilla, Trac, Redmine, Mantis, JIRA, Unfuddle, and GitHub. It focuses on improving productivity by reducing searching, scrolling, and navigation. By making task context explicit, Mylyn is also meant to facilitate multitasking, planning, reusing past efforts, and sharing expertise. The project name comes from myelin, an electrically insulating layer that surrounds neurons' axons. The original name of this project, "Mylar", replicated a trademark of a boPET film company, so the Eclipse Foundation changed the project name. Eclipse IDE features include text editor with syntax coloring, coding assistance, code completion, code refactoring, code analysis with "Quick fix" suggestions along with code debugging. Along with native support for OSGi, JPMS support has been added as of Java 9. Eclipse supports a rich selection of extensions, adding support for Python via PyDev, Android development via Google's ADT (superseded by Android Studio since 2015), JavaFX via e(fx)clipse, JavaScript, jQuery, and many others at the Eclipse Marketplace. Valable is a Vala plug-in for Eclipse. In addition to the built in Java compiler warnings, additional plug-ins are available for linting to improve code quality and consistency such as SpotBugs and Sonar. Support for build tools such as Ant, Maven, Make, and CMake includes the capability to replace Eclipse native project file format with Maven pom.xml directly. Several alternative distributions exist in the Eclipse project. The PHP Hypertext Preprocessor (PHP) Development Tools project provides a framework for the Eclipse platform. The project encompasses all development components, including code-completion, develop PHP and facilitate extensibility. It leverages the existing Eclipse Web Tools Platform (WTP) and Dynamic Languages Toolkit (DLTK). Android Development Tools (ADT) was superseded in 2015 by the Eclipse foundation's own plugin, called Andmore: Development Tools for Android, after Google discontinued development of their plug-in for the Eclipse IDE, that is designed to provide an integrated environment in which to build Android applications. ADT/Andmore extends the abilities of Eclipse to let developers set up new Android projects, create an application UI, add packages based on the Android Framework API, debug their applications using the Android SDK tools, and export signed (or unsigned) .apk files in order to distribute their applications. It is freely available to download. Googles' ADT was the official IDE for Android until 2015 but was replaced by Eclipse's Andmore and the official Android Studio. Computer programming portal Free and open-source software portal Comparison of integrated development environments Comparison of integrated development environments for Java List of Eclipse-based software List of Eclipse projects "Eclipse.org consortium". The Community for Open Innovation and Collaboration | The Eclipse Foundation. Retrieved 10 September 2022. Ed Merks (22 October 2023). "Eclipse Project 4.30.0". Retrieved 22 December 2023. "Equinox/dev - Eclipsepedia". wiki.eclipse.org. Retrieved 26 August 2023. "Babel Project – Eclipse translation". Eclipse. The Eclipse Foundation. Retrieved 5 March 2017. "IDEs vs. Build Tools: How Eclipse, IntelliJ IDEA & NetBeans users work with Maven, Ant, SBT & Gradle". zeroturnaround.com. Retrieved 28 December 2018. "IntelliJ IDEA dominates the IDE market with 62% adoption among JVM developers". Snyk. 5 February 2020. Retrieved 30 January 2022. "Eclipse desktop & web IDEs". The Eclipse Foundation. Retrieved 29 January 2022. "GitHub - JuliaComputing/JuliaDT: Julia Development Toolkit for Eclipse". github.com. 10 October 2018. Retrieved 28 December 2018 – via GitHub. "Eclipse Packages | The Eclipse Foundation - home to a global community, the Eclipse IDE, Jakarta EE and over 350 open source projects..." www.eclipse.org. Retrieved 26 August 2023. "Where did Eclipse come from?". Eclipse Wiki. Retrieved 16 March 2008. "500 lines or less: Eclipse" says "With the switch to OSGi, Eclipse plugins became known as bundles" Free Software Foundation, Inc. (5 November 2012). "Various Licenses and Comments About Them". Rick DeNatale (15 October 2008). "Will It Go Round in Circles?". Archived from the original on 19 October 2008. Milinkovich, Mike. "IBM and Eclipse: A Decade of Software Innovation". Building a Smarter Planet. Archived from the original on 30 January 2012. Retrieved 3 November 2011. "About the Eclipse Foundation: History of Eclipse". Eclipse. Retrieved 1 January 2014. "About the Eclipse Foundation". The Eclipse Foundation. Retrieved 13 August 2008. "OSGi – the footings of the foundation of the platform". The Eclipse Foundation. Archived from the original on 13 June 2008. Retrieved 25 June 2008. "ACM Honors Computing Innovators for Advances in Research, Education, and Industry". Association for Computing Machinery. Archived from the original on 29 April 2012. Retrieved 26 April 2012. "Eclipse Public License". Retrieved 24 February 2012. "Various Licenses and Comments about Them". Free Software Foundation. 17 May 2007. Retrieved 20 May 2007. Darryl K. Taft (20 May 2005). "Eclipse: Behind the Name". eWeek.com. Ziff Davis Enterprise Holdings. Retrieved 11 August 2008. Sharma, Ankur (14 February 2011). "Naming Indigo +1". Eclipse. Retrieved 4 July 2016. "An interview with Wayne Beaton, Director of Open Source Projects at the Eclipse Foundation: "Eclipse Photon marks the end of an era"". jaxenter.com. 28 June 2018. Retrieved 16 September 2019. "Simultaneous Release FAQ". Eclipse. 9 March 2018. Retrieved 2 March 2019. "Simultaneous Release". Retrieved 12 January 2018. "SimRel/Simultaneous Release Cycle FAQ". Retrieved 15 March 2019. "Eclipse Tools Project". archive.eclipse.org. Retrieved 10 September 2022. "Eclipse.org consortium". The Community for Open Innovation and Collaboration | The Eclipse Foundation. Retrieved 10 September 2022. "Eclipse.org consortium". The Community for Open Innovation and Collaboration | The Eclipse Foundation. Retrieved 10 September 2022. "Eclipse Tools Project". archive.eclipse.org. Retrieved 10 September 2022. "Eclipse Foundation". Eclipse.org. 21 June 2004. Retrieved 12 January 2018. "Eclipse Tools Project". archive.eclipse.org. Retrieved 10 September 2022. "Eclipse 3.1 Inside!". Retrieved 12 January 2018. "Eclipse IDE Simultaneous Release (SimRel)". GitHub. Eclipse Foundation. 6 December 2023. Retrieved 22 December 2023. "Eclipse Callisto Projects". Eclipse. Retrieved 12 January 2018. "Ganymede Simultaneous Release". wiki.eclipse.org. Retrieved 12 January 2018. "Galileo Simultaneous Release". wiki.eclipse.org. Retrieved 12 January 2018. "Category:Helios". wiki.eclipse.org. Retrieved 12 January 2018. "Category:Indigo". wiki.eclipse.org. Retrieved 12 January 2018. "Help - Eclipse Platform". help.eclipse.org. Retrieved 12 January 2018. "Eclipse Juno Release Train Has Arrived". Eclipse. 27 June 2012. Retrieved 12 January 2018. "Eclipse 3.8.2 Maintenance Build: 3.8.2". archive.eclipse.org. 31 January 2013. Retrieved 12 January 2018. "389175 – Dual stream simultaneous release (3.x and 4.x)". bugs.eclipse.org. Retrieved 28 December 2018. "Category:Juno". wiki.eclipse.org. Retrieved 12 January 2018. "Category:Kepler". wiki.eclipse.org. Retrieved 12 January 2018. "Eclipse/Installation - Eclipsepedia". wiki.eclipse.org. Retrieved 10 September 2022. "Category:Luna". Wiki.eclipse.org. Retrieved 12 January 2018. "Eclipse Project 4.4.0". 22 July 2013. Retrieved 12 January 2018. "Category:Mars". Wiki.eclipse.org. Retrieved 12 January 2018. "Category:Neon". wiki.eclipse.org. Retrieved 12 January 2018. "Category:Oxygen". wiki.eclipse.org. Retrieved 12 January 2018. "Eclipse Oxygen - New and Noteworthy". Retrieved 3 July 2018. "Eclipse Project Oxygen (4.7) M1 - New and Noteworthy". Retrieved 22 August 2019. "Category:Photon". wiki.eclipse.org. Retrieved 12 January 2018. "Category:SimRel-2018-09". wiki.eclipse.org. "Category:SimRel-2018-12". wiki.eclipse.org. "Eclipse 4.10 - New and Noteworthy - New Features for Java Developers". www.eclipse.org. "Category:SimRel-2019-03". wiki.eclipse.org. "Category:SimRel-2019-06". wiki.eclipse.org. "Category:SimRel-2019-09". wiki.eclipse.org. "Category:SimRel-2019-12". wiki.eclipse.org. "Category:SimRel-2020-03". wiki.eclipse.org. "Category:SimRel-2020-06". wiki.eclipse.org. "Category:SimRel-2020-09". wiki.eclipse.org. "Category:SimRel-2020-12". wiki.eclipse.org. "Category:SimRel-2021-03". wiki.eclipse.org. "Category:SimRel-2021-06". wiki.eclipse.org. "Category:SimRel-2021-09". wiki.eclipse.org. "Category:SimRel-2021-12". wiki.eclipse.org. "Category:SimRel-2022-03". wiki.eclipse.org. "Category:SimRel-2022-06". wiki.eclipse.org. "Category:SimRel-2022-09". wiki.eclipse.org. "Category:SimRel-2022-12". wiki.eclipse.org. "Category:SimRel-2023-03". wiki.eclipse.org. "Category:SimRel-2023-06". wiki.eclipse.org. "Category:SimRel-2023-09". wiki.eclipse.org. ".github/wiki/SimRel/2023-12.md at main · eclipse-simrel/.github". GitHub. Eclipse Foundation. Retrieved 22 December 2023. ".github/wiki/SimRel/2024-03.md at main · eclipse-simrel/.github". GitHub. Eclipse Foundation. Retrieved 22 December 2023. ".github/wiki/SimRel/2024-06.md at main · eclipse-simrel/.github". GitHub. Eclipse Foundation. Retrieved 22 December 2023. "OSGi Certified Products". OSGi Alliance Site. Retrieved 2 August 2016.[permanent dead link] "TeXlipse homepage – LaTeX for Eclipse". TeXlipse.sourceforge.net. Retrieved 1 January 2014. Gallardo, David (1 December 2002). "Developing Eclipse plug-ins". IBM. Retrieved 5 February 2018. "Eclipse now runs on Wayland". 18 August 2014. Archived from the original on 23 August 2014. Retrieved 17 September 2014. "Portfolio Performance". Portfolio Performance. Retrieved 16 December 2020. "Eclipse Web Tools Platform Project". Eclipse.org. Retrieved 2 May 2011. The Eclipse Web Tools Platform (WTP) project extends the Eclipse platform with tools for developing Web and Java EE applications. It includes source and graphical editors for a variety of languages, wizards and built-in applications to simplify development, tools to support deploying, running, and testing apps, and APIs for extending its functionality. (in English) "Amalgation website". 31 January 2013. Retrieved 5 March 2015. "Mylyn MantisBT Connector". Mantis Bug Tracker. Archived from the original on 25 December 2012. Retrieved 25 October 2011. "Unfuddle Mylyn Connector". Unfuddle. Retrieved 21 May 2011. "GitHub Mylyn connector for Eclipse". GitHub. 10 May 2011. Retrieved 12 May 2011. "Bug191406 - rename Mylar project to Mylyn". Eclipse Foundation. Retrieved 18 February 2009. "Mylar to Mylyn Project Rename FAQ". Eclipse Foundation. Retrieved 18 February 2009. "Eclipse Help". Eclipse. Retrieved 20 November 2023. "valable in Launchpad". launchpad.net. 24 December 2007. Retrieved 28 December 2018. "Eclipse Marketplace". Eclipse Marketplace. Eclipse. Retrieved 20 November 2023. "SonarLint Documentation". Sonar. Retrieved 20 November 2023. "Converting Eclipse Java Project to Maven Project". Eclipseipedia. Eclipse. Retrieved 20 November 2023. "PHP Development Tools". projects.eclipse.org. 31 January 2013. Retrieved 1 January 2014. "Andmore: Development Tools for Android™". Eclipse Plugins, Bundles and Products - Eclipse Marketplace. Retrieved 11 November 2019. Eason, Jamal. "Android Studio 1.0". Eason, Jamal (26 June 2015). "An update on Eclipse Android Developer Tools". android-developers.googleblog.com. Retrieved 25 March 2017. Silva, Vladimir (11 March 2009). Practical Eclipse Rich Client Platform Projects (1st ed.). Apress. p. 352. ISBN 978-1-4302-1827-2. Burnette, Ed (12 August 2005). Eclipse IDE Pocket Guide (1st ed.). O'Reilly Media. p. 128. ISBN 978-0-596-10065-0. Holzner, Steve (1 May 2004). Eclipse (1st ed.). O'Reilly Media. p. 317. ISBN 0-596-00641-1. McAffer, Jeff; Lemieux, Jean-Michel; Aniszczyk, Chris (22 May 2010). Eclipse Rich Client Platform (2nd ed.). Addison-Wesley Professional. p. 552. ISBN 978-0-321-60378-4. Archived from the original on 7 July 2012. Retrieved 18 June 2011. Vogel, Lars (2013). Eclipse IDE: Java programming, debugging, unit testing, task management and Git version control with Eclipse (3rd ed.). Leipzig. ISBN 978-3943747041.{{cite book}}: CS1 maint: location missing publisher (link) Eclipse at Wikibooks Media related to Eclipse IDE at Wikimedia Commons Official website Eclipse Foundation Press Releases on eclipse.org Eclipse Foundation 2006 Press Releases Archive on eclipse.org Eclipse Foundation 2001-2005 Press Releases Archive on eclipse.org