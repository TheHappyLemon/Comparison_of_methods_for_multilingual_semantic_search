Reverse Polish notation (RPN), also known as reverse Łukasiewicz notation, Polish postfix notation or simply postfix notation, is a mathematical notation in which operators follow their operands, in contrast to prefix or Polish notation (PN), in which operators precede their operands. The notation does not need any parentheses for as long as each operator has a fixed number of operands. The term postfix notation describes the general scheme in mathematics and computer sciences, whereas the term reverse Polish notation typically refers specifically to the method used to enter calculations into hardware or software calculators, which often have additional side effects and implications depending on the actual implementation involving a stack. The description "Polish" refers to the nationality of logician Jan Łukasiewicz, who invented Polish notation in 1924. The first computer to use postfix notation, though it long remained essentially unknown outside of Germany, was Konrad Zuse's Z3 in 1941[excessive citations] as well as his Z4 in 1945. The reverse Polish scheme was again proposed in 1954 by Arthur Burks, Don Warren, and Jesse Wright and was independently reinvented by Friedrich L. Bauer and Edsger W. Dijkstra in the early 1960s to reduce computer memory access and use the stack to evaluate expressions. The algorithms and notation for this scheme were extended by the Australian philosopher and computer scientist Charles L. Hamblin in the mid-1950s. During the 1970s and 1980s, Hewlett-Packard used RPN in all of their desktop and hand-held calculators, and has continued to use it in some models into the 2020s. In computer science, reverse Polish notation is used in stack-oriented programming languages such as Forth, dc, Factor, STOIC, PostScript, RPL, and Joy. In reverse Polish notation, the operators follow their operands. For example, to add 3 and 4 together, the expression is 3 4 + rather than 3 + 4. The conventional notation expression 3 − 4 + 5 becomes 3 4 − 5 + in reverse Polish notation: 4 is first subtracted from 3, then 5 is added to it. The concept of a stack, a last-in/first-out construct, is integral to the left-to-right evaluation of RPN. In the example 3 4 −, first the 3 is put onto the stack, then the 4; the 4 is now on top and the 3 below it. The subtraction operator removes the top two items from the stack, performs 3 − 4, and puts the result of −1 onto the stack. The common terminology is that added items are pushed on the stack and removed items are popped. The advantage of reverse Polish notation is that it removes the need for order of operations and parentheses that are required by infix notation and can be evaluated linearly, left-to-right. For example, the infix expression (3 + 4) × (5 + 6) becomes 3 4 + 5 6 + × in reverse Polish notation. Reverse Polish notation has been compared to how one had to work through problems with a slide rule. In comparison testing of reverse Polish notation with algebraic notation, reverse Polish has been found to lead to faster calculations, for two reasons. The first reason is that reverse Polish calculators do not need expressions to be parenthesized, so fewer operations need to be entered to perform typical calculations. Additionally, users of reverse Polish calculators made fewer mistakes than for other types of calculators. Later research clarified that the increased speed from reverse Polish notation may be attributed to the smaller number of keystrokes needed to enter this notation, rather than to a smaller cognitive load on its users. However, anecdotal evidence suggests that reverse Polish notation is more difficult for users who previously learned algebraic notation. Edsger W. Dijkstra invented the shunting-yard algorithm to convert infix expressions to postfix expressions (reverse Polish notation), so named because its operation resembles that of a railroad shunting yard. There are other ways of producing postfix expressions from infix expressions. Most operator-precedence parsers can be modified to produce postfix expressions; in particular, once an abstract syntax tree has been constructed, the corresponding postfix expression is given by a simple post-order traversal of that tree. The first computer implementing a form of reverse Polish notation (but without the name and also without a stack), was Konrad Zuse's Z3, which he started to construct in 1938 and demonstrated publicly on 12 May 1941. In dialog mode, it allowed operators to enter two operands followed by the desired operation. It was destroyed on 21 December 1943 in a bombing raid. With Zuse's help a first replica was built in 1961. The 1945 Z4 also added a 2-level stack. Other early computers to implement architectures enabling reverse Polish notation were the English Electric Company's KDF9 machine, which was announced in 1960 and commercially available in 1963, and the Burroughs B5000, announced in 1961 and also delivered in 1963: Presumably, the KDF9 designers drew ideas from Hamblin's GEORGE (General Order Generator), an autocode programming system written for a DEUCE computer installed at the University of Sydney, Australia, in 1957. One of the designers of the B5000, Robert S. Barton, later wrote that he developed reverse Polish notation independently of Hamblin sometime in 1958 after reading a 1954 textbook on symbolic logic by Irving Copi, where he found a reference to Polish notation, which made him read the works of Jan Łukasiewicz as well, and before he was aware of Hamblin's work. Friden introduced reverse Polish notation to the desktop calculator market with the EC-130, designed by Robert "Bob" Appleby Ragen, supporting a four-level stack in June 1963. The successor EC-132 added a square root function in April 1965. Around 1966, the Monroe Epic calculator supported an unnamed input scheme resembling RPN as well. Hewlett-Packard engineers designed the 9100A Desktop Calculator in 1968 with reverse Polish notation with only three stack levels with working registers X ("keyboard"), Y ("accumulate") and visible storage register Z ("temporary"), a reverse Polish notation variant later referred to as three-level RPN. This calculator popularized reverse Polish notation among the scientific and engineering communities. The HP-35, the world's first handheld scientific calculator, introduced the classical four-level RPN with its specific ruleset of the so-called operational (memory) stack (later also called automatic memory stack) in 1972. In this scheme, the Enter ↑ key duplicates values into Y under certain conditions (automatic stack lift with temporary stack lift disable), and the top register T ("top") gets duplicated on drops (top copy on pop aka top stack level repetition) in order to ease some calculations and to save keystrokes. HP used reverse Polish notation on every handheld calculator it sold, whether scientific, financial, or programmable, until it introduced the HP-10 adding machine calculator in 1977. By this time, HP was the leading manufacturer of calculators for professionals, including engineers and accountants. Later calculators with LCDs in the early 1980s, such as the HP-10C, HP-11C, HP-15C, HP-16C, and the financial HP-12C calculator also used reverse Polish notation. In 1988, Hewlett-Packard introduced a business calculator, the HP-19B, without reverse Polish notation, but its 1990 successor, the HP-19BII, gave users the option of using algebraic or reverse Polish notation again. In 1986, HP introduced RPL, an object-oriented successor to reverse Polish notation. It deviates from classical reverse Polish notation by using a dynamic stack only limited by the amount of available memory (instead of three or four fixed levels) and which could hold all kinds of data objects (including symbols, strings, lists, matrices, graphics, programs, etc.) instead of just numbers. The system would display an error message when running out of memory instead of just dropping values off the stack on overflow as with fixed-sized stacks. It also changed the behaviour of the stack to no longer duplicate the top register on drops (since in an unlimited stack there is no longer a top register) and the behaviour of the Enter ↑ key so that it no longer duplicated values into Y, which had shown to sometimes cause confusion among users not familiar with the specific properties of the automatic memory stack. From 1990 to 2003, HP manufactured the HP-48 series of graphing RPL calculators, followed by the HP-49 series between 1999 and 2008. The last RPL calculator was named HP 50g, introduced in 2006 and discontinued in 2015. However, there are several community efforts like newRPL or DB48X to recreate RPL on modern calculators. As of 2011, Hewlett-Packard was offering the calculator models 12C, 12C Platinum, 17bII+, 20b, 30b, 33s, 35s, 48gII (RPL) and 50g (RPL) which support reverse Polish notation. While calculators emulating classical models continued to support classical reverse Polish notation, new reverse Polish notation models feature a variant of reverse Polish notation, where the Enter ↑ key behaves as in RPL. This latter variant is sometimes known as entry RPN. In 2013, the HP Prime introduced a 128-level form of entry RPN called advanced RPN. In contrast to RPL with its dynamic stack, it just drops values off the stack on overflow like other fixed-sized stacks do. However, like RPL, it does not emulate the behaviour of a classical operational RPN stack to duplicate the top register on drops. In late 2017, the list of active models supporting reverse Polish notation included only the 12C, 12C Platinum, 17bii+, 35s, and Prime. On 1 November 2021, Moravia Consulting spol. s r.o. (for all markets but the Americas) and Royal Consumer Information Products, Inc. (for the Americas) became the licensees of HP Development Company, L.P. to continue the development, production, distribution, marketing and support of HP-branded calculators. By July 2023, only the 12C, 12C Platinum, the freshly released HP 15C Collector's Edition, and the Prime remain active models supporting RPN. In Britain, Clive Sinclair's Sinclair Scientific (1974) and Scientific Programmable (1975) models used reverse Polish notation. In 1974, Commodore produced the Minuteman *6 (MM6) without an enter  key and the Minuteman *6X (MM6X) with an enter  key, both implementing a form of two-level RPN. The SR4921 RPN came with a variant of four-level RPN with stack levels named X, Y, Z, and W (rather than T) and an Ent key (for "entry"). In contrast to Hewlett-Packard's reverse Polish notation implementation, W filled with 0 instead of its contents being duplicated on stack drops. Prinz and Prinztronic were own-brand trade names of the British Dixons photographic and electronic goods stores retail chain, later rebranded as Currys Digital stores, and became part of DSG International. A variety of calculator models was sold in the 1970s under the Prinztronic brand, all made for them by other companies. Among these was the PROGRAM Programmable Scientific Calculator which featured reverse Polish notation. The Aircraft Navigation Computer Heathkit OC-1401/OCW-1401 used five-level RPN in 1978. Soviet programmable calculators (MK-52, MK-61, B3-34 and earlier B3-21 models) used reverse Polish notation for both automatic mode and programming. Modern Russian calculators MK-161 and MK-152, designed and manufactured in Novosibirsk since 2007 and offered by Semico, are backwards compatible with them. Their extended architecture is also based on reverse Polish notation. A seven-level stack had been implemented in the MITS 7400C scientific desktop calculator in 1972 National Semiconductor 4615 and 4640 Novus 650 Mathbox, 3500 Sliderule, 4510 Mathematician, 4515 Mathematician PRO/RG, 4520 Scientist and 4525 Scientist PR Some APF calculators like the Mark 55 (1976) SwissMicros (originally firming as RPN-Calc) calculators including the DM-10CC (2012), DM-11CC (2012), DM-12CC (2012), DM-15CC (2012), DM-16CC (2012), DM10 (2013), DM11 (2013), DM12 (2013), DM15 (2013), DM16 (2013), DM10L Collector's Edition (2020), DM11L (2016), DM12L (2016), DM15L (2015), DM16L (2015), DM41 (2015), DM41L (2015), DM41X (2020), DM42 (2017) and DM32 (2023). An eight-level stack was suggested by John A. Ball in 1978. The community-developed calculators WP 34S (2011), WP 31S (2014) and WP 34C (2015), which are based on the HP 20b/HP 30b hardware platform, support classical Hewlett-Packard-style reverse Polish notation supporting automatic stack lift behaviour of the Enter ↑ key and top register copies on pops, but switchable between a four- and an eight-level operational stack. In addition to the optional support for an eight-level stack, the newer SwissMicros DM42-based WP 43S as well as the WP 43C (2019) / C43 (2022) / C47 (2023) derivatives support data types for stack objects (real numbers, infinite integers, finite integers, complex numbers, strings, matrices, dates and times). The latter three variants can also be switched between classical and entry RPN behaviour of the Enter ↑ key, a feature often requested by the community. They also support a rarely seen significant figures mode, which had already been available as a compile-time option for the WP 34S and WP 31S. Since 2021, the HP-42S simulator Free42 version 3 can be enabled to support a dynamic RPN stack only limited by the amount of available memory instead of the classical 4-level stack. This feature was incorporated as a selectable function into the DM42 since firmware DMCP-3.21 / DM42-3.18. Software calculators: Mac OS X Calculator Several Apple iPhone applications e.g. "reverse polish notation calculator" Several Android applications e.g. "RealCalc" Several Windows 10 Mobile applications e.g. "RPN9" Unix system calculator program dc Emacs lisp library package calc Xorg calculator (xcalc) ARPCalc, a powerful scientific/engineering RPN calculator for Windows, Linux and Android that also has a web-browser based version grpn scientific/engineering calculator using the GIMP Toolkit (GTK+) F-Correlatives in MultiValue dictionary items RRDtool, a widely used tabulating and graphing software grdmath, a program for algebraic operations on NetCDF grids, part of Generic Mapping Tools (GMT) suite galculator, a GTK desktop calculator Mouseless Stack-Calculator scientific/engineering calculator including complex numbers rpCalc, a simple reverse polish notation calculator written in Python for Linux and MS Windows and published under the GNU GPLv2 license orpie, RPN calculator for the terminal for real or complex numbers or matrices Qalculate!, a powerful and versatile cross-platform desktop calculator Existing implementations using reverse Polish notation include: Stack-oriented programming languages such as: Forth dc STOIC Factor PostScript page description language BibTeX[citation needed] Befunge Joy IPTSCRAE Lotus 1-2-3 and Lotus Symphony formulas RPL (aka Reverse Polish Language), a programming language for the Commodore PET around 1979/1981 RPL (aka Reverse Polish Lisp), a programming language for Hewlett-Packard calculators between 1986 and 2015 RPNL (Reverse Polish Notation Language) Class libraries TRURL, a class library for the construction of RPN calculators in Object Pascal Calculator input methods FOCAL keystroke programming Stack machine Head-directionality parameter Scrambling (linguistics) Subject object verb and Object subject verb Hewlett-Packard, in the 1970s, called their special RPN stack implementation an operational (memory) stack or automatic memory stack. Interestingly, Klaus Samelson and Friedrich L. Bauer, the inventors of the stack principle, called their stack Operationskeller (Engl. "operational cellar") in 1955, and parallel discoverer Wilhelm Kämmerer [de] called his stack concept Automatisches Gedächtnis (Engl. "automatic memory") in 1958. Łukasiewicz, Jan (1951). "Chapter IV. Aristotle's System in Symbolic Form (section on "Explanation of the Symbolism")". Aristotle's Syllogistic from the Standpoint of Modern Formal Logic (1 ed.). p. 78. Łukasiewicz, Jan (1957). Aristotle's Syllogistic from the Standpoint of Modern Formal Logic (2 ed.). Oxford University Press. (Reprinted by Garland Publishing in 1987 ISBN 0-8240-6924-2.) Łukasiewicz, Jan (February 1929). Elementy logiki matematycznej (in Polish) (1 ed.). Warsaw, Poland: Państwowe Wydawnictwo Naukowe; Łukasiewicz, Jan (1963). Elements of mathematical logic. Translated by Wojtasiewicz, Olgierd Adrian [in Polish]. New York, USA: The MacMillan Company. p. 24. Hamblin, Charles Leonard (1962-11-01). "Translation to and from Polish notation" (PDF). Computer Journal. 5 (3): 210–213. doi:10.1093/comjnl/5.3.210. Archived from the original (PDF) on 2022-10-20. (4 pages) Ball, John A. (1978). Algorithms for RPN calculators (1 ed.). Cambridge, Massachusetts, USA: Wiley-Interscience, John Wiley & Sons, Inc. ISBN 0-471-03070-8. LCCN 77-14977. p. 2: […] In their advertisements and also in a letter to me, Hewlett-Packard Company (HP), the best known manufacturer of RPN calculators, says that RPN is based on a suggestion by Jan Łukasiewicz (1878–1956), and that RPN was invented and is patented by HP. Aside from the apparent contradiction in these two statements, I do not think that either of them is quite true. My first experience with RPN involved a nice old Friden EC-130 desktop electronic calculator, circa 1964. The EC-130 has RPN with a push-down stack of four registers, all visible simultaneously on a cathode ray tube display. Furthermore, they are shown upside down, that is, the last-in-first-out register is at the bottom. […] Around 1966, the Monroe Epic calculator offered RPN with a stack of four, a printer, and either 14 or 42 step programmability. The instruction booklets with these two calculators make no mention of RPN or Jan Łukasiewicz. […] Kennedy, John (August 1982). "RPN Perspective". PPC Calculator Journal. 9 (5). Mathematics Department, Santa Monica College, Santa Monica, California, USA: 26–29. CiteSeerX 10.1.1.90.6448. Archived from the original on 2022-07-01. Retrieved 2022-07-02. (12 pages) Ceruzzi, Paul E. (April 1980). "1941 RPN Computer?". PPC Calculator Journal. 7 (3): 25. Archived from the original on 2022-07-01. Retrieved 2022-07-01. p. 25: The interesting aspect of the programming of the Z-3 was that this code was very similar to that of, say, an HP-25. To perform an operation on two numbers, commands would first be given to recall the numbers from appropriate locations in the memory, followed by the command for the operation. Numbers were automatically positioned in registers in the Arithmetic Unit of the machine so that operations like division and subtraction would proceed in the right order. Results were left in a register in the AU so that long sequences of operations could be carried out. Thus, the Z-3 used a version of RPN that was nearly identical to that used by HP! I have obtained copies of early programs that Zuse had written for the evaluation of a 5 × 5 determinant, and it is possible to run these programs on an HP-41C with almost no modification whatsoever (once the numbers have been placed in the storage registers beforehand). The AU of the Z-3 contained 3 registers, although Zuse never referred to them as a stack, of course. These registers were labelled "f", "a", and "b". All entrance and exit to and from the AU was through the "f" register. This is sort of like the display register of the 41C, which is distinct from the stack. Arithmetic operations were performed on numbers in the a and b registers, so these may be thought of as corresponding to the x and y registers of HP's. Unlike modern computer practice, the actual numbers themselves were moved around the registers, not just a pointer. Ceruzzi, Paul E. (1983). "2. Computers in Germany". Reckoners - The prehistory of the digital computer, from relays to the stored program concept, 1935–1945. Contributions to the study of computer science. Vol. 1 (1 ed.). Westport, Connecticut, USA: Greenwood Press, Congressional Information Service, Inc. p. 0010. ISBN 0-313-23382-9. ISSN 0734-757X. LCCN 82-20980. Archived from the original on 2022-07-01. Retrieved 2022-07-02. Rojas, Raúl (April–June 1997). "Konrad Zuse's Legacy: The Architecture of the Z1 and Z3" (PDF). IEEE Annals of the History of Computing. 19 (2): 5–16 [7–8]. doi:10.1109/85.586067. Archived (PDF) from the original on 2022-07-03. Retrieved 2022-07-03. (12 pages) Zuse, Horst. "2. Dialogfähigkeit der Maschine Z3". Written at Berlin, Germany. In Cremers, Armin B.; Manthey, Rainer; Martini, Peter; Steinhage, Volker (eds.). Die ergonomischen Erfindungen der Zuse-Maschinen (PDF). INFORMATIK 2005 Informatik LIVE! Band 1, Beiträge der 35. Jahrestagung der Gesellschaft für Informatik e.V. (GI), 19. bis 22. September 2005 in Bonn. Lecture Notes in Informatics (in German). Bonn, Germany: Gesellschaft für Informatik (GI). pp. 200–204 [200–201]. Archived (PDF) from the original on 2022-07-01. Retrieved 2022-07-02. p. 201: Dazu stehen die beiden Register R1 und R2 als Kurzspeicher für die Operanden der arithmetischen Operationen zur Verfügung. Gerechnet wird in der umgekehrten polnischen Notation, wie z.B. beim Taschenrechner HP 45 (1972) oder HP11 (1998). (5 pages) Zuse, Horst, ed. (2008-02-22). "Z3 im Detail" [Z3 in details]. Professor Dr.-Ing. habil. Horst Zuse (in German). Archived from the original on 2022-07-01. Retrieved 2022-07-01. Die Z3 konnte in zwei Betriebsmodi betrieben werden, und zwar in dem Programm- und Dialogmodus. Das Rechnen im Dialog erfolgt wie mit einem Taschenrechner in der umgekehrten polnischen Notation. [1] Bonten, Jo H. M. (2009-05-28) [2009-03-08]. "Fast Calculators: Konrad Zuse's Z1 and Z3". Geldrop, Netherlands. Archived from the original on 2022-07-01. Retrieved 2022-07-02. The computer can be used as a simple hand-held calculator. In this mode besides entering the numeric values the user must enter the instructions and the addresses by pressing their keys. He has to enter the numbers and operators in the reverse Polish notation. Bundesmann, Jan (June 2016). "Zum 75. Geburtstag von Konrad Zuses Z3: Ratterkasten". Report / Jubiläum. iX (in German). Vol. 2016, no. 6. Heise Verlag. p. 94. Archived from the original on 2022-07-01. Retrieved 2022-07-01. p. 94: Zum Eingeben der Zahlen stand eine Tastatur bereit (Dezimalzahlen, Gleitkommadarstellung). Anweisungen gaben Nutzer in umgekehrter polnischer Notation: zuerst die Argumente, um Register zu befüllen, dann der auszuführende Operator. "Die Computerwelt von Konrad Zuse - Auf den Spuren eines EDV-Genies" (PDF). Die Welt der technischen Museen. Welt der Fertigung [de] (in German). Vol. 2018, no. 2. 2018. pp. 32–35. ISSN 2194-9239. Archived (PDF) from the original on 2019-10-17. Retrieved 2022-07-02. pp. 32–33: Er hat wohl auch als erster die vom polnischen Mathematiker Jan Lukasiewicz entwickelte ›polnische Notation‹ weiterentwickelt und daraus die ›umgekehrte polnische Notation‹ (UPN) ersonnen, da diese in seinen Rechnern verwendet wird: zunächst werden die Werte eingegeben, danach die gewünschte Rechenoperation ausgelöst. Klammern werden auf diese Weise vermieden. (4 pages) Tremmel, Sylvester (2021-11-21). "Computergeschichte: Zuse Z3 "im Test"". c't magazin. Heise Verlag. Archived from the original on 2022-03-01. Retrieved 2022-07-01. Über die I/O-Einheit kann man die Z3 als reine Rechenmaschine einsetzen, Operationen nimmt sie dann in der praktischen – wenn auch gewöhnungsbedürftigen – umgekehrten polnischen Notation entgegen. Werte im Speicher ablegen (oder von dort laden) kann man so allerdings nicht. Burks, Arthur Walter; Warren, Don W.; Wright, Jesse B. (1954). "An Analysis of a Logical Machine Using Parenthesis-Free Notation". Mathematical Tables and Other Aids to Computation. 8 (46): 53–57. doi:10.2307/2001990. JSTOR 2001990. Hamblin, Charles Leonard (May 1957). An Addressless Coding Scheme based on Mathematical Notation (Typescript). New South Wales University of Technology. Hamblin, Charles Leonard (June 1957). "An addressless coding scheme based on mathematical notation". Proceedings of the First Australian Conference on Computing and Data Processing. Salisbury, South Australia: Weapons Research Establishment. Hamblin, Charles Leonard (1957). "Computer Languages". The Australian Journal of Science (20?): 135–139; Hamblin, Charles Leonard (November 1985). "Computer Languages". The Australian Computer Journal (Reprint). 17 (4): 195–198. Hamblin, Charles Leonard (1958). GEORGE IA and II: A semi-translation programming scheme for DEUCE: Programming and Operation Manual (PDF). School of Humanities, University of New South Wales, Kensington, New South Wales. Archived (PDF) from the original on 2020-04-04. Retrieved 2020-07-27. McBurney, Peter (2008-12-06). "Charles L. Hamblin and his work". Archived from the original on 2008-12-06. McBurney, Peter (2008-07-27). "Charles L. Hamblin: Computer Pioneer". Archived from the original on 2008-12-07. […] Hamblin soon became aware of the problems of (a) computing mathematical formulae containing brackets, and (b) the memory overhead in having dealing with memory stores each of which had its own name. One solution to the first problem was Jan Łukasiewicz's Polish notation, which enables a writer of mathematical notation to instruct a reader the order in which to execute the operations (e.g. addition, multiplication, etc) without using brackets. Polish notation achieves this by having an operator (+, ×, etc) precede the operands to which it applies, e.g., +ab, instead of the usual, a+b. Hamblin, with his training in formal logic, knew of Lukasiewicz's work. […] Osborne, Thomas E. (2010) [1994]. "Tom Osborne's Story in His Own Words". Steve Leibson. Archived from the original on 2022-04-04. Retrieved 2016-01-01. […] I changed the architecture to use RPN (Reverse Polish Notation), which is the ideal notation for programming environment in which coding efficiency is critical. In the beginning, that change was not well received... […] Peterson, Kristina (2011-05-04). "Wall Street's Cult Calculator Turns 30". The Wall Street Journal. Archived from the original on 2015-03-16. Retrieved 2015-12-06. Williams, Al (2023-06-21). "In Praise Of RPN (with Python Or C)". Hackaday. Archived from the original on 2023-09-23. Retrieved 2023-09-23. Kasprzyk, Dennis Michael; Drury, Colin G.; Bialas, Wayne F. (1979) [1978-09-25]. "Human behaviour and performance in calculator use with Algebraic and Reverse Polish Notation". Ergonomics. 22 (9). Department of Industrial Engineering, State University of New York at Buffalo, Amherst, New York, USA: Taylor & Francis: 1011–1019. doi:10.1080/00140137908924675. eISSN 1366-5847. ISSN 0014-0139. S2CID 62692402. (9 pages) Agate, Seb J.; Drury, Colin G. (March 1980). "Electronic calculators: which notation is the better?" (PDF). Applied Ergonomics. 11 (1). Department of Industrial Engineering, University at Buffalo, State University of New York, USA: IPC Business Press: 2–6. doi:10.1016/0003-6870(80)90114-3. eISSN 1872-9126. ISSN 0003-6870. PMID 15676368. 0003-6870/80/01 0002-05. Archived (PDF) from the original on 2023-09-23. Retrieved 2018-09-22. p. 6: In terms of practical choice between calculators, it would appear that RPN is faster and more accurate overall but particularly for more complex problems. (5 pages) Hoffman, Errol; Ma, Patrick; See, Jason; Yong, Chee Kee; Brand, Jason; Poulton, Matthew (1994). "Calculator logic: when and why is RPN superior to algebraic?". Applied Ergonomics. 25 (5). Elsevier Science Ltd.: 327–333. doi:10.1016/0003-6870(94)90048-5. eISSN 1872-9126. ISSN 0003-6870. "Rechenhilfe für Ingenieure". Alumni-Magazin der Technischen Universität Berlin (in German). Vol. 2, no. 3. Technische Universität Berlin. December 2000. Archived from the original on 2009-02-13. "An einem 12. Mai" (in German). Deutsches Historisches Museum (German Historical Museum). Archived from the original on 2013-05-30. Blaauw, Gerrit Anne; Brooks, Jr., Frederick Phillips (1997). Computer architecture: Concepts and evolution. Boston, Massachusetts, USA: Addison-Wesley Longman Publishing Co., Inc. LaForest, Charles Eric (April 2007). "2.1 Lukasiewicz and the First Generation: 2.1.2 Germany: Konrad Zuse (1910–1995); 2.2 The First Generation of Stack Computers: 2.2.1 Zuse Z4". Second-Generation Stack Computer Architecture (PDF) (thesis). Waterloo, Canada: University of Waterloo. pp. 8, 11. Archived (PDF) from the original on 2022-01-20. Retrieved 2022-07-02. (178 pages) Beard, Bob (Autumn 1997) [1996-10-01]. "The KDF9 Computer — 30 Years On" (PDF). Resurrection - The Bulletin of the Computer Conservation Society. No. 18. Computer Conservation Society (CCS). pp. 7–15. ISSN 0958-7403. Archived (PDF) from the original on 2020-07-27. Retrieved 2020-07-27. p. 8: […] The KDF9 is remarkable because it is the believed to be the first zero-address instruction format computer to have been announced (in 1960). It was first delivered at about the same time (early 1963) as the other famous zero-address computer, the Burroughs B5000 in America. Like many modern pocket calculators, a zero-address machine allows the use of Reverse Polish arithmetic; this offers certain advantages to compiler writers. It is believed that the attention of the English Electric team was first drawn to the zero-address concept through contact with George (General Order Generator), an autocode programming system written for a Deuce computer by the University of Sydney, Australia, in the latter half of the 1950s. George used Reversed Polish, and the KDF9 team were attracted to this convention for the pragmatic reason of wishing to enhance performance by minimising accesses to main store. This may be contrasted with the more "theoretical" line taken independently by Burroughs. Besides a hardware nesting store or stack - the basic mechanism of a zero-address computer - the KDF9 had other groups of central registers for improving performance which gave it an interesting internal structure. […] [2] (NB. This is an edited version of a talk given to North West Group of the Society at the Museum of Science and Industry, Manchester, UK on 1996-10-01.) Duncan, Fraser George (1977-05-01). "Stack Machine Development: Australia, Great Britain, and Europe" (PDF). Computer. Vol. 10, no. 5. University of Bristol, Bristol, Virginia, USA. pp. 50–52. doi:10.1109/MC.1977.315873. eISSN 1558-0814. ISSN 0018-9162. S2CID 17013010. CODEN CPTRB4. Archived from the original (PDF) on 2023-10-15. Retrieved 2023-10-15. (3 pages) Allen, Murray W. (1985-11-01). "Charles Hamblin (1922–1985)". Australian Computer Journal. 17 (4). Darlinghurst, Australia: Australian Computer Society, Inc.: 194–195. ISSN 0004-8917. Retrieved 2023-10-15. (2 pages) Galler, Bernard A.; Rosin, Robert F., eds. (1986) [1985-09-06]. The Burroughs B 5000 Conference - OH 98 (PDF). Marina Del Ray Hotel, Marina Del Ray, California, USA: Charles Babbage Institute, The Center for the History of Information Processing, University of Minnesota, Minneapolis, USA. Archived from the original (PDF) on 2012-04-22. Retrieved 2013-02-27. A New Approach to the Design of a Digital Computer (1961) "The Burroughs B5000 Conference (1985)". 2023-06-17. p. 49. Galler, Bernard A.; Rosin, Robert F., eds. (1985-09-06). "Oral History: Burroughs B5000 Conference" (PDF). Marina del Rey, California, USA, archived by the Charles Babbage Institute, University of Minnesota, Minneapolis: AFIPS / Burroughs Corporation. hdl:11299/107105. OH 98. Archived (PDF) from the original on 2023-09-23. Retrieved 2023-09-23. "1928–2012 Obituary Condolences Robert (Bob) Ragen". Legacy.com. 2012-07-23. Archived from the original on 2017-12-18. Retrieved 2016-01-01. […] Bob holds over 80 patents awarded during his work as Director of RD for Friden, and Singer and as Senior Project Engineer at Xerox. He retired from Xerox RD in 1990. He is responsible for the development of the first commercial electronic calculator, the Friden 130, which has been displayed at the Smithsonian. […] "Friden EC-130 Electronic Calculator". www.oldcalculatormuseum.com. 2020-08-09. Archived from the original on 2022-10-20. Retrieved 2018-03-21. "Friden EC-132 Electronic Calculator". www.oldcalculatormuseum.com. 2022-07-15. Archived from the original on 2022-10-20. Retrieved 2018-03-21. Monnier, Richard E. (September 1968). "A New Electronic Calculator with Computerlike Capabilities" (PDF). Hewlett-Packard Journal. 20 (1). Palo Alto, California, USA: Hewlett-Packard: 3–9. Archived (PDF) from the original on 2022-10-20. Retrieved 2016-01-03. "hp 9100A Calculator" (PDF) (marketing brochure). Hewlett-Packard. 1968. pp. 8–10. Archived (PDF) from the original on 2021-10-22. Retrieved 2013-01-26. "HP 9100A/B". MoHPC - The Museum of HP Calculators. 1998. Archived from the original on 2023-09-23. Retrieved 2023-09-23. HP35 User's Manual. Hewlett-Packard. p. i. p. i: […] The operational stack and reverse Polish (Łukasiewicz) notation used in the HP-35 are the most efficient way known to computer science for evaluating mathematical expressions. […] HP-42S RPN Scientific Calculator – Owner's Manual (PDF) (1 ed.). Corvallis, Oregon, USA: Hewlett-Packard Co. June 1988. p. 3. 00042-90001. Archived (PDF) from the original on 2017-09-17. Retrieved 2017-09-17. "Section 3: The Automatic Memory Stack, LAST X, and Data Storage". Hewlett-Packard HP-15C Owner's Handbook (PDF). 2.4. Hewlett-Packard Development Company, LP. September 2011. pp. 32–46. 00015-90001. Archived (PDF) from the original on 2017-09-17. Retrieved 2015-12-05. Laporte, Jacques (2014-05-22). "The slide rule killer: a milestone in computer history". Archived from the original on 2015-02-11. Retrieved 2016-01-01. Wickes, William C. (January–February 1987). "The HP-28C: An Insider's Perspective". HPX Exchange. 1 (1). [3] Hewlett-Packard. "RPLMan from Goodies Disk 4" (RPLMAN.ZIP). Retrieved 2015-09-12. Wessman, Timothy "Tim" James (2016-06-21) [2016-06-20]. "What to do with stack overflow OBJ->/LIST->?". MoHPC - The Museum of HP Calculators. Archived from the original on 2023-09-24. Retrieved 2023-09-24. "HP Calculators". Nelson, Richard J. (April 2012). "HP RPN Evolves" (PDF). HP Solve (27). Hewlett-Packard Development Company, L.P.: 42–45. Archived (PDF) from the original on 2022-10-20. Retrieved 2022-10-20. [4] (4 of 56 pages) https://hpcalcs.com/ https://hpofficesupply.com/ Shirriff, Ken. "Reversing Sinclair's amazing 1974 calculator hack – half the ROM of the HP-35". Archived from the original on 2022-08-26. Retrieved 2013-12-09. Sharwood, Simon (2013-09-02). "Google chap reverse engineers Sinclair Scientific Calculator". The Register. Archived from the original on 2022-10-20. Retrieved 2013-12-09. SR4921 RPN Reverse Notation Scientific Calculator Instruction Manual (PDF). Palo Alto, California, USA: Commodore Business Machines, Inc. Archived (PDF) from the original on 2017-06-25. Retrieved 2022-10-16. "Prinztronic Program". www.vintagecalculators.com. Retrieved 2018-03-21. Elektronika B3-21 page on RSkey.org Elektronika MK-161 page on RSkey.org "Elektronika MK-61/52 and 152/161: small tech review (En) - Кон-Тики". arbinada.com. Retrieved 2018-03-21. "НПП СЕМИКО - вычислительная техника и устройства автоматизации". mk.semico.ru. Retrieved 2018-03-21. "A new standard!... The 7400 scientific & engineering calculator" (PDF). Radio-Electronics - For men with ideas in electronics (Advertisement). Vol. 43, no. 12. New York, USA: Gernsback Publications, Inc. December 1972. p. 17. Archived (PDF) from the original on 2022-12-28. Retrieved 2022-12-28. p. 17: DATA STORAGE: 2 Auxiliary Storage Registers plus up to 7 push-up Stack Registers. […] 7400A 3 Registers Kit $299.95 Assembled $379.95 […] 7400B 5 Registers Kit $319.95 Assembled $399.95 […] 7400C 7 Registers Kit $339.95 Assembled $419.95 Berger, Ivan (May 1973). "New calculator kits: From pocket minis to versatile desk models". Popular Mechanics. Hearst Magazines: 152. Retrieved 2017-04-29. "MITS 7400 Scientific/Engineering Calculator". Archived from the original on 2017-04-30. Retrieved 2017-04-30. (NB. Shows a photo of the MITS 7400, but the text erroneously refers to the later algebraic 7440 model instead of the 7400A/B/C models.) "Everything you've always wanted to know about RPN but were afraid to pursue – Comprehensive manual for scientific calculators – Corvus 500 – APF Mark 55 – OMRON 12-SR and others" (PDF). T. K. Enterprises. 1976. Archived (PDF) from the original on 2017-06-24. Retrieved 2017-06-24. (NB. The book's cover title contains a typographical error reading "APS Mark 55" instead of the correct "APF Mark 55".) Paul, Matthias R. (2015-02-18) [2015-02-15]. "[34S] Proposal for Entry RPN mode with dynamic stack". MoHPC - The Museum of HP Calculators. Archived from the original on 2023-09-23. Retrieved 2023-09-24. Bit (2014-11-15). "Bit's WP 34S and 31S patches and custom binaries (version: r3802 20150805-1)". MoHPC - The Museum of HP Calculators. Archived from the original on 2023-09-24. Retrieved 2023-09-24. Bit (2015-02-07). "[34S & 31S] Unique display mode: significant figures". MoHPC - The Museum of HP Calculators. Archived from the original on 2023-09-24. Retrieved 2023-09-24. https://forum.swissmicros.com/viewtopic.php?f=16&t=2939 https://forum.swissmicros.com/viewtopic.php?f=15&t=2845 "CGTK - ARPCalc - Al's Reverse Polish Calculator". "Katharina & Paul Wilkins' Home Page". lashwhip.com. Retrieved 2018-03-21. "galculator - a GTK 2 / GTK 3 algebraic and RPN calculator". galculator.mnim.org. Retrieved 2024-01-05. Schrijver, Frans. "Home - mouseless Stack-Calculator". www.stack-calculator.com. Retrieved 2018-03-21. "rpCalc". rpcalc.bellz.org. Retrieved 2024-01-05. Geschke, Charles (1986) [1985]. Preface. PostScript Language Tutorial and Cookbook. By Adobe Systems Incorporated (27th printing, August 1998, 1st ed.). Addison Wesley Publishing Company. ISBN 0-201-10179-3. 9-780201-101799. (NB. This book is informally called "blue book" due to its blue cover.) Adobe Systems Incorporated (February 1999) [1985]. PostScript Language Reference Manual (PDF) (1st printing, 3rd ed.). Addison-Wesley Publishing Company. ISBN 0-201-37922-8. Archived (PDF) from the original on 2017-02-18. Retrieved 2017-02-18. (NB. This book is informally called "red book" due to its red cover.) Born, Günter [in German] (December 2000). "Kapitel 1. LOTUS 1-2-3-Format (WKS/WK1)" [Chapter 1. Lotus 1-2-3 WKS/WK1 format]. Dateiformate – Eine Referenz – Tabellenkalkulation, Text, Grafik, Multimedia, Sound und Internet [File formats – a reference – spreadsheets, text, graphics, multimedia, sound and internet] (PDF) (in German). Bonn, Germany: Galileo Computing. ISBN 3-934358-83-7. Archived (PDF) from the original on 2016-11-29. Retrieved 2016-11-28. Born, Günter [in German] (December 2000). "Kapitel 2. LOTUS 1-2-3-Format (WK3)" [Chapter 2. Lotus 1-2-3 WK3 format]. Dateiformate – Eine Referenz – Tabellenkalkulation, Text, Grafik, Multimedia, Sound und Internet [File formats – a reference – spreadsheets, text, graphics, multimedia, sound and internet] (PDF) (in German). Bonn, Germany: Galileo Computing. ISBN 3-934358-83-7. Archived (PDF) from the original on 2016-11-29. Retrieved 2016-11-28. Feichtinger, Herwig (1987). Arbeitsbuch Mikrocomputer (in German) (2 ed.). Munich, Germany: Franzis-Verlag GmbH. pp. 427–428. ISBN 3-7723-8022-0. (NB. According to this book, a 4 KB compiler was available from Lifeboat Software for CP/M.) Wostrack, Gustav (January 1989). RPNL. Eine FORTH ähnliche Sprache mit strukturunterstützenden Sprachkonstrukten (in German). Wolf-Detlef Luther, Gens. ISBN 978-3-88707022-9. Dietrich, Johannes W. (2019-07-24). "TRURL RPN Engine". Zenodo. doi:10.5281/zenodo.3257689. Retrieved 2022-07-02. "Advanced Calculator Logic HP RPN/Algebraic: A Comparative Analysis" (PDF). Corvallis, Oregon, USA: Hewlett-Packard Corporation. 1979. 5953-1930. Archived (PDF) from the original on 2022-12-26. Retrieved 2022-12-26. (13 pages) Kreifeldt, John G.; McCarthy, Mary E. (1981-10-15) [1981-06-16/18]. Written at Department of Engineering Design, Tufts University, Medford, Massachusetts, USA. Interruption as a test of the user-computer interface (PDF). Proceedings of the Seventeenth Annual Conference on Manual Control. University of California, Los Angeles, California, USA: Jet Propulsion Laboratory / Office of Naval Research / NASA. pp. 655–667. 02155, N82-13721, 82N13721, 19820005848, JPL 81-95. Archived (PDF) from the original on 2022-01-30. Retrieved 2018-09-22. [5] (13 of 702 pages) Kreifeldt, John G. (October 1981). "Hand Calculator Performance Under Interrupted Operation". Proceedings of the Human Factors Society Annual Meeting. 25 (1). Department of Engineering Design, Tufts University, Medford, Massachusetts, USA: 329–332. doi:10.1177/107118138102500187. S2CID 106904297. (4 pages) Hicks, David G. (2013) [1995]. "What is RPN?". The Museum of HP Calculators (MoHPC). Archived from the original on 2017-06-24. Retrieved 2015-09-12. Redin, James (2005-02-12) [1997-10-05]. "RPN or DAL? A brief analysis of Reverse Polish Notation against Direct Algebraic Logic". Archived from the original on 2017-06-24. Retrieved 2015-09-12. Brown, Bob (2015-06-05) [April 2001]. "Postfix Notation Mini-Lecture". Information Technology Department, College of Computing and Software Engineering, Kennesaw State University. Archived from the original on 2017-06-24. Retrieved 2015-09-12. Wirth, Niklaus (2005-06-15) [2005-02-02]. "Good Ideas, Through the Looking Glass" (PDF). Zürich, Switzerland. Archived (PDF) from the original on 2017-06-24. Retrieved 2015-09-12. Vanderbeek, Greg (July 2007). Order of Operations and RPN (Expository paper). Master of Arts in Teaching (MAT) Exam Expository Papers. Lincoln, USA: University of Nebraska. Paper 46. Archived from the original on 2020-06-14. Retrieved 2020-06-14. Klaver, Hans (2023-08-14) [2014]. "RPN Tutorial, incl. some things HP did not tell". Netherlands. Archived from the original on 2023-09-23. Retrieved 2015-09-12. Rosettacode.org providing many implementations in several programming languages. http://rpn.codeplex.com/ Implementation of RPN with custom functions support and flexible list of operators. https://xrjunque.nom.es/ConvertAlg2RPN_RPL.aspx Free online Algebraic expression to RPN Converter