Scientific notation is a way of expressing numbers that are too large or too small to be conveniently written in decimal form, since to do so would require writing out an inconveniently long string of digits. It may be referred to as scientific form or standard index form, or standard form in the United Kingdom. This base ten notation is commonly used by scientists, mathematicians, and engineers, in part because it can simplify certain arithmetic operations. On scientific calculators, it is usually known as "SCI" display mode. In scientific notation, nonzero numbers are written in the form m × 10n or m times ten raised to the power of n, where n is an integer, and the coefficient m is a nonzero real number (usually between 1 and 10 in absolute value, and nearly always written as a terminating decimal). The integer n is called the exponent and the real number m is called the significand or mantissa. The term "mantissa" can be ambiguous where logarithms are involved, because it is also the traditional name of the fractional part of the common logarithm. If the number is negative then a minus sign precedes m, as in ordinary decimal notation. In normalized notation, the exponent is chosen so that the absolute value (modulus) of the significand m is at least 1 but less than 10. Decimal floating point is a computer arithmetic system closely related to scientific notation. Any real number can be written in the form m×10^n in many ways: for example, 350 can be written as 3.5×102 or 35×101 or 350×100. In normalized scientific notation (called "standard form" in the United Kingdom), the exponent n is chosen so that the absolute value of m remains at least one but less than ten (1 ≤ |m| < 10). Thus 350 is written as 3.5×102. This form allows easy comparison of numbers: numbers with bigger exponents are (due to the normalization) larger than those with smaller exponents, and subtraction of exponents gives an estimate of the number of orders of magnitude separating the numbers. It is also the form that is required when using tables of common logarithms. In normalized notation, the exponent n is negative for a number with absolute value between 0 and 1 (e.g. 0.5 is written as 5×10−1). The 10 and exponent are often omitted when the exponent is 0. For a series of numbers that are to be added or subtracted (or otherwise compared), it can be convenient to use the same value of m for all elements of the series. Normalized scientific form is the typical form of expression of large numbers in many fields, unless an unnormalized or differently normalized form, such as engineering notation, is desired. Normalized scientific notation is often called exponential notation—although the latter term is more general and also applies when m is not restricted to the range 1 to 10 (as in engineering notation for instance) and to bases other than 10 (for example, 3.15×2^20). Engineering notation (often named "ENG" on scientific calculators) differs from normalized scientific notation in that the exponent n is restricted to multiples of 3. Consequently, the absolute value of m is in the range 1 ≤ |m| < 1000, rather than 1 ≤ |m| < 10. Though similar in concept, engineering notation is rarely called scientific notation. Engineering notation allows the numbers to explicitly match their corresponding SI prefixes, which facilitates reading and oral communication. For example, 12.5×10−9 m can be read as "twelve-point-five nanometres" and written as 12.5 nm, while its scientific notation equivalent 1.25×10−8 m would likely be read out as "one-point-two-five times ten-to-the-negative-eight metres". A significant figure is a digit in a number that adds to its precision. This includes all nonzero numbers, zeroes between significant digits, and zeroes indicated to be significant. Leading and trailing zeroes are not significant digits, because they exist only to show the scale of the number. Unfortunately, this leads to ambiguity. The number 1230400 is usually read to have five significant figures: 1, 2, 3, 0, and 4, the final two zeroes serving only as placeholders and adding no precision. The same number, however, would be used if the last two digits were also measured precisely and found to equal 0 — seven significant figures. When a number is converted into normalized scientific notation, it is scaled down to a number between 1 and 10. All of the significant digits remain, but the placeholding zeroes are no longer required. Thus 1230400 would become 1.2304×106 if it had five significant digits. If the number were known to six or seven significant figures, it would be shown as 1.23040×106 or 1.230400×106. Thus, an additional advantage of scientific notation is that the number of significant figures is unambiguous. It is customary in scientific measurement to record all the definitely known digits from the measurement and to estimate at least one additional digit if there is any information at all available on its value. The resulting number contains more information than it would without the extra digit, which may be considered a significant digit because it conveys some information leading to greater precision in measurements and in aggregations of measurements (adding them or multiplying them together). Additional information about precision can be conveyed through additional notation. It is often useful to know how exact the final digit or digits are. For instance, the accepted value of the mass of the proton can properly be expressed as 1.67262192369(51)×10−27 kg, which is shorthand for (1.67262192369±0.00000000051)×10−27 kg. However it is still unclear whether the error (5.1×10−37 in this case) is the maximum possible error, standard error, or some other confidence interval. Calculators and computer programs typically present very large or small numbers using scientific notation, and some can be configured to uniformly present all numbers that way. Because superscript exponents like 107 can be inconvenient to display or type, the letter "E" or "e" (for "exponent") is often used to represent "times ten raised to the power of", so that the notation m E n for a decimal significand m and integer exponent n means the same as m × 10n. For example 6.022×1023 is written as 6.022E23 or 6.022e23, and 1.6×10−35 is written as 1.6E-35 or 1.6e-35. (This use of the letter "e" is unrelated to the mathematical constant e or the exponential function ex.) This abbreviated notation – often just called "scientific notation" in computing contexts, or sometimes "E notation" to distinguish it from the standard explicit variant – reduces keystrokes, works with widely available characters, displays the exponent inline at full size, and is more concise.[citation needed] However, it is discouraged in some style guides. Most popular programming languages – including Fortran, C/C++, Python, and JavaScript – use this "E" notation, which comes from Fortran and was present in the first version released for the IBM 704 in 1956. The E notation was already used by the developers of SHARE Operating System (SOS) for the IBM 709 in 1958. Later versions of Fortran (at least since FORTRAN IV as of 1961) also use "D" to signify double precision numbers in scientific notation, and newer Fortran compilers use "Q" to signify quadruple precision. The MATLAB programming language supports the use of either "E" or "D". The ALGOL 60 (1960) programming language uses a subscript ten "10" character instead of the letter "E", for example: 6.0221023. This presented a challenge for computer systems which did not provide such a character, so ALGOL W (1966) replaced the symbol by a single quote, e.g. 6.022'+23, and some Soviet Algol variants allowed the use of the Cyrillic letter "ю", e.g. 6.022ю+23. Subsequently, the ALGOL 68 programming language provided the choice of 4 characters: E, e, \, or 10. The ALGOL "10" character was included in the Soviet GOST 10859 text encoding (1964), and was added to Unicode 5.2 (2009) as U+23E8 ⏨ DECIMAL EXPONENT SYMBOL. Some programming languages use other symbols. For instance, Simula uses & (or && for long), as in 6.022&23. Mathematica supports the shorthand notation 6.022*^23 (reserving the letter E for the mathematical constant e). The first pocket calculators supporting scientific notation appeared in 1972. The displays of pocket calculators of the 1970s did not display an explicit symbol between significand and exponent; instead, one or more digits were left blank (e.g. 6.022 23, as seen in the HP-25), or a pair of smaller and slightly raised digits were reserved for the exponent (e.g. 6.022 23, as seen in the Commodore PR100). In 1976, Hewlett-Packard calculator user Jim Davidson coined the term decapower for the scientific-notation exponent to distinguish it from "normal" exponents, and suggested the letter "D" as a separator between significand and exponent in typewritten numbers (for example, 6.022D23); these gained some currency in the programmable calculator user community. The letters "E" or "D" were used as a scientific-notation separator by Sharp pocket computers released between 1987 and 1995, "E" used for 10-digit numbers and "D" used for 20-digit double-precision numbers. The Texas Instruments TI-83 and TI-84 series of calculators (1996–present) use a small capital E for the separator. In 1962, Ronald O. Whitaker of Rowco Engineering Co. proposed a power-of-ten system nomenclature where the exponent would be circled, e.g. 6.022 × 103 would be written as "6.022③". In normalized scientific notation, in E notation, and in engineering notation, the space (which in typesetting may be represented by a normal width space or a thin space) that is allowed only before and after "×" or in front of "E" is sometimes omitted, though it is less common to do so before the alphabetical character. An electron's mass is about 0.000000000000000000000000000000910938356 kg. In scientific notation, this is written 9.10938356×10−31 kg (in SI units). The Earth's mass is about 5972400000000000000000000 kg. In scientific notation, this is written 5.9724×1024 kg. The Earth's circumference is approximately 40000000 m. In scientific notation, this is 4×107 m. In engineering notation, this is written 40×106 m. In SI writing style, this may be written 40 Mm (40 megametres). An inch is defined as exactly 25.4 mm. Using scientific notation, this value can be uniformly expressed to any desired precision, from the nearest tenth of a millimeter 2.54×101 mm to the nearest nanometer 2.5400000×101 mm, or beyond. Hyperinflation means that too much money is put into circulation, perhaps by printing banknotes, chasing too few goods. It is sometimes defined as inflation of 50% or more in a single month. In such conditions, money rapidly loses its value. Some countries have had events of inflation of 1 million percent or more in a single month, which usually results in the rapid abandonment of the currency. For exsample, in November 2008 the monthly inflation rate of the Zimbabwean dollar reached 79.6 billion percent; the approximate value with three significant figures would be 7.96×1010 %, or more simply a rate of 7.96×108. Converting a number in these cases means to either convert the number into scientific notation form, convert it back into decimal form or to change the exponent part of the equation. None of these alter the actual number, only how it's expressed. First, move the decimal separator point sufficient places, n, to put the number's value within a desired range, between 1 and 10 for normalized notation. If the decimal was moved to the left, append × 10n; to the right, × 10−n. To represent the number 1,230,400 in normalized scientific notation, the decimal separator would be moved 6 digits to the left and × 106 appended, resulting in 1.2304×106. The number −0.0040321 would have its decimal separator shifted 3 digits to the right instead of the left and yield −4.0321×10−3 as a result. Converting a number from scientific notation to decimal notation, first remove the × 10n on the end, then shift the decimal separator n digits to the right (positive n) or left (negative n). The number 1.2304×106 would have its decimal separator shifted 6 digits to the right and become 1,230,400, while −4.0321×10−3 would have its decimal separator moved 3 digits to the left and be −0.0040321. Conversion between different scientific notation representations of the same number with different exponential values is achieved by performing opposite operations of multiplication or division by a power of ten on the significand and an subtraction or addition of one on the exponent part. The decimal separator in the significand is shifted x places to the left (or right) and x is added to (or subtracted from) the exponent, as shown below. 1.234×103 = 12.34×102 = 123.4×101 = 1234 Given two numbers in scientific notation, x0=m0×10n0{\displaystyle x_{0}=m_{0}\times 10^{n_{0}}} and x1=m1×10n1{\displaystyle x_{1}=m_{1}\times 10^{n_{1}}} Multiplication and division are performed using the rules for operation with exponentiation: x0x1=m0m1×10n0+n1{\displaystyle x_{0}x_{1}=m_{0}m_{1}\times 10^{n_{0}+n_{1}}} and x0x1=m0m1×10n0−n1{\displaystyle {\frac {x_{0}}{x_{1}}}={\frac {m_{0}}{m_{1}}}\times 10^{n_{0}-n_{1}}} Some examples are: 5.67×10−5×2.34×102≈13.3×10−5+2=13.3×10−3=1.33×10−2{\displaystyle 5.67\times 10^{-5}\times 2.34\times 10^{2}\approx 13.3\times 10^{-5+2}=13.3\times 10^{-3}=1.33\times 10^{-2}} and 2.34×1025.67×10−5≈0.413×102−(−5)=0.413×107=4.13×106{\displaystyle {\frac {2.34\times 10^{2}}{5.67\times 10^{-5}}}\approx 0.413\times 10^{2-(-5)}=0.413\times 10^{7}=4.13\times 10^{6}} Addition and subtraction require the numbers to be represented using the same exponential part, so that the significand can be simply added or subtracted: x0=m0×10n0{\displaystyle x_{0}=m_{0}\times 10^{n_{0}}} and x1=m1×10n1{\displaystyle x_{1}=m_{1}\times 10^{n_{1}}} with n0=n1{\displaystyle n_{0}=n_{1}} Next, add or subtract the significands: x0±x1=(m0±m1)×10n0{\displaystyle x_{0}\pm x_{1}=(m_{0}\pm m_{1})\times 10^{n_{0}}} An example: 2.34×10−5+5.67×10−6=2.34×10−5+0.567×10−5=2.907×10−5{\displaystyle 2.34\times 10^{-5}+5.67\times 10^{-6}=2.34\times 10^{-5}+0.567\times 10^{-5}=2.907\times 10^{-5}} While base ten is normally used for scientific notation, powers of other bases can be used too, base 2 being the next most commonly used one. For example, in base-2 scientific notation, the number 1001b in binary (=9d) is written as 1.001b × 2d11b or 1.001b × 10b11b using binary numbers (or shorter 1.001 × 1011 if binary context is obvious).[citation needed] In E notation, this is written as 1.001bE11b (or shorter: 1.001E11) with the letter "E" now standing for "times two (10b) to the power" here. In order to better distinguish this base-2 exponent from a base-10 exponent, a base-2 exponent is sometimes also indicated by using the letter "B" instead of "E", a shorthand notation originally proposed by Bruce Alan Martin of Brookhaven National Laboratory in 1968, as in 1.001bB11b (or shorter: 1.001B11). For comparison, the same number in decimal representation: 1.125 × 23 (using decimal representation), or 1.125B3 (still using decimal representation). Some calculators use a mixed representation for binary floating point numbers, where the exponent is displayed as decimal number even in binary mode, so the above becomes 1.001b × 10b3d or shorter 1.001B3. This is closely related to the base-2 floating-point representation commonly used in computer arithmetic, and the usage of IEC binary prefixes (e.g. 1B10 for 1×210 (kibi), 1B20 for 1×220 (mebi), 1B30 for 1×230 (gibi), 1B40 for 1×240 (tebi)). Similar to "B" (or "b"), the letters "H" (or "h") and "O" (or "o", or "C") are sometimes also used to indicate times 16 or 8 to the power as in 1.25 = 1.40h × 10h0h = 1.40H0 = 1.40h0, or 98000 = 2.7732o × 10o5o = 2.7732o5 = 2.7732C5. Another similar convention to denote base-2 exponents is using a letter "P" (or "p", for "power"). In this notation the significand is always meant to be hexadecimal, whereas the exponent is always meant to be decimal. This notation can be produced by implementations of the printf family of functions following the C99 specification and (Single Unix Specification) IEEE Std 1003.1 POSIX standard, when using the %a or %A conversion specifiers. Starting with C++11, C++ I/O functions could parse and print the P notation as well. Meanwhile, the notation has been fully adopted by the language standard since C++17. Apple's Swift supports it as well. It is also required by the IEEE 754-2008 binary floating-point standard. Example: 1.3DEp42 represents 1.3DEh × 242. Engineering notation can be viewed as a base-1000 scientific notation. Positional notation ISO/IEC 80000 – an international standard which guides the use of physical quantities and units of measurement in science Suzhou numerals – a Chinese numeral system formerly used in commerce, with order of magnitude written below the significand RKM code – a notation to specify resistor and capacitor values, with symbols for powers of 1000 Caliò, Franca; Alessandro, Lazzari (September 2017). Elements of Mathematics with Numerical Applications. Società Editrice Esculapio. pp. 30–32. ISBN 978-8-89385052-0. Edwards, John (2009). Submission Guidelines for Authors: HPS 2010 Midyear Proceedings (PDF). McLean, VA: Health Physics Society. p. 5. Retrieved 2013-03-30. However, E notation was not included in the preliminary specification of Fortran, as of 1954. Backus, John Warner, ed. (1954-11-10). Specifications for: The IBM Mathematical FORmula TRANSlating System, FORTRAN (PDF) (Preliminary report). New York: Programming Research Group, Applied Science Division, International Business Machines Corporation. Retrieved 2022-07-04. (29 pages) Sayre, David, ed. (1956-10-15). The FORTRAN Automatic Coding System for the IBM 704 EDPM: Programmer's Reference Manual (PDF). New York: Applied Science Division and Programming Research Department, International Business Machines Corporation. pp. 9, 27. Retrieved 2022-07-04. (2+51+1 pages) DiGri, Vincent J.; King, Jane E. (April 1959) [1958-06-11]. "The SHARE 709 System: Input-Output Translation". Journal of the ACM. 6 (2): 141–144. doi:10.1145/320964.320969. S2CID 19660148. It tells the input translator that the field to be converted is a decimal number of the form ~X.XXXXE ± YY where E implies that the value of ~x.xxxx is to be scaled by ten to the ±YY power. (4 pages) (NB. This was presented at the ACM meeting 11–13 June 1958.) "UH Mānoa Mathematics » Fortran lesson 3: Format, Write, etc". Math.hawaii.edu. 2012-02-12. Retrieved 2012-03-06. For instance, DEC FORTRAN 77 (f77), Intel Fortran, Compaq/Digital Visual Fortran, and GNU Fortran (gfortran) "Double Precision, REAL**16". DEC Fortran 77 Manual. Digital Equipment Corporation. Retrieved 2022-12-21. Digital Fortran 77 also allows the syntax Qsnnn, if the exponent field is within the T_floating double precision range. […] A REAL*16 constant is a basic real constant or an integer constant followed by a decimal exponent. A decimal exponent has the form: Qsnn […] s is an optional sign […] nn is a string of decimal digits […] This type of constant is only available on Alpha systems. Intel Fortran: Language Reference (PDF). Intel Corporation. 2005 [2003]. pp. 3-7–3-8, 3–10. 253261-003. Retrieved 2022-12-22. (858 pages) Compaq Visual Fortran - Language Reference (PDF). Houston: Compaq Computer Corporation. August 2001. Retrieved 2022-12-22. (1441 pages) "6. Extensions: 6.1 Extensions implemented in GNU Fortran: 6.1.8 Q exponent-letter". The GNU Fortran Compiler. 2014-06-12. Retrieved 2022-12-21. Naur, Peter, ed. (1960). Report on the Algorithmic Language ALGOL 60. Copenhagen.{{cite book}}: CS1 maint: location missing publisher (link) Savard, John J. G. (2018) [2005]. "Computer Arithmetic". quadibloc. The Early Days of Hexadecimal. Retrieved 2018-07-16. Bauer, Henry R.; Becker, Sheldon; Graham, Susan L. (January 1968). "ALGOL W - Notes For Introductory Computer Science Courses" (PDF). Stanford University, Computer Science Department. Retrieved 2017-04-08. "Revised Report on the Algorithmic Language Algol 68". Acta Informatica. 5 (1–3): 1–236. September 1973. CiteSeerX 10.1.1.219.3999. doi:10.1007/BF00265077. S2CID 2490556. Broukhis, Leonid (2008-01-22), "Revised proposal to encode the decimal exponent symbol" (PDF), unicode.org (Working Group Document), L2/08-030R "The Unicode Standard" (v. 7.0.0 ed.). Retrieved 2018-03-23. "SIMULA standard as defined by the SIMULA Standards Group - 3.1 Numbers". August 1986. Retrieved 2009-10-06. Such as the TI SR-10. Texas Instruments electronic slide rule calculator SR-10 (PDF). Dallas: Texas Instruments Incorporated. 1973. 1304-739-266. Retrieved 2023-01-01. (1+1+45+1 pages) (NB. Although this manual is dated 1973, presumably version 1 of this calculator was introduced in November 1972 according to other sources.) Jim Davidson coined decapower and recommended the "D" separator in the 65 Notes newsletter for Hewlett-Packard HP-65 users, and Richard C. Vanderburgh promoted these in the 52-Notes newsletter for Texas Instruments SR-52 users. Davidson, Jim (January 1976). Nelson, Richard J. (ed.). "unknown". 65 Notes. 3 (1). Santa Ana, CA: 4. V3N1P4. {{cite journal}}: Cite uses generic title (help) Vanderburgh, Richard C., ed. (November 1976). "Decapower" (PDF). 52-Notes - Newsletter of the SR-52 Users Club. 1 (6). Dayton, OH: 1. V1N6P1. Retrieved 2017-05-28. Decapower - In the January 1976 issue of 65-Notes (V3N1p4) Jim Davidson (HP-65 Users Club member #547) suggested the term "decapower" as a descriptor for the power-of-ten multiplier used in scientific notation displays. I'm going to begin using it in place of "exponent" which is technically incorrect, and the letter D to separate the "mantissa" from the decapower for typewritten numbers, as Jim also suggests. For example, 123−45 [sic] which is displayed in scientific notation as 1.23 -43 will now be written 1.23D-43. Perhaps, as this notation gets more and more usage, the calculator manufacturers will change their keyboard abbreviations. HP's EEX and TI's EE could be changed to ED (for enter decapower). [1] "Decapower". 52-Notes - Newsletter of the SR-52 Users Club. Vol. 1, no. 6. Dayton, OH. November 1976. p. 1. Retrieved 2018-05-07. (NB. The term decapower was frequently used in subsequent issues of this newsletter up to at least 1978.) Specifically, models PC-1280 (1987), PC-1470U (1987), PC-1475 (1987), PC-1480U (1988), PC-1490U (1990), PC-1490UII (1991), PC-E500 (1988), PC-E500S (1995), PC-E550 (1990), PC-E650 (1993), and PC-U6000 (1993). SHARP Taschencomputer Modell PC-1280 Bedienungsanleitung [SHARP Pocket Computer Model PC-1280 Operation Manual] (PDF) (in German). Sharp Corporation. 1987. pp. 56–60. 7M 0.8-I(TINSG1123ECZZ)(3). Retrieved 2017-03-06. SHARP Taschencomputer Modell PC-1475 Bedienungsanleitung [SHARP Pocket Computer Model PC-1475 Operation Manual] (PDF) (in German). Sharp Corporation. 1987. pp. 105–108, 131–134, 370, 375. Archived from the original (PDF) on 2017-02-25. Retrieved 2017-02-25. SHARP Pocket Computer Model PC-E500 Operation Manual. Sharp Corporation. 1989. 9G1KS(TINSE1189ECZZ). SHARP Taschencomputer Modell PC-E500S Bedienungsanleitung [SHARP Pocket Computer Model PC-E500S Operation Manual] (PDF) (in German). Sharp Corporation. 1995. 6J3KS(TINSG1223ECZZ). Archived from the original (PDF) on 2017-02-24. Retrieved 2017-02-24. 電言板5 PC-1490UII PROGRAM LIBRARY [Telephone board 5 PC-1490UII program library] (in Japanese). Vol. 5. University Co-op. 1991. 電言板6 PC-U6000 PROGRAM LIBRARY [Telephone board 6 PC-U6000 program library] (in Japanese). Vol. 6. University Co-op. 1993. Also see TI calculator character sets. "TI-83 Programmer's Guide" (PDF). Retrieved 2010-03-09. Whitaker, Ronald O. (1962-06-15). "Numerical Prefixes" (PDF). Crosstalk. Electronics. p. 4. Retrieved 2022-12-24. (1 page) Samples of usage of terminology and variants: Moller, Donald A. (June 1976). "A Computer Program For The Design And Static Analysis Of Single-Point Sub-Surface Mooring Systems: NOYFB" (PDF) (Technica Report). WHOI Document Collection. Woods Hole, MA: Woods Hole Oceanographic Institution. WHOI-76-59. Retrieved 2015-08-19. "Cengage - the Leading Provider of Higher Education Course Materials". Archived from the original on 2007-10-19. "Bryn Mawr College: Survival Skills for Problem Solving – Scientific Notation". Retrieved 2007-04-07. "Scientific Notation". Retrieved 2007-04-07. [2] "INTOUCH 4GL a Guide to the INTOUCH Language". Archived from the original on 2015-05-03. Mohr, Peter J.; Newell, David B.; Taylor, Barry N. (July–September 2016). "CODATA recommended values of the fundamental physical constants: 2014". Reviews of Modern Physics. 88 (3): 035009. arXiv:1507.07956. Bibcode:2016RvMP...88c5009M. CiteSeerX 10.1.1.150.1225. doi:10.1103/RevModPhys.88.035009. S2CID 1115862. Luzum, Brian; Capitaine, Nicole; Fienga, Agnès; Folkner, William; Fukushima, Toshio; Hilton, James; Hohenkerk, Catherine; Krasinsky, George; Petit, Gérard; Pitjeva, Elena; Soffel, Michael; Wallace, Patrick (August 2011). "The IAU 2009 system of astronomical constants: The report of the IAU working group on numerical standards for Fundamental Astronomy". Celestial Mechanics and Dynamical Astronomy. 110 (4): 293–304. Bibcode:2011CeMDA.110..293L. doi:10.1007/s10569-011-9352-4. Various (2000). Lide, David R. (ed.). Handbook of Chemistry and Physics (81st ed.). CRC. ISBN 978-0-8493-0481-1. Kadzere, Martin (2008-10-09). "Zimbabwe: Inflation Soars to 231 Million Percent". Harare, Zimbabwe: The Herald. Retrieved 2008-10-10. "Zimbabwe inflation hits new high". BBC News. 2008-10-09. Archived from the original on 2009-05-14. Retrieved 2009-10-09. electronic hexadecimal calculator/converter SR-22 (PDF) (Revision A ed.). Texas Instruments Incorporated. 1974. p. 7. 1304-389 Rev A. Retrieved 2017-03-20. (NB. This calculator supports floating point numbers in scientific notation in bases 8, 10 and 16.) Schwartz, Jake; Grevelle, Rick (2003-10-20) [April 1993]. HP16C Emulator Library for the HP48S/SX. 1.20 (1 ed.). Retrieved 2015-08-15. (NB. This library also works on the HP 48G/GX/G+. Beyond the feature set of the HP-16C, this package also supports calculations for binary, octal, and hexadecimal floating-point numbers in scientific notation in addition to the usual decimal floating-point numbers.) Martin, Bruce Alan (October 1968). "Letters to the editor: On binary notation". Communications of the ACM. 11 (10): 658. doi:10.1145/364096.364107. S2CID 28248410. Schwartz, Jake; Grevelle, Rick (2003-10-21). HP16C Emulator Library for the HP48 - Addendum to the Operator's Manual. 1.20 (1 ed.). Retrieved 2015-08-15. "Rationale for International Standard - Programming Languages - C" (PDF). 5.10. April 2003. pp. 52, 153–154, 159. Retrieved 2010-10-17. The IEEE and The Open Group (2013) [2001]. "dprintf, fprintf, printf, snprintf, sprintf - print formatted output". The Open Group Base Specifications (Issue 7, IEEE Std 1003.1, 2013 ed.). Retrieved 2016-06-21. Beebe, Nelson H. F. (2017-08-22). The Mathematical-Function Computation Handbook - Programming Using the MathCW Portable Software Library (1 ed.). Salt Lake City: Springer. doi:10.1007/978-3-319-64110-2. ISBN 978-3-319-64109-6. LCCN 2017947446. S2CID 30244721. "floating point literal". cppreference.com. Retrieved 2017-03-11. The hexadecimal floating-point literals were not part of C++ until C++17, although they can be parsed and printed by the I/O functions since C++11: both C++ I/O streams when std::hexfloat is enabled and the C I/O streams: std::printf, std::scanf, etc. See std::strtof for the format description. "The Swift Programming Language (Swift 3.0.1)". Guides and Sample Code: Developer: Language Reference. Apple Corporation. Lexical Structure. Retrieved 2017-03-11. Look up scientific notation in Wiktionary, the free dictionary. Decimal to Scientific Notation Converter Scientific Notation to Decimal Converter Scientific Notation in Everyday Life An exercise in converting to and from scientific notation Scientific Notation Converter Scientific Notation chapter from Lessons In Electric Circuits Vol 1 DC free ebook and Lessons In Electric Circuits series.