Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers. The service has both free and premium tiers. The software that hosts the containers is called Docker Engine. It was first released in 2013 and is developed by Docker, Inc. Docker is a tool that is used to automate the deployment of applications in lightweight containers so that applications can work efficiently in different environments in isolation. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels. Because all of the containers share the services of a single operating system kernel, they use fewer resources than virtual machines. Docker can package an application and its dependencies in a virtual container that can run on any Linux, Windows, or macOS computer. This enables the application to run in a variety of locations, such as on-premises, in public (see decentralized computing, distributed computing, and cloud computing) or private cloud. When running on Linux, Docker uses the resource isolation features of the Linux kernel (such as cgroups and kernel namespaces) and a union-capable file system (such as OverlayFS) to allow containers to run within a single Linux instance, avoiding the overhead of starting and maintaining virtual machines. Docker on macOS uses a Linux virtual machine to run the containers. Because Docker containers are lightweight, a single server or virtual machine can run several containers simultaneously. A 2018 analysis found that a typical Docker use case involves running eight containers per host, and that a quarter of analyzed organizations run 18 or more per host. It can also be installed on a single board computer like the Raspberry Pi. The Linux kernel's support for namespaces mostly isolates an application's view of the operating environment, including process trees, network, user IDs and mounted file systems, while the kernel's cgroups provide resource limiting for memory and CPU. Since version 0.9, Docker includes its own component (called libcontainer) to use virtualization facilities provided directly by the Linux kernel, in addition to using abstracted virtualization interfaces via libvirt, LXC and systemd-nspawn. Docker implements a high-level API to provide lightweight containers that run processes in isolation. The Docker Engine is licensed under the Apache License 2.0. Docker Desktop distributes some components that are licensed under the GNU General Public License. The Dockerfile files can be licensed under an open-source license themselves. The scope of such a license statement is only the Dockerfile and not the container image. The Docker software as a service offering consists of three components: Software: The Docker daemon, called dockerd, is a persistent process that manages Docker containers and handles container objects. The daemon listens for requests sent via the Docker Engine API. The Docker client program, called docker, provides a command-line interface (CLI) that allows users to interact with Docker daemons. Objects: Docker objects are various entities used to assemble an application in Docker. The main classes of Docker objects are images, containers, and services. A Docker container is a standardized, encapsulated environment that runs applications. A container is managed using the Docker API or CLI. It is a process created from an image. A Docker image is a read-only template used to build containers. Images are used to store and ship applications. It is a process image. A Docker service allows containers to be scaled across multiple Docker daemons. The result is known as a swarm, a set of cooperating daemons that communicate through the Docker API. Registries: A Docker registry is a repository for Docker images. Docker clients connect to registries to download ("pull") images for use or upload ("push") images that they have built. Registries can be public or private. The main public registry is Docker Hub. Docker Hub is the default registry where Docker looks for images. Docker registries also allow the creation of notifications based on events. An illustrative example of a Dockerfile: ARG CODE_VERSION=latest FROM ubuntu:${CODE_VERSION} COPY ./examplefile.txt /examplefile.txt ENV MY_ENV_VARIABLE="example_value" RUN apt-get update # Mount a directory from the Docker volume # Note: This is usually specified in the 'docker run' command. VOLUME ["/myvolume"] # Expose a port (22 for SSH) EXPOSE 22 Docker Compose is a tool for defining and running multi-container Docker applications. It uses YAML files to configure the application's services and performs the creation and start-up process of all the containers with a single command. The docker-compose CLI utility allows users to run commands on multiple containers at once; for example, building images, scaling containers, running containers that were stopped, and more. Commands related to image manipulation, or user-interactive options, are not relevant in Docker Compose because they address one container. The docker-compose.yml file is used to define an application's services and includes various configuration options. For example, the build option defines configuration options such as the Dockerfile path, the command option allows one to override default Docker commands, and more. The first public beta version of Docker Compose (version 0.0.1) was released on December 21, 2013. The first production-ready version (1.0) was made available on October 16, 2014. Docker Swarm provides native clustering functionality for Docker containers, which turns a group of Docker engines into a single virtual Docker engine. In Docker 1.12 and higher, Swarm mode is integrated with Docker Engine. The docker swarm CLI utility allows users to run Swarm containers, create discovery tokens, list nodes in the cluster, and more. The docker node CLI utility allows users to run various commands to manage nodes in a swarm, for example, listing the nodes in a swarm, updating nodes, and removing nodes from the swarm. Docker manages swarms using the Raft consensus algorithm. According to Raft, for an update to be performed, the majority of Swarm nodes need to agree on the update. Docker Volume facilitates the independent persistence of data, allowing data to remain even after the container is deleted or re-created. Docker Inc. was founded by Kamel Founadi, Solomon Hykes, and Sebastien Pahl during the Y Combinator Summer 2010 startup incubator group and launched in 2011. The startup was also one of the 12 startups in Founder's Den first cohort. Hykes started the Docker project in France as an internal project within dotCloud, a platform-as-a-service company. Docker debuted to the public in Santa Clara at PyCon in 2013. It was released as open-source in March 2013. At the time, it used LXC as its default execution environment. One year later, with the release of version 0.9, Docker replaced LXC with its own component, libcontainer, which was written in the Go programming language. In 2017, Docker created the Moby project for open research and development. September 19, 2013: Red Hat and Docker announced a collaboration around Fedora, Red Hat Enterprise Linux (RHEL), and OpenShift. October 15, 2014: Microsoft announced the integration of the Docker engine into Windows Server, as well as native support for the Docker client role in Windows. November 2014: Docker container services were announced for the Amazon Elastic Compute Cloud (EC2). November 10, 2014: Docker announced a partnership with Stratoscale. December 4, 2014: IBM announced a strategic partnership with Docker that enables Docker to integrate more closely with the IBM Cloud. June 22, 2015: Docker and several other companies announced that they are working on a new vendor and operating-system-independent standard for software containers. December 2015: Oracle Cloud added Docker container support after acquiring StackEngine, a Docker container startup. April 2016: Windocks, an independent software vendor released a port of Docker's open source project to Windows, supporting Windows Server 2012 R2 and Server 2016, with all editions of SQL Server 2008 onward. May 2016: analysis showed the following organizations as main contributors to Docker: The Docker team, Cisco, Google, Huawei, IBM, Microsoft, and Red Hat. June 8, 2016: Microsoft announced that Docker could now be used natively on Windows 10. January 2017: An analysis of LinkedIn profile mentions showed Docker presence grew by 160% in 2016. May 6, 2019: Microsoft announced the second version of Windows Subsystem for Linux (WSL). Docker, Inc. announced that it has started working on a version of Docker for Windows that runs on WSL 2. In particular, this means Docker can run on Windows 10 Home (previously it was limited to Windows Pro and Enterprise since it used Hyper-V). August 2020: Microsoft announced a backport of WSL2 to Windows 10 versions 1903 and 1909 (previously WSL2 was available only on version 2004) and Docker developers announced availability of Docker for these platforms. August 2021: Docker Desktop for Windows and MacOS is no longer free for enterprise users. Docker ended free Docker Desktop use for larger business customers and replaced its Free plan with a Personal plan. Docker on Linux distributions remains unaffected. December 2023: Docker acquired AtomicJar to expand its testing capabilities. Linux portal DevOps DevOps toolchain gVisor Kubernetes List of Linux containers Microservices OS-level virtualization Service Component Architecture Singularity â€“ Docker alternative for HPC clusters Open Container Initiative Barbier, Julien (June 9, 2014). "It's Here: Docker 1.0". Docker. Docker, Inc. Retrieved September 30, 2019. "v26.0.0". March 20, 2024. Retrieved March 20, 2024. "Docker source code". docker/distribution repo. Docker, Inc. October 12, 2015. Retrieved October 24, 2015 â€“ via GitHub. O'Gara, Maureen (July 26, 2013). "Ben Golub, Who Sold Gluster to Red Hat, Now Running dotCloud". SYS-CON Media. Archived from the original on September 13, 2019. "What is a Container?". docker.com. Docker, Inc. Retrieved May 13, 2019. Ratan, Vivek (February 8, 2017). "Docker: A Favourite in the DevOps World". Open Source For U. Retrieved June 14, 2017. "Docker frequently asked questions (FAQ)". March 2, 2019. "Docker 0.9: Introducing execution drivers and libcontainer". Docker Blog. Docker, Inc. March 10, 2014. Retrieved January 20, 2015. Noyes, Katherine (August 1, 2013). "Docker: A 'Shipping Container' for Linux Code". Linux.com. Archived from the original on August 8, 2013. Retrieved August 9, 2013. "Select a storage driver documentation". Docker documentation. Archived from the original on December 6, 2016. Retrieved December 7, 2016. "Docker Documentation: Kernel Requirements". docker.readthedocs.org. January 4, 2014. Archived from the original on August 21, 2014. Retrieved August 20, 2014. "Get started with Docker for Mac". docker.com. Docker, Inc. Retrieved September 27, 2018. K., Chris (14 January 2019). "Lightweight Windows containers: Using Docker process isolation in Windows 10". Poweruser. Retrieved 2 August 2019. more "lightweight" real containers (via so called process-isolation), where the containerized processes are running directly on the host system â€” all processes on the host and in the containers are sharing the same Windows kernel. This is similar to how containers on Linux work. "8 surprising facts about real Docker adoption". Datadog. June 2018. Retrieved September 4, 2019. Gupta, Devender (October 13, 2022). "How to Install Docker on Raspberry Pi". Gizmoxo. Retrieved October 15, 2022. Walsh, Dan (September 15, 2014). "Yet Another Reason Containers Don't Contain: Kernel Keyrings". projectatomic.io. Retrieved April 13, 2015. "Limit a container's resources". Docker Documentation. Retrieved March 7, 2018. Vaughan-Nichols, Steven J. (June 11, 2014). "Docker libcontainer unifies Linux container powers". ZDNet. Retrieved July 30, 2014. "libcontainer â€“ reference implementation for containers". docker/libcontainer repo. Docker, Inc. Retrieved July 30, 2014 â€“ via GitHub. Avram, Abel (March 27, 2013). "Docker: Automated and Consistent Software Deployments". InfoQ. Retrieved August 9, 2013. "Docker overview". Docker Documentation. Docker, Inc. Retrieved February 26, 2018. "dockerd". Docker Documentation. Docker, Inc. Retrieved February 26, 2018. "Use the Docker command line". Docker Documentation. Docker, Inc. Retrieved February 26, 2018. "The Docker Ecosystem: An Introduction to Common Components". www.digitalocean.com. Retrieved February 26, 2018. "About Registry". Docker Documentation. Docker, Inc. Retrieved February 26, 2018. "Work with notifications". March 2, 2019. "Dockerfile reference". Docker Documentation. November 14, 2023. Retrieved November 30, 2023. "Overview of Docker Compose". Docker Documentation. Docker, Inc. Retrieved July 6, 2017. "Compose command-line reference". Docker Documentation. Docker, Inc. Retrieved February 28, 2018. "Orchestrate Containers for Development with Docker Compose". via @codeship. May 27, 2015. Retrieved February 28, 2018. "Compose file version 3 reference". Docker Documentation. Docker, Inc. Retrieved February 28, 2018. Firshman, Ben (December 21, 2013). "Release 0.0.1". docker/compose. Docker, Inc. â€“ via GitHub. Prasad, Aanand (October 16, 2014). "Release 1.0.0". docker/compose. Docker, Inc. â€“ via GitHub. "8 Container Orchestration Tools to Know". Linux.com. April 12, 2017. Retrieved July 6, 2017. "Docker Swarm". Docker Documentation. Docker, Inc. Retrieved July 6, 2017. "Docker swarm". June 4, 2021. "Swarm command-line reference". Docker Documentation. Docker, Inc. Retrieved February 28, 2018. "docker node". Docker Documentation. Retrieved February 28, 2018. "Docker Swarm 101". aquasec.com. Retrieved February 28, 2018. "Raft Consensus Algorithm". raft.github.io. Retrieved February 28, 2018. "Docker Desktop & Docker Guides". Docker Guide. April 25, 2021. Archived from the original on April 25, 2021. Retrieved April 25, 2021. Hykes, Solomon (March 28, 2018). "Au Revoir". docker.com. Archived from the original on January 12, 2021. Retrieved January 23, 2021. "About the dotCloud Platform". dotCloud. Archived from the original on July 2, 2014. Retrieved June 23, 2019. Seigler, MG (January 10, 2011). "Founders Den: A Private Clubhouse For Entrepreneurs Opens In San Francisco". TechCrunch. Archived from the original on March 29, 2016. Retrieved February 2, 2021. "One home for all your apps". dotcloud.com. Archived from the original on May 17, 2014. Retrieved May 8, 2014. "The future of Linux Containers". DotCloud Channel. Retrieved July 13, 2018 â€“ via YouTube. Swan, Chris (March 13, 2014). "Docker drops LXC as default execution environment". InfoQ. Retrieved January 20, 2015. "Demystifying the Relationship Between Moby & Docker â€“ Welcome to Collabnix". May 6, 2017. "DotCloud Pivots And Wins Big With Docker, The Cloud Service Now Part Of Red Hat OpenShift". TechCrunch. September 19, 2013. Retrieved January 20, 2014. Foley, Mary Jo (October 15, 2014). "Docker container support coming to Microsoft's next Windows Server release". ZDNet. Retrieved October 16, 2014. Guthrie, Scott (October 15, 2014). "Docker and Microsoft: Integrating Docker with Windows Server and Microsoft Azure". ScottGu's Blog. Microsoft. Retrieved January 12, 2015. Barr, Jeff (November 13, 2014). "Amazon EC2 Container Service (ECS) â€“ Container Management for the AWS Cloud". Amazon Web Services Blog. Retrieved April 29, 2017. Rath, John (November 10, 2014). "Stratoscale Raises $32M to Build Docker-Supporting OpenStack Clouds on Commodity Servers". Retrieved January 3, 2016. "IBM and Docker Announce Strategic Partnership to Deliver Enterprise Applications in the Cloud and On Prem". IBM. December 4, 2014. Retrieved April 20, 2015. Lardinois, Frederic (June 22, 2015). "Docker, CoreOS, Google, Microsoft, Amazon And Others Come Together To Develop Common Container Standard". TechCrunch. Retrieved August 8, 2015. Siluk, Shirley (June 22, 2015). "Docker, Tech Giants Team on Open Container Project". cio-today.com. Archived from the original on September 23, 2015. Retrieved August 8, 2015. McLaughlin, Kevin (December 22, 2015). "Oracle Acquires Docker Container Startup StackEngine, Plans Austin-Based Cloud Computing Center". CRN. Retrieved January 13, 2022. Yegulalp, Serdar (April 4, 2016). "Windocks does what Docker and Microsoft can't do". InfoWorld. Retrieved October 27, 2018. "Docker â€“ Updated project statistics". GitHub Gist. Retrieved August 22, 2016. Sarkar, Dona (June 8, 2016). "Announcing Windows 10 Insider Preview Build 14361". Windows Blogs. Microsoft. Retrieved June 19, 2016. Mullany, Michael. "Docker Momentum Analysis 2016". LinkedIn Pulse. Retrieved January 5, 2017. Vaughan-Nichols, Steven (June 18, 2019). "Docker embraces Windows Subsystem for Linux 2". ZDNet. CBS Interactive. "WSL 2 Support is coming to Windows 10 Versions 1903 and 1909". Windows Command Line. August 20, 2020. Retrieved August 21, 2020. "Docker Desktop & WSL 2 - Backport Update". Docker Blog. August 20, 2020. Retrieved August 21, 2020. Carey, Scott (August 31, 2021). "Docker Desktop is no longer free for enterprise users". InfoWorld. Retrieved October 18, 2021. Miller, Ron (December 11, 2023). "Docker acquires AtomicJar, a testing startup that raised $25M in January". TechCrunch. Retrieved December 13, 2023. Official website Container Terminology - Practical terminology