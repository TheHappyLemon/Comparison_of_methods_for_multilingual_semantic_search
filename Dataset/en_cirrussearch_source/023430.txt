Heartbleed is a security bug in some outdated versions of the OpenSSL cryptography library, which is a widely used implementation of the Transport Layer Security (TLS) protocol. It was introduced into the software in 2012 and publicly disclosed in April 2014. Heartbleed could be exploited regardless of whether the vulnerable OpenSSL instance is running as a TLS server or client. It resulted from improper input validation (due to a missing bounds check) in the implementation of the TLS heartbeat extension. Thus, the bug's name derived from heartbeat. The vulnerability was classified as a buffer over-read, a situation where more data can be read than should be allowed. Heartbleed was registered in the Common Vulnerabilities and Exposures database as CVE-2014-0160. The federal Canadian Cyber Incident Response Centre issued a security bulletin advising system administrators about the bug. A fixed version of OpenSSL was released on 7 April 2014, on the same day Heartbleed was publicly disclosed. TLS implementations other than OpenSSL, such as GnuTLS, Mozilla's Network Security Services, and the Windows platform implementation of TLS, were not affected because the defect existed in the OpenSSL's implementation of TLS rather than in the protocol itself. System administrators were frequently slow to patch their systems. As of 20 May 2014[update], 1.5% of the 800,000 most popular TLS-enabled websites were still vulnerable to Heartbleed. As of 21 June 2014[update], 309,197 public web servers remained vulnerable. As of 23 January 2017[update], according to a report from Shodan, nearly 180,000 internet-connected devices were still vulnerable. As of 6 July 2017[update], the number had dropped to 144,000, according to a search on shodan.io for "vuln:cve-2014-0160". As of 11 July 2019[update], Shodan reported that 91,063 devices were vulnerable. The U.S. was first with 21,258 (23%), the top 10 countries had 56,537 (62%), and the remaining countries had 34,526 (38%). The report also broke the devices down by 10 other categories such as organization (the top 3 were wireless companies), product (Apache httpd, Nginx), or service (HTTPS, 81%). The Heartbeat Extension for the Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) protocols was proposed as a standard in February 2012 by RFC 6520. It provides a way to test and keep alive secure communication links without the need to renegotiate the connection each time. In 2011, one of the RFC's authors, Robin Seggelmann, then a Ph.D. student at the Fachhochschule Münster, implemented the Heartbeat Extension for OpenSSL. Following Seggelmann's request to put the result of his work into OpenSSL, his change was reviewed by Stephen N. Henson, one of OpenSSL's four core developers. Henson failed to notice a bug in Seggelmann's implementation, and introduced the flawed code into OpenSSL's source code repository on 31 December 2011. The defect spread with the release of OpenSSL version 1.0.1 on 14 March 2012. Heartbeat support was enabled by default, causing affected versions to be vulnerable. According to Mark J. Cox of OpenSSL, Neel Mehta of Google's security team privately reported Heartbleed to the OpenSSL team on 1 April 2014 11:09 UTC. The bug was named by an engineer at Synopsys Software Integrity Group, a Finnish cyber security company that also created the bleeding heart logo and launched an informational website, heartbleed.com. While Google's security team reported Heartbleed to OpenSSL first, both Google and Codenomicon discovered it independently at approximately the same time. Codenomicon reports 3 April 2014 as their date of discovery and their date of notification of NCSC-FI [fi] for vulnerability coordination. At the time of disclosure, some 17% (around half a million) of the Internet's secure web servers certified by trusted authorities were believed to be vulnerable to the attack, allowing theft of the servers' private keys and users' session cookies and passwords. The Electronic Frontier Foundation, Ars Technica, and Bruce Schneier all deemed the Heartbleed bug "catastrophic". Forbes cybersecurity columnist Joseph Steinberg wrote: Some might argue that Heartbleed is the worst vulnerability found (at least in terms of its potential impact) since commercial traffic began to flow on the Internet. An unidentified UK Cabinet Office spokesman recommended that: People should take advice on changing passwords from the websites they use. Most websites have corrected the bug and are best placed to advise what action, if any, people need to take. On the day of disclosure, The Tor Project advised: If you need strong anonymity or privacy on the Internet, you might want to stay away from the Internet entirely for the next few days while things settle. The Sydney Morning Herald published a timeline of the discovery on 15 April 2014, showing that some organizations had been able to patch the bug before its public disclosure. In some cases, it is not clear how they found out. Bodo Möller and Adam Langley of Google prepared the fix for Heartbleed. The resulting patch was added to Red Hat's issue tracker on 21 March 2014. Stephen N. Henson applied the fix to OpenSSL's version control system on 7 April. The first fixed version, 1.0.1g, was released on the same day. As of 21 June 2014[update], 309,197 public web servers remained vulnerable. As of 23 January 2017[update], according to a report from Shodan, nearly 180,000 internet-connected devices were still vulnerable. The number had dropped to 144,000 as of 6 July 2017[update], according to a search on shodan.io for "vuln:cve-2014-0160". According to Netcraft, about 30,000 of the 500,000+ X.509 certificates which could have been compromised due to Heartbleed had been reissued by 11 April 2014, although fewer had been revoked. By 9 May 2014, only 43% of affected web sites had reissued their security certificates. In addition, 7% of the reissued security certificates used the potentially compromised keys. Netcraft stated: By reusing the same private key, a site that was affected by the Heartbleed bug still faces exactly the same risks as those that have not yet replaced their SSL certificates. eWeek said, "[Heartbleed is] likely to remain a risk for months, if not years, to come." Cloudflare revoked all TLS certificates and estimated that publishing its Certificate revocation list would cost the issuer, GlobalSign, $400,000 that year. The Canada Revenue Agency reported a theft of social insurance numbers belonging to 900 taxpayers, and said that they were accessed through an exploit of the bug during a 6-hour period on 8 April 2014. After the discovery of the attack, the agency shut down its website and extended the taxpayer filing deadline from 30 April to 5 May. The agency said it would provide credit protection services at no cost to anyone affected. On 16 April, the RCMP announced they had charged a computer science student in relation to the theft with unauthorized use of a computer and mischief in relation to data. The UK parenting site Mumsnet had several user accounts hijacked, and its CEO was impersonated. The site later published an explanation of the incident saying it was due to Heartbleed and the technical staff patched it promptly. Anti-malware researchers also exploited Heartbleed to their own advantage in order to access secret forums used by cybercriminals. Studies were also conducted by deliberately setting up vulnerable machines. For example, on 12 April 2014, at least two independent researchers were able to steal private keys from an experimental server intentionally set up for that purpose by CloudFlare. Also, on 15 April 2014, J. Alex Halderman, a professor at University of Michigan, reported that his honeypot server, an intentionally vulnerable server designed to attract attacks in order to study them, had received numerous attacks originating from China. Halderman concluded that because it was a fairly obscure server, these attacks were probably sweeping attacks affecting large areas of the Internet. In August 2014, it was made public that the Heartbleed vulnerability enabled hackers to steal security keys from Community Health Systems, the second-biggest for-profit U.S. hospital chain in the United States, compromising the confidentiality of 4.5 million patient records. The breach happened a week after Heartbleed was first made public. Many major web sites patched the bug or disabled the Heartbeat Extension within days of its announcement, but it is unclear whether potential attackers were aware of it earlier and to what extent it was exploited.[citation needed] Based on examinations of audit logs by researchers, it has been reported that some attackers may have exploited the flaw for at least five months before discovery and announcement. Errata Security pointed out that a widely used non-malicious program called Masscan, introduced six months before Heartbleed's disclosure, abruptly terminates the connection in the middle of handshaking in the same way as Heartbleed, generating the same server log messages, adding "Two new things producing the same error messages might seem like the two are correlated, but of course, they aren't." According to Bloomberg News, two unnamed insider sources informed it that the United States' National Security Agency had been aware of the flaw since shortly after its appearance but‍—‌instead of reporting it‍—‌kept it secret among other unreported zero-day vulnerabilities in order to exploit it for the NSA's own purposes. The NSA has denied this claim, as has Richard A. Clarke, a member of the National Intelligence Review Group on Intelligence and Communications Technologies that reviewed the United States' electronic surveillance policy; he told Reuters on 11 April 2014 that the NSA had not known of Heartbleed. The allegation prompted the American government to make, for the first time, a public statement on its zero-day vulnerabilities policy, accepting the recommendation of the review group's 2013 report that had asserted "in almost all instances, for widely used code, it is in the national interest to eliminate software vulnerabilities rather than to use them for US intelligence collection", and saying that the decision to withhold should move from the NSA to the White House. The RFC 6520 Heartbeat Extension tests TLS/DTLS secure communication links by allowing a computer at one end of a connection to send a Heartbeat Request message, consisting of a payload, typically a text string, along with the payload's length as a 16-bit integer. The receiving computer then must send exactly the same payload back to the sender.[citation needed] The affected versions of OpenSSL allocate a memory buffer for the message to be returned based on the length field in the requesting message, without regard to the actual size of that message's payload. Because of this failure to do proper bounds checking, the message returned consists of the payload, possibly followed by whatever else happened to be in the allocated memory buffer.[citation needed] Heartbleed is therefore exploited by sending a malformed heartbeat request with a small payload and large length field to the vulnerable party (usually a server) in order to elicit the victim's response, permitting attackers to read up to 64 kilobytes of the victim's memory that was likely to have been used previously by OpenSSL. Where a Heartbeat Request might ask a party to "send back the four-letter word 'bird'", resulting in a response of "bird", a "Heartbleed Request" (a malicious heartbeat request) of "send back the 500-letter word 'bird'" would cause the victim to return "bird" followed by whatever 496 subsequent characters the victim happened to have in active memory. Attackers in this way could receive sensitive data, compromising the confidentiality of the victim's communications. Although an attacker has some control over the disclosed memory block's size, it has no control over its location, and therefore cannot choose what content is revealed.[citation needed] The affected versions of OpenSSL are OpenSSL 1.0.1 through 1.0.1f (inclusive). Subsequent versions (1.0.1g and later) and previous versions (1.0.0 branch and older) are not vulnerable. Installations of the affected versions are vulnerable unless OpenSSL was compiled with -DOPENSSL_NO_HEARTBEATS. The vulnerable program source files are t1_lib.c and d1_both.c and the vulnerable functions are tls1_process_heartbeat() and dtls1_process_heartbeat(). The problem can be fixed by ignoring Heartbeat Request messages that ask for more data than their payload need. Version 1.0.1g of OpenSSL adds some bounds checks to prevent the buffer over-read. For example, the following test was introduced to determine whether a heartbeat request would trigger Heartbleed; it silently discards malicious requests. if (1 + 2 + payload + 16 > s->s3->rrec.length) return 0; /* silently discard per RFC 6520 sec. 4 */ The OpenSSL version control system contains a complete list of changes. The data obtained by a Heartbleed attack may include unencrypted exchanges between TLS parties likely to be confidential, including any form post data in users' requests. Moreover, the confidential data exposed could include authentication secrets such as session cookies and passwords, which might allow attackers to impersonate a user of the service. An attack may also reveal private keys of compromised parties, which would enable attackers to decrypt communications (future or past stored traffic captured via passive eavesdropping, unless perfect forward secrecy is used, in which case only future traffic can be decrypted if intercepted via man-in-the-middle attacks).[citation needed] An attacker having gained authentication material may impersonate the material's owner after the victim has patched Heartbleed, as long as the material is accepted (for example, until the password is changed or the private key revoked). Heartbleed therefore constitutes a critical threat to confidentiality. However, an attacker impersonating a victim may also alter data. Indirectly, Heartbleed's consequences may thus go far beyond a confidentiality breach for many systems. A survey of American adults conducted in April 2014 showed that 60 percent had heard about Heartbleed. Among those using the Internet, 39 percent had protected their online accounts, for example by changing passwords or canceling accounts; 29 percent believed their personal information was put at risk because of the Heartbleed bug; and 6 percent believed their personal information had been stolen. Although the bug received more attention due to the threat it represents for servers, TLS clients using affected OpenSSL instances are also vulnerable. In what The Guardian therefore dubbed Reverse Heartbleed, malicious servers are able to exploit Heartbleed to read data from a vulnerable client's memory. Security researcher Steve Gibson said of Heartbleed that: It's not just a server-side vulnerability, it's also a client-side vulnerability because the server, or whomever you connect to, is as able to ask you for a heartbeat back as you are to ask them. The stolen data could contain usernames and passwords. Reverse Heartbleed affected millions of application instances. Some of the vulnerable applications are listed in the "Software applications" section below.[citation needed] Cisco Systems has identified 78 of its products as vulnerable, including IP phone systems and telepresence (video conferencing) systems. An analysis posted on GitHub of the most visited websites on 8 April 2014 revealed vulnerabilities in sites including Yahoo!, Imgur, Stack Overflow, Slate, and DuckDuckGo. The following sites have services affected or made announcements recommending that users update passwords in response to the bug: Akamai Technologies Amazon Web Services Ars Technica Bitbucket BrandVerity Freenode GitHub IFTTT Internet Archive Mojang Mumsnet PeerJ Pinterest Prezi Reddit Something Awful SoundCloud SourceForge SparkFun Stripe Tumblr All Wikimedia Foundation wikis (including Wikipedia in all languages) Wunderlist The Canadian federal government temporarily shut online services of the Canada Revenue Agency (CRA) and several government departments over Heartbleed bug security concerns. Before the CRA online services were shut down, a hacker obtained approximately 900 social insurance numbers. Another Canadian Government agency, Statistics Canada, had its servers compromised due to the bug and also temporarily took its services offline. Platform maintainers like the Wikimedia Foundation advised their users to change passwords. The servers of LastPass were vulnerable, but due to additional encryption and forward secrecy, potential attacks were not able to exploit this bug. However, LastPass recommended that its users change passwords for vulnerable websites. The Tor Project recommended that Tor relay operators and hidden service operators revoke and generate fresh keys after patching OpenSSL, but noted that Tor relays use two sets of keys and that Tor's multi-hop design minimizes the impact of exploiting a single relay. 586 relays later found to be susceptible to the Heartbleed bug were taken off-line as a precautionary measure. Game-related services including Steam, Minecraft, Wargaming, League of Legends, GOG.com, Origin, Sony Online Entertainment, Humble Bundle, and Path of Exile were affected and subsequently fixed. Vulnerable software applications include: Several Hewlett-Packard server applications, such as HP System Management Homepage (SMH) for Linux and Windows. Some versions of FileMaker 13 LibreOffice 4.2.0 to 4.2.2 (fixed in 4.2.3) LogMeIn claimed to have "updated many products and parts of our services that rely on OpenSSL". Multiple McAfee products, in particular some versions of software providing anti-viral coverage for Microsoft Exchange, software firewalls, and McAfee Email and Web Gateways Oracle MySQL Connector/C 6.1.0-6.1.3 and Connector/ODBC 5.1.13, 5.2.5-5.2.6, 5.3.2 Oracle Big Data Appliance (includes Oracle Linux 6) Primavera P6 Professional Project Management (includes Primavera P6 Enterprise Project Portfolio Management) WinSCP (FTP client for Windows) 5.5.2 and some earlier versions (only vulnerable with FTP over TLS/SSL, fixed in 5.5.3) Multiple VMware products, including VMware ESXi 5.5, VMware Player 6.0, VMware Workstation 10 and the series of Horizon products, emulators and cloud computing suites Several other Oracle Corporation applications were affected. Several Linux distributions were affected, including Debian (and derivatives such as Linux Mint and Ubuntu) and Red Hat Enterprise Linux (and derivatives such as CentOS, Oracle Linux 6 and Amazon Linux), as well as the following operating systems and firmware implementations: Android 4.1.1, used in various portable devices. Chris Smith writes in Boy Genius Report that just this one version of Android is affected but that it is a popular version of Android (Chitika claim 4.1.1 is on 50 million devices; Google describe it as less than 10% of activated Android devices). Other Android versions are not vulnerable as they either have heartbeats disabled or use an unaffected version of OpenSSL. Firmware for some AirPort base stations Firmware for some Cisco Systems routers Firmware for some Juniper Networks routers pfSense 2.1.0 and 2.1.1 (fixed in 2.1.2) DD-WRT versions between and including 19163 and 23881 (fixed in 23882) Western Digital My Cloud product family firmware Several services have been made available to test whether Heartbleed affects a given site. However, many services have been claimed to be ineffective for detecting the bug. The available tools include: Tripwire SecureScan AppCheck – static binary scan and fuzzing, from Synopsys Software Integrity Group (formerly Codenomicon) Arbor Network's Pravail Security Analytics Norton Safeweb Heartbleed Check Tool Heartbleed testing tool by a European IT security company Heartbleed test by Italian cryptographer Filippo Valsorda Heartbleed Vulnerability Test by Cyberoam Critical Watch Free Online Heartbleed Tester Metasploit Heartbleed scanner module Heartbleed Server Scanner by Rehmann Lookout Mobile Security Heartbleed Detector, an app for Android devices that determines the OpenSSL version of the device and indicates whether the vulnerable heartbeat is enabled Heartbleed checker hosted by LastPass Online network range scanner for Heartbleed vulnerability by Pentest-Tools.com Official Red Hat offline scanner written in the Python language Qualys SSL Labs' SSL Server Test which not only looks for the Heartbleed bug, but can also find other SSL/TLS implementation errors. Browser extensions, such as Chromebleed and FoxBleed SSL Diagnos CrowdStrike Heartbleed Scanner – Scans routers, printers and other devices connected inside a network including intranet web sites. Netcraft Site Report – indicates whether a website's confidentiality could be jeopardized due to a past exploitation of Heartbleed by checking data from Netcraft's SSL Survey to determine whether a site offered the heartbeat TLS Extension prior to the Heartbleed disclosure. The Netcraft Extensions for Chrome, Firefox and Opera also perform this check, whilst looking for potentially compromised certificates. Other security tools have added support for finding this bug. For example, Tenable Network Security wrote a plugin for its Nessus vulnerability scanner that can scan for this fault. The Nmap security scanner includes a Heartbleed detection script from version 6.45. Sourcefire has released Snort rules to detect Heartbleed attack traffic and possible Heartbleed response traffic. Open source packet analysis software such as Wireshark and tcpdump can identify Heartbleed packets using specific BPF packet filters that can be used on stored packet captures or live traffic. Vulnerability to Heartbleed is resolved by updating OpenSSL to a patched version (1.0.1g or later). OpenSSL can be used either as a standalone program, a dynamic shared object, or a statically-linked library; therefore, the updating process can require restarting processes loaded with a vulnerable version of OpenSSL as well as re-linking programs and libraries that linked it statically. In practice this means updating packages that link OpenSSL statically, and restarting running programs to remove the in-memory copy of the old, vulnerable OpenSSL code.[citation needed] After the vulnerability is patched, server administrators must address the potential breach of confidentiality. Because Heartbleed allowed attackers to disclose private keys, they must be treated as compromised; key pairs must be regenerated, and certificates that use them must be reissued; the old certificates must be revoked. Heartbleed also had the potential to allow disclosure of other in-memory secrets; therefore, other authentication material (such as passwords) should also be regenerated. It is rarely possible to confirm that a system which was affected has not been compromised, or to determine whether a specific piece of information was leaked. Since it is difficult or impossible to determine when a credential might have been compromised and how it might have been used by an attacker, certain systems may warrant additional remediation work even after patching the vulnerability and replacing credentials. For example, signatures made by keys that were in use with a vulnerable OpenSSL version might well have been made by an attacker; this raises the possibility integrity has been violated, and opens signatures to repudiation. Validation of signatures and the legitimacy of other authentications made with a potentially compromised key (such as client certificate use) must be done with regard to the specific system involved.[citation needed] Since Heartbleed threatened the privacy of private keys, users of a website which was compromised could continue to suffer from Heartbleed's effects until their browser is made aware of the certificate revocation or the compromised certificate expires. For this reason, remediation also depends on users making use of browsers that have up-to-date certificate revocation lists (or OCSP support) and honour certificate revocations.[citation needed] Although evaluating the total cost of Heartbleed is difficult, eWeek estimated US$500 million as a starting point. David A. Wheeler's paper How to Prevent the next Heartbleed analyzes why Heartbleed wasn't discovered earlier, and suggests several techniques which could have led to a faster identification, as well as techniques which could have reduced its impact. According to Wheeler, the most efficient technique which could have prevented Heartbleed is a test suite thoroughly performing robustness testing, i.e. testing that invalid inputs cause failures rather than successes. Wheeler highlights that a single general-purpose test suite could serve as a base for all TLS implementations. According to an article on The Conversation written by Robert Merkel, Heartbleed revealed a massive failure of risk analysis. Merkel thinks OpenSSL gives more importance to performance than to security, which no longer makes sense in his opinion. But Merkel considers that OpenSSL should not be blamed as much as OpenSSL users, who chose to use OpenSSL, without funding better auditing and testing. Merkel explains that two aspects determine the risk that more similar bugs will cause vulnerabilities. One, the library's source code influences the risk of writing bugs with such an impact. Secondly, OpenSSL's processes affect the chances of catching bugs quickly. On the first aspect, Merkel mentions the use of the C programming language as one risk factor which favored Heartbleed's appearance, echoing Wheeler's analysis. On the same aspect, Theo de Raadt, founder and leader of the OpenBSD and OpenSSH projects, has criticized the OpenSSL developers for writing their own memory management routines and thereby, he claims, circumventing OpenBSD C standard library exploit countermeasures, saying "OpenSSL is not developed by a responsible team." Following Heartbleed's disclosure, members of the OpenBSD project forked OpenSSL into LibreSSL. The author of the change which introduced Heartbleed, Robin Seggelmann, stated that he missed validating a variable containing a length and denied any intention to submit a flawed implementation. Following Heartbleed's disclosure, Seggelmann suggested focusing on the second aspect, stating that OpenSSL is not reviewed by enough people. Although Seggelmann's work was reviewed by an OpenSSL core developer, the review was also intended to verify functional improvements, a situation making vulnerabilities much easier to miss. OpenSSL core developer Ben Laurie claimed that a security audit of OpenSSL would have caught Heartbleed. Software engineer John Walsh commented: Think about it, OpenSSL only has two [fulltime] people to write, maintain, test, and review 500,000 lines of business critical code. The OpenSSL foundation's president, Steve Marquess, said "The mystery is not that a few overworked volunteers missed this bug; the mystery is why it hasn't happened more often." David A. Wheeler described audits as an excellent way to find vulnerabilities in typical cases, but noted that "OpenSSL uses unnecessarily complex structures, which makes it harder to both humans and machines to review." He wrote: There should be a continuous effort to simplify the code, because otherwise just adding capabilities will slowly increase the software complexity. The code should be refactored over time to make it simple and clear, not just constantly add new features. The goal should be code that is "obviously right", as opposed to code that is so complicated that "I can't see any problems". LibreSSL made a big code cleanup, removing more than 90,000 lines of C code just in its first week. According to security researcher Dan Kaminsky, Heartbleed is sign of an economic problem which needs to be fixed. Seeing the time taken to catch this simple error in a simple feature from a "critical" dependency, Kaminsky fears numerous future vulnerabilities if nothing is done. When Heartbleed was discovered, OpenSSL was maintained by a handful of volunteers, only one of whom worked full time. Yearly donations to the OpenSSL project were about US$2,000. The Heartbleed website from Codenomicon advised money donations to the OpenSSL project. After learning about donations for the 2 or 3 days following Heartbleed's disclosure totaling US$841, Kaminsky commented "We are building the most important technologies for the global economy on shockingly underfunded infrastructure." Core developer Ben Laurie has qualified the project as "completely unfunded". Although the OpenSSL Software Foundation has no bug bounty program, the Internet Bug Bounty initiative awarded US$15,000 to Google's Neel Mehta, who discovered Heartbleed, for his responsible disclosure. Mehta later donated his reward to a Freedom of the Press Foundation fundraiser. Paul Chiusano suggested Heartbleed may have resulted from failed software economics. The industry's collective response to the crisis was the Core Infrastructure Initiative, a multimillion-dollar project announced by the Linux Foundation on 24 April 2014 to provide funds to critical elements of the global information infrastructure. The initiative intends to allow lead developers to work full time on their projects and to pay for security audits, hardware and software infrastructure, travel, and other expenses. OpenSSL is a candidate to become the first recipient of the initiative's funding. After the discovery Google established Project Zero which is tasked with finding zero-day vulnerabilities to help secure the Web and society. McKenzie, Patrick (9 April 2014). "What Heartbleed Can Teach The OSS Community About Marketing". Kalzumeus. Archived from the original on 20 December 2017. Retrieved 8 February 2018. Biggs, John (9 April 2014). "Heartbleed, The First Security Bug With A Cool Logo". TechCrunch. Archived from the original on 11 February 2018. Retrieved 8 February 2018. "Heartbleed Bug". 11 October 2023. Archived from the original on 7 April 2014. Retrieved 9 April 2014. Pitkänen, Perttu (9 April 2014). "Näin suomalaistutkijat löysivät vakavan vuodon internetin sydämestä" [This is how Finnish researchers discovered a serious leak in the heart of the internet]. Ilta-Sanomat (in Finnish). Retrieved 11 October 2023. "Security Advisory – OpenSSL Heartbleed Vulnerability". Cyberoam. 11 April 2014. Archived from the original on 8 February 2018. Retrieved 8 February 2018. Limer, Eric (9 April 2014). "How Heartbleed Works: The Code Behind the Internet's Security Nightmare". Gizmodo. Archived from the original on 11 November 2014. Retrieved 24 November 2014. "CVE-2014-0160". Common Vulnerabilities and Exposures. Mitre. Archived from the original on 24 January 2018. Retrieved 8 February 2018. "CWE-126: Buffer Over-read (3.0)". Common Vulnerabilities and Exposures. Mitre. 18 January 2018. Archived from the original on 8 February 2018. Retrieved 8 February 2018. "AL14-005: OpenSSL Heartbleed Vulnerability". Cyber Security Bulletins. Public Safety Canada. 11 April 2014. Archived from the original on 8 February 2018. Retrieved 8 February 2018. "Add heartbeat extension bounds check". git.openssl.org. OpenSSL. Retrieved 5 March 2019. Pretorius, Tracey (10 April 2014). "Microsoft Services unaffected by OpenSSL "Heartbleed" vulnerability". Microsoft. Archived from the original on 8 February 2018. Retrieved 8 February 2018. Leyden, John (20 May 2014). "AVG on Heartbleed: It's dangerous to go alone. Take this (an AVG tool)". The Register. Archived from the original on 23 January 2018. Retrieved 8 February 2018. Graham, Robert (21 June 2014). "300k servers vulnerable to Heartbleed two months later". Errata Security. Archived from the original on 23 June 2014. Retrieved 22 June 2014. Shodan (23 January 2017). "Heartbleed Report (2017-01)". shodan.io. Archived from the original on 23 January 2017. Retrieved 10 July 2019. Schwartz, Mathew J. (30 January 2017). "Heartbleed Lingers: Nearly 180,000 Servers Still Vulnerable". Bank Info Security. Archived from the original on 11 July 2019. Retrieved 10 July 2019. Mac Vittie, Lori (2 February 2017). "Friendly Reminder: App Security in the Cloud Is Your Responsibility". F5 Labs. Archived from the original on 11 July 2019. Retrieved 10 July 2019. Carey, Patrick (10 July 2017). "Heartbleed's Heartburn: Why a 5 Year Old Vulnerability Continues to Bite". The Security Ledger. Archived from the original on 11 July 2019. Retrieved 10 July 2019. Shodan (11 July 2019). "[2019] Heartbleed Report". Shodan. Archived from the original on 11 July 2019. Retrieved 11 July 2019. Seggelmann, Robin; Tuexen, Michael; Williams, Michael (February 2012). Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) Heartbeat Extension. IETF. doi:10.17487/RFC6520. ISSN 2070-1721. RFC 6520. Retrieved 8 February 2018. Grubb, Ben (11 April 2014). "Man who introduced serious 'Heartbleed' security flaw denies he inserted it deliberately". The Sydney Morning Herald.[permanent dead link] "#2658: [PATCH] Add TLS/DTLS Heartbeats". OpenSSL. 2011. Archived from the original on 8 August 2017. Retrieved 13 April 2014. "Meet the man who created the bug that almost broke the Internet". Globe and Mail. 11 April 2014. Archived from the original on 4 January 2018. Retrieved 27 August 2017. Goodin, Dan (8 April 2014). "Critical crypto bug in OpenSSL opens two-thirds of the Web to eavesdropping". Ars Technica. Archived from the original on 5 July 2017. Retrieved 14 June 2017. "Mark J Cox – #Heartbleed". Archived from the original on 16 April 2014. Retrieved 12 April 2014. Pitkänen, Perttu (10 April 2014). "Oululaiset sorvasivat nimen ja logon: Näin superbugi tuotteistettiin" [The people of Oulu turned the name and logo: This is how the superbug was produced]. Ilta-Sanomat (in Finnish). Retrieved 11 October 2023. Dewey, Caitlin. "Why is it called the 'Heartbleed Bug'?". Archived from the original on 9 October 2014. Retrieved 25 November 2014. Lee, Timothy B. (10 April 2014). "Who discovered the vulnerability?". Vox. Archived from the original on 5 December 2017. Retrieved 4 December 2017. Lee, Ariana (13 April 2014). "How Codenomicon Found The Heartbleed Bug Now Plaguing The Internet". ReadWrite. Archived from the original on 5 September 2017. Retrieved 4 December 2017. Discovered independently by Google engineer Neel Mehta and the Finnish security firm Codenomicon, Heartbleed has been called 'one of the most serious security problems to ever affect the modern web.' "Näin suomalaistutkijat löysivät vakavan vuodon internetin sydämestä – transl/Finnish researchers found a serious leakage of the heart of the Internet". 10 April 2014. Archived from the original on 4 November 2014. Retrieved 13 April 2014. Mutton, Paul (8 April 2014). "Half a million widely trusted websites vulnerable to Heartbleed bug". Netcraft. Archived from the original on 19 November 2014. Retrieved 24 November 2014. Perlroth, Nicole; Hardy, Quentin (11 April 2014). "Heartbleed Flaw Could Reach to Digital Devices, Experts Say". The New York Times. Archived from the original on 28 April 2019. Retrieved 27 February 2017. Chen, Brian X. (9 April 2014). "Q. and A. on Heartbleed: A Flaw Missed by the Masses". The New York Times. Archived from the original on 12 April 2014. Retrieved 10 April 2014. Wood, Molly (10 April 2014). "Flaw Calls for Altering Passwords, Experts Say". The New York Times. Archived from the original on 19 October 2017. Retrieved 27 February 2017. Manjoo, Farhad (10 April 2014). "Users' Stark Reminder: As Web Grows, It Grows Less Secure". The New York Times. Archived from the original on 24 February 2018. Retrieved 27 February 2017. Zhu, Yan (8 April 2014). "Why the Web Needs Perfect Forward Secrecy More Than Ever". Electronic Frontier Foundation. Archived from the original on 20 December 2017. Retrieved 10 April 2014. Goodin, Dan (8 April 2014). "Critical crypto bug exposes Yahoo Mail, other passwords Russian roulette-style". Ars Technica. Archived from the original on 14 July 2017. Retrieved 14 June 2017. "Schneier on Security: Heartbleed". Schneier on Security. 11 April 2014. Archived from the original on 23 December 2017. Retrieved 10 April 2014. Steinberg, Joseph (10 April 2014). "Massive Internet Security Vulnerability – Here's What You Need To Do". Forbes. Archived from the original on 4 January 2018. Retrieved 29 August 2017. Kelion, Leo (11 April 2014). "US government warns of Heartbleed bug danger". BBC News. Archived from the original on 6 December 2018. Retrieved 21 June 2018. "OpenSSL bug CVE-2014-0160". Tor Project. 7 April 2014. Archived from the original on 10 July 2017. Retrieved 9 April 2014. Grubb, Ben (14 April 2014). "Heartbleed disclosure timeline: who knew what and when". The Sydney Morning Herald. Archived from the original on 25 November 2014. Retrieved 25 November 2014. "heartbeat_fix". Archived from the original on 19 November 2018. Retrieved 14 April 2014. ""complete list of changes" (Git – openssl.git/commitdiff)". The OpenSSL Project. 7 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Heartbleed certificate revocation tsunami yet to arrive". Netcraft. 11 April 2014. Archived from the original on 29 May 2014. Retrieved 24 April 2014. Mutton, Paul (9 May 2014). "Keys left unchanged in many Heartbleed replacement certificates!". Netcraft. Archived from the original on 27 August 2016. Retrieved 11 September 2016. Kerner, Sean Michael (10 May 2014). "Heartbleed Still a Threat to Hundreds of Thousands of Servers". eWeek. Archived from the original on 11 May 2014. Prince, Matthew (17 April 2014). "The hidden costs of Heartbleed". Cloudflare. Archived from the original on 30 April 2016. Evans, Pete (14 April 2014). "Heartbleed bug: 900 SINs stolen from Revenue Canada". CBC News. Archived from the original on 14 March 2018. Retrieved 4 November 2014. Some of the details are in the video linked from the page. "Canada Revenue Agency pushes tax deadline to May 5 after Heartbleed bug". 14 April 2014. Archived from the original on 4 November 2014. Retrieved 4 November 2014. Thibedeau, Hannah (16 April 2014). "Heartbleed bug accused charged by RCMP after SIN breach". CBC News. Archived from the original on 28 October 2014. Retrieved 4 November 2014. "Heartbleed hack case sees first arrest in Canada". BBC News. 16 April 2014. Archived from the original on 23 May 2018. Retrieved 21 June 2018. Kelion, Leo (14 April 2014). "Heartbleed hacks hit Mumsnet and Canada's tax agency". BBC News. Archived from the original on 29 November 2017. Retrieved 21 June 2018. "Mumsnet and Heartbleed as it happened". Mumsnet. Archived from the original on 29 December 2017. Retrieved 17 April 2014. Ward, Mark (29 April 2014). "Heartbleed used to uncover data from cyber-criminals". BBC News. Archived from the original on 14 May 2018. Retrieved 21 June 2018. Lawler, Richard (11 April 2014). "Cloudflare Challenge proves 'worst case scenario' for Heartbleed is actually possible". Engadget. Archived from the original on 29 December 2017. Retrieved 29 August 2017. "The Heartbleed Challenge". CloudFlare. 2014. Archived from the original on 12 April 2014. Robertson, Jordan (16 April 2014). "Hackers from China waste little time in exploiting Heartbleed". The Sydney Morning Herald. Archived from the original on 28 December 2017. Retrieved 16 April 2020. Frizell, Sam (20 August 2014). "Report: Devastating Heartbleed Flaw Was Used in Hospital Hack". Time. Archived from the original on 7 October 2014. Retrieved 7 October 2014. Cipriani, Jason (9 April 2014). "Heartbleed bug: Check which sites have been patched". CNET. Archived from the original on 17 April 2020. Retrieved 16 April 2020. Gallagher, Sean (9 April 2014). "Heartbleed vulnerability may have been exploited months before patch". Ars Technica. Archived from the original on 3 March 2017. Retrieved 14 June 2017. Eckersley, Peter (10 April 2014). "Wild at Heart: Were Intelligence Agencies Using Heartbleed in November 2013?". Eff.org. Archived from the original on 5 December 2014. Retrieved 25 November 2014. Graham, Robert (9 April 2014). "No, we weren't scanning for hearbleed before April 7". Errata Security. Archived from the original on 16 October 2017. Retrieved 10 April 2014. Riley, Michael (12 April 2014). "NSA Said to Exploit Heartbleed Bug for Intelligence for Years". Bloomberg. Archived from the original on 11 April 2014. Retrieved 7 March 2017. Molina, Brett. "Report: NSA exploited Heartbleed for years". USA Today. Archived from the original on 11 April 2014. Retrieved 11 April 2014. Riley, Michael. "NSA exploited Heartbleed bug for two years to gather intelligence, sources say". Financial Post. Archived from the original on 11 April 2014. Retrieved 11 April 2014. "Statement on Bloomberg News story that NSA knew about the 'Heartbleed bug' flaw and regularly used it to gather critical intelligence". National Security Agency. 11 April 2014. Archived from the original on 27 December 2017. Retrieved 13 April 2014. Hosenball, Mark; Dunham, Will (11 April 2014). "White House, spy agencies deny NSA exploited 'Heartbleed' bug". Reuters. Archived from the original on 15 April 2014. Retrieved 1 July 2017. Zetter, Kim. "U.S. Gov Insists It Doesn't Stockpile Zero-Day Exploits to Hack Enemies". Wired. wired.com. Archived from the original on 29 November 2014. Retrieved 25 November 2014. Hunt, Troy (9 April 2014). "Everything you need to know about the Heartbleed SSL bug". Troyhunt. Archived from the original on 11 April 2014. Retrieved 11 April 2014. "git.openssl.org Git – openssl.git/log". git.openssl.org. Archived from the original on 15 April 2014. Retrieved 25 November 2014. "Spiceworks Community Discussions". community.spiceworks.com. Archived from the original on 15 April 2014. Retrieved 11 April 2014. "OpenSSL Security Advisory [07 Apr 2014]". The OpenSSL Project. 7 April 2014. Archived from the original on 8 April 2014. Retrieved 9 April 2014. "OpenSSL versions and vulnerability [9 April 2014]". Comodo. Archived from the original on 5 July 2014. Retrieved 9 April 2014. "Cyberoam Users Need not Bleed over Heartbleed Exploit". cyberoam.com. Archived from the original on 15 April 2014. Retrieved 11 April 2014. "tls1_process_heartbeat [9 April 2014]". Archived from the original on 26 August 2014. Retrieved 10 April 2014. "Why Heartbleed is dangerous? Exploiting CVE-2014-0160". IPSec.pl. 2014. Archived from the original on 8 April 2014. Retrieved 9 April 2014. Graham-Cumming, John (28 April 2014). "Searching for The Prime Suspect: How Heartbleed Leaked Private Keys". CloudFlare. Archived from the original on 29 December 2017. Retrieved 7 June 2014. Judge, Kevin. "Servers Vulnerable to Heartbleed [14 July 2014]". Archived from the original on 26 August 2014. Retrieved 25 August 2014. Rainie, Lee; Duggan, Maeve (30 April 2014). "Heartbleed's Impact". Pew Research Internet Project. Pew Research Center. p. 2. Archived from the original on 28 December 2017. Retrieved 22 May 2014. Bradley, Tony (14 April 2014). "Reverse Heartbleed puts your PC and devices at risk of OpenSSL attack". PC World. IDG Consumer & SMB. Archived from the original on 2 December 2016. Retrieved 10 May 2014. Arthur, Charles (15 April 2014). "Heartbleed makes 50m Android phones vulnerable, data shows". The Guardian. Guardian News and Media Limited. Archived from the original on 19 March 2016. Retrieved 14 December 2016. "Security Now 451". Twit.Tv. Archived from the original on 19 April 2014. Retrieved 19 April 2014. Ramzan, Zulfikar (24 April 2014). "'Reverse Heartbleed' can attack PCs and mobile phones". SC Magazine. Haymarket Media, Inc. Archived from the original on 6 October 2016. Retrieved 10 May 2014. "OpenSSL Heartbeat Extension Vulnerability in Multiple Cisco Products". Cisco Systems. 9 April 2014. Archived from the original on 29 December 2017. Retrieved 8 May 2014. "heartbleed-masstest: Overview". GitHub. Archived from the original on 1 June 2014. Retrieved 19 April 2014. Cipriani, Jason (10 April 2014). "Which sites have patched the Heartbleed bug?". CNET. Archived from the original on 11 April 2014. Retrieved 10 April 2014. "Heartbleed FAQ: Akamai Systems Patched". Akamai Technologies. 8 April 2014. Archived from the original on 8 April 2014. Retrieved 9 April 2014. "AWS Services Updated to Address OpenSSL Vulnerability". Amazon Web Services. 8 April 2014. Archived from the original on 11 April 2014. Retrieved 9 April 2014. "Dear readers, please change your Ars account passwords ASAP". Ars Technica. 8 April 2014. Archived from the original on 18 January 2017. Retrieved 14 June 2017. "All Heartbleed upgrades are now complete". BitBucket Blog. 9 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Keeping Your BrandVerity Account Safe from the Heartbleed Bug". BrandVerity Blog. 9 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. @freenodestaff (8 April 2014). "we've had to restart a bunch of servers due to an openssl security vulnerability, which is/was very noisy. So sorry!" (Tweet) – via Twitter. "Security: Heartbleed vulnerability". GitHub. 8 April 2014. Archived from the original on 10 April 2014. Retrieved 9 April 2014. "IFTTT Says It Is 'No Longer Vulnerable' To Heartbleed". LifeHacker. 8 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Heartbleed bug and the Archive". Internet Archive Blogs. 9 April 2014. Retrieved 14 April 2014. @KrisJelbring (8 April 2014). "If you logged in to any of our games or websites in the last 24 hours using your username+password I'd recommend you to change your password" (Tweet). Retrieved 14 April 2014 – via Twitter. "The widespread OpenSSL 'Heartbleed' bug is patched in PeerJ". PeerJ. 9 April 2014. Archived from the original on 13 April 2014. Retrieved 9 April 2014. "Was Pinterest impacted by the Heartbleed issue?". Pinterest Help Center. Archived from the original on 21 April 2014. Retrieved 20 April 2014. "Heartbleed Defeated". Prezi. Archived from the original on 5 June 2014. Retrieved 13 April 2014. "We recommend that you change your reddit password". Reddit. 14 April 2014. Archived from the original on 15 April 2014. Retrieved 14 April 2014. "IMPORTANT ANNOUNCEMENTS FROM THE MAKERS OF CHILI". Archived from the original on 28 July 2013. Retrieved 13 April 2014. Codey, Brendan (9 April 2014). "Security Update: We're going to sign out everyone today, here's why". SoundCloud. Archived from the original on 13 April 2014. Retrieved 9 April 2014. "SourceForge response to Heartbleed". SourceForge. 10 April 2014. Archived from the original on 11 April 2014. Retrieved 10 April 2014. "Heartbleed". SparkFun. 9 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Heartbleed". Stripe (company). 9 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Tumblr Staff-Urgent security update". 8 April 2014. Archived from the original on 9 April 2014. Retrieved 9 April 2014. Hern, Alex (9 April 2014). "Heartbleed: don't rush to update passwords, security experts warn". The Guardian. Archived from the original on 3 January 2017. Retrieved 14 December 2016. Grossmeier, Greg (8 April 2014). "[Wikitech-l] Fwd: Security precaution – Resetting all user sessions today". Wikimedia Foundation. Archived from the original on 18 June 2014. Retrieved 9 April 2014. Grossmeier, Greg (10 April 2014). "Wikimedia's response to the "Heartbleed" security vulnerability". Wikimedia Foundation blog. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Wunderlist & the Heartbleed OpenSSL Vulnerability". 10 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Security concerns prompts tax agency to shut down website". CTV News. 9 April 2014. Archived from the original on 18 January 2021. Retrieved 9 April 2014. "Heartbleed: Canadian tax services back online". CBC News. Archived from the original on 25 April 2018. Retrieved 14 April 2014. Ogrodnik, Irene (14 April 2014). "900 SINs stolen due to Heartbleed bug: Canada Revenue Agency | Globalnews.ca". globalnews.ca. Global News. Archived from the original on 4 May 2019. Retrieved 4 May 2019. Seglins, Dave (3 December 2014). "CRA Heartbleed hack: Stephen Solis-Reyes facing more charges". cbc.ca. CBC News. Archived from the original on 4 May 2019. Retrieved 4 May 2019. "The Statistics Canada Site Was Hacked By an Unknown Attacker". Vice – Motherboard. Archived from the original on 24 December 2018. Retrieved 23 December 2018. Fiegerman, Seth (14 April 2014). "The Heartbleed Effect: Password Services Are Having a Moment". Mashable. Archived from the original on 16 October 2017. Retrieved 28 April 2014. "LastPass and the Heartbleed Bug". LastPass. 8 April 2014. Archived from the original on 18 December 2017. Retrieved 28 April 2014. "[tor-relays] Rejecting 380 vulnerable guard/exit keys". Lists.torproject.org. 16 April 2014. Archived from the original on 19 April 2014. Retrieved 19 April 2014. "Tor Weekly News—April 16th, 2014 | The Tor Blog". Blog.torproject.org. Archived from the original on 19 April 2014. Retrieved 19 April 2014. Gallagher, Sean (17 May 2012). "Tor network's ranks of relay servers cut because of Heartbleed bug". Ars Technica. Archived from the original on 1 May 2014. Retrieved 19 April 2014. Mimoso, Michael (17 April 2014). "Tor Blacklisting Exit Nodes Vulnerable to Heartbleed Bug | Threatpost | The first stop for security news". Threatpost. Archived from the original on 19 April 2014. Retrieved 19 April 2014. Younger, Paul (11 April 2014). "PC game services affected by Heartbleed and actions you need to take". IncGamers. Archived from the original on 15 April 2014. Retrieved 15 April 2014. "HP Servers Communication: OpenSSL "HeartBleed" Vulnerability". 18 April 2014. Archived from the original on 4 March 2016. "FileMaker products and the Heartbleed bug". 6 May 2014. Archived from the original on 12 October 2016. Retrieved 8 May 2014. italovignoli (10 April 2014). "LibreOffice 4.2.3 is now available for download". The Document Foundation. Archived from the original on 12 April 2014. Retrieved 11 April 2014. "CVE-2014-0160". LibreOffice. 7 April 2014. Archived from the original on 3 May 2014. Retrieved 2 May 2014. "LogMeIn and OpenSSL". LogMeIn. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "McAfee Security Bulletin – OpenSSL Heartbleed vulnerability patched in McAfee products". McAfee KnowledgeBase. 17 April 2014. Archived from the original on 16 April 2014. Retrieved 15 April 2014. "OpenSSL Security Bug – Heartbleed / CVE-2014-0160". Archived from the original on 28 May 2014. Retrieved 12 May 2014. "Recent Version History". WinSCP. 14 April 2014. Archived from the original on 27 April 2014. Retrieved 2 May 2014. "Response to OpenSSL security issue CVE-2014-0160/CVE-2014-0346 a.k.a: "Heartbleed"". VMware, Inc. Archived from the original on 16 April 2014. Retrieved 17 April 2014. "DSA-2896-1 openssl—security update". The Debian Project. 7 April 2014. Archived from the original on 11 April 2014. Retrieved 17 April 2014. "Ubuntu Security Notice USN-2165-1". Canonical, Ltd. 7 April 2014. Archived from the original on 13 April 2014. Retrieved 17 April 2014. "Important: openssl security update". Red Hat, Inc. 8 April 2014. Archived from the original on 18 April 2014. Retrieved 17 April 2014. "Karanbir Singh's posting to CentOS-announce". centos.org. 8 April 2014. Archived from the original on 14 April 2014. Retrieved 17 April 2014. "Amazon Linux AMI Security Advisory: ALAS-2014-320". Amazon Web Services, Inc. 7 April 2014. Archived from the original on 6 June 2014. Retrieved 17 April 2014. "Android 4.1.1 devices vulnerable to Heartbleed bug, says Google". NDTV Convergence. 14 April 2014. Archived from the original on 20 April 2014. Retrieved 19 April 2014. "Around 50 million Android smartphones are still vulnerable to the Heartbleed Bug". Fox News. 17 April 2014. Archived from the original on 19 April 2014. Retrieved 19 April 2014. "Heartbleed: Android 4.1.1 Jelly Bean could be seriously affected". BGR Media. 16 April 2014. Archived from the original on 9 March 2017. Retrieved 19 April 2014. Blaich, Andrew (8 April 2014). "Heartbleed Bug Impacts Mobile Devices". Bluebox. Archived from the original on 6 May 2014. Snell, Jason (22 April 2014). "Apple releases Heartbleed fix for AirPort Base Stations". Macworld. Archived from the original on 25 April 2020. Retrieved 16 April 2020. Kleinman, Alexis (11 April 2014). "The Heartbleed Bug Goes Even Deeper Than We Realized – Here's What You Should Do". The Huffington Post. Archived from the original on 23 March 2019. Retrieved 16 April 2020. Yadron, Danny (10 April 2014). "Heartbleed Bug Found in Cisco Routers, Juniper Gear". Dow Jones & Company, Inc. "2014-04 Out of Cycle Security Bulletin: Multiple products affected by OpenSSL "Heartbleed" issue (CVE-2014-0160)". Juniper Networks. 14 April 2014. Archived from the original on 16 April 2014. Retrieved 19 April 2014. "OpenSSL "Heartbleed" Information Disclosure, ECDSA". Electric Sheep Fencing LLC. 8 April 2014. Archived from the original on 2 May 2014. Retrieved 2 May 2014. "OpenVPN affected by OpenSSL bug CVE-2014-016?". DD-WRT Forum. Archived from the original on 26 February 2017. Retrieved 26 February 2017. "Heartbleed Bug Issue". Western Digital. 10 April 2014. Archived from the original on 19 April 2014. Brewster, Tom (16 April 2014). "Heartbleed: 95% of detection tools 'flawed', claim researchers". The Guardian. Guardian News and Media Limited. Archived from the original on 4 March 2016. Retrieved 14 December 2016. "Tripwire SecureScan". Tripwire – Take Control of IT Security and Regulatory Compliance with Tripwire Software. Archived from the original on 16 April 2014. Retrieved 7 October 2014. "AppCheck – static binary scan, from Codenomicon". Archived from the original on 17 October 2014. Retrieved 7 October 2014. "Arbor Network's Pravail Security Analytics". Archived from the original on 11 April 2014. Retrieved 7 October 2014. "Norton Safeweb Heartbleed Check Tool". Archived from the original on 10 October 2014. Retrieved 7 October 2014. "Heartbleed OpenSSL extension testing tool, CVE-2014-0160". Possible.lv. Archived from the original on 11 April 2014. Retrieved 11 April 2014. "Test your server for Heartbleed (CVE-2014-0160)". Archived from the original on 11 December 2017. Retrieved 25 November 2014. "Cyberoam Security Center". Archived from the original on 15 April 2014. Retrieved 25 November 2014. "Critical Watch :: Heartbleed Tester :: CVE-2014-0160". Heartbleed.criticalwatch.com. Archived from the original on 14 April 2014. Retrieved 14 April 2014. "metasploit-framework/openssl_heartbleed.rb at master". GitHub. Archived from the original on 28 June 2015. Retrieved 25 November 2014. "OpenSSL Heartbeat Vulnerability Check (Heartbleed Checker)". Archived from the original on 24 December 2014. Retrieved 25 November 2014. "Heartbleed Detector: Check If Your Android OS Is Vulnerable with Our App". Lookout Mobile Security. 9 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Heartbleed checker". LastPass. Archived from the original on 10 April 2014. Retrieved 11 April 2014. "OpenSSL Heartbleed vulnerability scanner :: Online Penetration Testing Tools | Ethical Hacking Tools". Pentest-tools.com. Archived from the original on 13 April 2014. Retrieved 11 April 2014. Stafford, Jared (14 April 2014). "heartbleed-poc.py". Red Hat, Inc. Archived from the original on 12 April 2014. Retrieved 11 April 2014. "Qualys's SSL Labs' SSL Server Test". Archived from the original on 7 October 2014. Retrieved 7 October 2014. "Chromebleed". Archived from the original on 18 October 2014. Retrieved 7 October 2014. "FoxBleed". Archived from the original on 12 October 2014. Retrieved 7 October 2014. "SSL Diagnos". SourceForge. Archived from the original on 12 October 2014. Retrieved 7 October 2014. "CrowdStrike Heartbleed Scanner". 18 April 2014. Archived from the original on 11 October 2014. Retrieved 7 October 2014. Lynn, Samara. "Routers, SMB Networking Equipment – Is Your Networking Device Affected by Heartbleed?". PCMag.com. Archived from the original on 24 April 2014. Retrieved 24 April 2014. "Netcraft Site Report". Archived from the original on 17 August 2014. Retrieved 7 October 2014. "Netcraft Extensions". Archived from the original on 11 October 2014. Retrieved 7 October 2014. Mutton, Paul (24 June 2014). "Netcraft Releases Heartbleed Indicator For Chrome, Firefox and Opera". Netcraft. Archived from the original on 11 July 2014. Retrieved 24 June 2014. Mann, Jeffrey (9 April 2014). "Tenable Facilitates Detection of OpenSSL Vulnerability Using Nessus and Nessus Perimeter Service". Tenable Network Security. Archived from the original on 13 April 2014. Retrieved 11 April 2014. "Nmap 6.45 Informal Release". 12 April 2014. Archived from the original on 17 April 2014. Retrieved 23 April 2014. "VRT: Heartbleed Memory Disclosure – Upgrade OpenSSL Now!". 8 April 2014. Archived from the original on 11 April 2014. Retrieved 11 April 2014. "Blogs | How to Detect a Prior Heartbleed Exploit". Riverbed. 9 April 2014. Archived from the original on 19 April 2014. Retrieved 19 April 2014. "Patched Servers Remain Vulnerable to Heartbleed OpenSSL | Hayden James". Haydenjames.io. 10 April 2014. Archived from the original on 13 April 2014. Retrieved 10 April 2014. "Security Certificate Revocation Awareness – Specific Implementations". Gibson Research Corporation. Archived from the original on 12 May 2014. Retrieved 7 June 2014. Kerner, Sean Michael (19 April 2014). "Heartbleed SSL Flaw's True Cost Will Take Time to Tally". eWeek. Archived from the original on 10 February 2020. Retrieved 24 April 2014. A. Wheeler, David (29 April 2014). "How to Prevent the next Heartbleed". Archived from the original on 2 February 2017. Retrieved 30 January 2017. Merkel, Robert (11 April 2014). "How the Heartbleed bug reveals a flaw in online security". The Conversation. Archived from the original on 17 April 2014. Retrieved 21 April 2014. "Re: FYA: http: heartbleed.com". Gmane. Archived from the original on 11 April 2014. Retrieved 11 April 2014. "Theo De Raadt's Small Rant On OpenSSL". Slashdot. Dice. 10 April 2014. Archived from the original on 24 April 2014. Retrieved 22 April 2014. Kerner, Sean Michael (22 April 2014). "After Heartbleed, OpenSSL Is Forked Into LibreSSL". eWeek. TechnologyAdvice. Retrieved 19 January 2021. Timson, Lia (11 April 2014). "Who is Robin Seggelmann and did his Heartbleed break the internet?". The Sydney Morning Herald. Archived from the original on 19 October 2017. Retrieved 16 April 2020. Williams, Chris (11 April 2014). "OpenSSL Heartbleed: Bloody nose for open-source bleeding hearts". The Register. Archived from the original on 19 September 2016. Retrieved 29 August 2017. Smith, Gerry (10 April 2014). "How The Internet's Worst Nightmare Could Have Been Avoided". The Huffington Post. Archived from the original on 19 July 2017. Retrieved 16 April 2020. The bug revealed this week was buried inside 10 lines of code and would have been spotted in an audit, according to Laurie, who works on the security team at Google. Walsh, John (30 April 2014). "Free Can Make You Bleed". SSH Communications Security. Archived from the original on 2 December 2016. Retrieved 11 September 2016. Seltzer, Larry (21 April 2014). "OpenBSD forks, prunes, fixes OpenSSL". Zero Day. ZDNet. Archived from the original on 21 April 2014. Retrieved 21 April 2014. Pagliery, Jose (18 April 2014). "Your Internet security relies on a few volunteers". CNNMoney. Cable News Network. Archived from the original on 7 August 2020. Retrieved 3 August 2020. Perlroth, Nicole (18 April 2014). "Heartbleed Highlights a Contradiction in the Web". The New York Times. Archived from the original on 8 May 2014. Retrieved 27 February 2017. Kaminsky, Dan (10 April 2014). "Be Still My Breaking Heart". Dan Kaminsky's Blog. Archived from the original on 14 April 2014. Retrieved 22 April 2014. "Here's another way exposing Heartbleed made the Internet more secure". The Daily Dot. 10 April 2014. Retrieved 25 January 2022. Chiusano, Paul (8 December 2014). "The failed economics of our software commons, and what you can about it right now". Paul Chiusano's blog. Archived from the original on 6 April 2017. Retrieved 3 November 2017. "Amazon Web Services, Cisco, Dell, Facebook, Fujitsu, Google, IBM, Intel, Microsoft, NetApp, Rackspace, VMware and The Linux Foundation Form New Initiative to Support Critical Open Source Projects". The Linux Foundation. 24 April 2014. Archived from the original on 25 April 2014. Retrieved 25 April 2014. Paul, Ian (24 April 2014). "In Heartbleed's wake, tech titans launch fund for crucial open-source projects". PC World. Archived from the original on 25 April 2014. Retrieved 24 April 2014. "Google Project Zero aims to keep the Heartbleed Bug from happening again". TechRadar. 15 July 2014. Archived from the original on 10 April 2017. Retrieved 9 April 2017. Greenberg, Andy (15 July 2014). "Meet 'Project Zero,' Google's Secret Team of Bug-Hunting Hackers". Wired. ISSN 1059-1028. Retrieved 6 March 2019. Brock, Kevin (2019). "Toward the Rhetorical Study of Code". Rhetorical Code Studies. University of Michigan Press. pp. 9–32. ISBN 978-0-472-13127-3. JSTOR j.ctvndv9pc.8. Retrieved 19 January 2021. Wu, Han (May 2014). Heartbleed OpenSSL Vulnerability: a Forensic Case Study at Medical School (PDF). NJMS Advancing Research IT (Report). Rutgers University. Retrieved 19 January 2021. Durumeric, Zakir; Li, Frank; et al. (5 November 2014). "The Matter of Heartbleed". Proceedings of the 2014 Conference on Internet Measurement Conference. New York, NY, USA: ACM. pp. 475–488. doi:10.1145/2663716.2663755. ISBN 978-1-4503-3213-2. S2CID 142767. Heartbleed at Wikipedia's sister projects Definitions from Wiktionary Media from Commons Resources from Wikiversity Data from Wikidata Summary and Q&A about the bug by Codenomicon Ltd Information for Canadian organizations and individuals List of all security notices Archived 19 July 2018 at the Wayback Machine