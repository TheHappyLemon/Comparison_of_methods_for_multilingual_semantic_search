In computing, a visual programming language (visual programming system, VPL, or, VPS), also known as diagrammatic programming, graphical programming or block coding, is a programming language that lets users create programs by manipulating program elements graphically rather than by specifying them textually. A VPL allows programming with visual expressions, spatial arrangements of text and graphic symbols, used either as elements of syntax or secondary notation. For example, many VPLs are based on the idea of "boxes and arrows", where boxes or other screen objects are treated as entities, connected by arrows, lines or arcs which represent relations. VPLs are generally the basis of Low-code development platforms. VPLs may be further classified, according to the type and extent of visual expression used, into icon-based languages, form-based languages, and diagram languages. Visual programming environments provide graphical or iconic elements which can be manipulated by users in an interactive way according to some specific spatial grammar for program construction. The general goal of VPLs is to make programming more accessible to novices and to support programmers at three different levels Syntax VPLs use icons/blocks, forms and diagrams trying to reduce or even eliminate the potential of syntactic errors helping with the arrangement of programming primitives to create well-formed programs. Semantics VPLs may provide some mechanisms to disclose the meaning of programming primitives. This could include help functions providing documentation functions built-in to programming languages. Pragmatics VPLs support the study of what programs mean in particular situations. This level of support allows users to put artifacts created with a VPL into a certain state in order to explore how the program will react to that state. Examples: In AgentSheets or AgentCubes users can set games or simulations into a particular state in order to see how program would react. With the Thymio programming language users can bring a robot into a certain state in order to see how it will react, i.e., which sensors will be activated. As of 2005, current developments try to integrate the visual programming approach with dataflow programming languages to either have immediate access to the program state, resulting in online debugging, or automatic program generation and documentation. Dataflow languages also allow automatic parallelization, which is likely to become one of the greatest programming challenges of the future. The Visual Basic, Visual C#, Visual J# etc. languages of the Microsoft Visual Studio integrated development environment (IDE) are not visual programming languages: the representation of algorithms etc. is textual even though the IDE embellishes the editing and debugging activities with a rich user interface. A similar consideration applies to most other rapid application development environments which typically support a form designer and sometimes also have graphical tools to illustrate (but not define) control flow and data dependencies. Parsers for visual programming languages can be implemented using graph grammars. The following list is not mutually exclusive, as some visual programming environments may incorporate elements from multiple paradigms. The choice of visual programming paradigm often depends on the specific requirements of the application or the preferences of the users or the developers. Block-based programming Popularized by platforms like Scratch and Blockly, used in educational settings and for introductory programming. Flowcharts Widely used in software engineering and systems design for representing algorithms and processes. Drag-and-drop interfaces Commonly used in GUI design tools and development environments for creating user interfaces. Node graphs Frequently used in visual programming languages, game development, and dataflow systems. Dataflow programming Popular in parallel computing, signal processing, and visual programming environments. Iconic programming Used in various contexts for simplifying programming tasks, often associated with mobile app development. State machines Widely employed in game development, control systems, and modeling reactive systems. Sheet-based programming Found in spreadsheet applications and certain educational programming environments. Timeline-based programming Common in multimedia and animation software for sequencing events over time. Spatial programming Applied in certain interactive and 3D modeling environments. Form-based programming Used in applications where user input and graphical interfaces play a significant role, such as data entry applications. Most of the VPLs are designed for education or domain-specific usage where is the target users are novice programmers. But there are some research projects try to provide a general-purpose visual programming language that can be used by mainstream programmers in any software project instead of using textual programming languages like (C, C++, Java, etc.). For example, research projects such as Envision and PWCT are designed to achieve this goal. It's common for a VPL to be developed using a textual programming language. Developing general-purpose VPLs allows the other way around. For example, a new textual programming language Compiler and Virtual Machine is developed using visual programming in 2016. The following contains a list of notable visual programming languages. AgentCubes, 3D and 2D game design and simulation design computational thinking tools. AgentSheets, game authoring and computational science authoring tool. Alice, an object based language used to program 3D environments. Analytica, for building and analyzing quantitative models for decision and risk analysis. App Inventor for Android, a tool for creating Android applications, based on Blockly and Kawa. Blockly, a client-side library for the programming language JavaScript for creating block-based visual programming languages (VPLs) and editors. Blockly is known for its use on Scratch. Bubble, for creating production-ready web applications. Catrobat, block-based visual programming language for animations, apps and games Etoys, developed under the direction of Alan Kay at Disney to support constructionist learning, influenced by Seymour Papert and the Logo programming language Flowcode, a visual programming tool for embedded microcontrollers and Windows. Flowgorithm, creates executable flowcharts which can be converted to several languages. Greenfoot, an IDE for Java or Stride primarily designed for educational purposes, as well as for GUI and game development Hopscotch, an iPad app, and visual programming language for creating touchscreen-oriented mobile applications. Kodu, a visual programming tool for Logo. Kojo, a programming language, IDE, and learning environment. mBlock, an extension of Scratch for Arduino hardware interfaces. Developed by Makeblock. Open Roberta, online programming environment from Fraunhofer IAIS, designed for children. Pencil Code, a visual programming language centered on drawing with a pencil Raptor, a product of the USAF, for drawing executable flowcharts. Scratch, a product of MIT, designed for children in K-12 and after-school programs. ScratchJr, an interpretation of Scratch designed primarily for younger audiences (5-7-year-old children). Snap!, a browser-based reimplementation of BYOB, and extension of Scratch, with first class procedures and lists. Used for teaching at UC Berkeley. Stagecast Creator, a Java-based teaching system. StarLogo, an agent-based simulation language developed by Mitchel Resnick, Eric Klopfer, and others at MIT Media Lab. An extension of the Logo programming language (a dialect of Lisp). ToonTalk, programming system for children. Visual Logic, for creating executable flowcharts. VIPLE Visual IoT/Robotics Programming Language Environment AudioMulch, an audio signal flow based sound and music creation environment Bidule, a modular node and patch cord environment for the creation of interactive computer music and multimedia (Windows, MacOS). Blender, the open source 3D graphics package, includes node graphs for building shaders, composites and textures, non-destructive geometry. Cameleon, graphical functional language Clickteam's The games factory/Multimedia fusion series, environments made for visually developing games Dynamo, a generative modeling interface for Autodesk Revit Filter Forge Node based filter generation for image processing. Houdini (software) vfx, modeling and animation software. GenerativeComponents, a parametric CAD software developed by Bentley Systems Grasshopper 3d, a generative modeling interface for Rhinoceros 3D Isadora, a proprietary graphic programming environment for Mac OS X and Microsoft Windows, with emphasis on real-time manipulation of digital video. Kyma (sound design language), a visual programming language for sound design used by musicians, researchers, and sound designers. Mama (software) â€“ a programming language and IDE for building 3D animations and games Max (software), visual programming environment for building interactive, real-time music and multimedia applications Max/MSP Pure Data nato.0+55+3d Nodal, a node-based generative programming software application for music composition Nuke, an object-based visual programming software for visual effects compositing by The Foundry powered by Tcl, Python and Blink-script. OpenMusic, a visual programming language for music composition (based on Common Lisp Object System (CLOS)) applications, and mobile applications Pure Data (Pd) is a visual programming language developed for creating interactive computer music and multimedia works. Quartz Composer, a language for processing and rendering graphical data (macOS) Reaktor, a DSP and MIDI-processing language by Native Instruments Scala Multimedia Authoring suite and complete multimedia system for AmigaOS and Windows Softimage, with ICE Interactive Creative Environment. SynthEdit, a Synthesizer construction tool using a VPL. TouchDesigner, visual programming language for real-time multimedia content Virtools, a middleware used to create interactive 3D experiences vvvv, a general purpose toolkit with a special focus on real-time video synthesis and programming large media environments with physical interfaces, real-time motion graphics, audio and video. WireFusion, visual programming environment for creating interactive 3D web presentations Babylon.js has a node material editor that can be used to build shaders, procedural textures, particle systems and post processing effects. Blender Game Engine (Graphical logic editor) Buildbox Clickteam Fusion, a 2D game creation software with event editor system, developed by Clickteam SARL, originally known as Klik n' Play, The Games Factory and Multimedia Fusion 2 Construct 2-3 are HTML5-based 2D game editors, developed by Scirra Ltd. Construct Classic is the previous, DirectX-based open-sourced version of Construct. CryEngine has a node-based visual programming language called FlowGraph. Dreams, which runs on PlayStation, has an extensive visual language to allow players to create any kind of game Game Builder Garage, a 3D and 2D game creation tool for the Nintendo Switch, developed by Nintendo. GameMaker Studio, has a drag-and-drop game creation system developed by YoYo Games. GameSalad is a visual game creation tool developed by GameSalad, Inc. GDevelop is a visual game creation tool created by Florian Rival (4ian). Godot game engine allows game scripts and graphics shaders to be built using node-graph visual programming languages. Human Resource Machine is a visual programming-based puzzle game developed by Tomorrow Corporation. Kodu, a software designed to program games with a 3D interface developed by Microsoft Research. MakeCode Arcade, by Microsoft Pixel Game Maker MV is an interface-based 2D video game development tool. Rec Room includes a game creation system with a node-based visual programming language called Circuits. Snowdrop has a visual scripting system. Stencyl, a video game creation tool. Unity has a visual scripting system as of the ECS release. Unreal Engine 4 has a node-based visual programming language called Blueprints, and also shaders. Many modern video games make use of behavior trees, which are in principle a family of simple programming languages designed to model behaviors for non-player characters. The behaviors are modeled as trees, and are often edited in graphical editors. Analytica, a commercial visual language for decision models based on influence diagrams. BPEL (Business Process Execution Language), currently a Graphical user based Programming Language used to create orchestration logic for data and web services. It is based on XML, but has a graphical interface for faster coding. DRAKON, a graphical algorithmic language EICASLAB, a software suite including a graphical language for supporting the design of control architectures Flowcode is a graphical programming language to program embedded microprocessors Function block diagrams, used in programmable logic controllers GNU Radio, a development toolkit which provides signal-processing blocks to implement software-defined-radios and signal-processing systems KNIME, the Konstanz Information Miner, is an open source data analytics, reporting and integration platform LabVIEW, a graphical language designed for engineers and scientists Ladder logic, a language that simulates relay logic commonly used in programmable logic controllers MeVisLab, cross-platform application framework for medical image processing and scientific visualization Microsoft Visual Programming Language, dataflow language for robotics programming that is a component of Microsoft Robotics Studio MindRover, a robot programming game incorporating a dataflow "wiring" language Minibloq, visual programming language for robotics and Arduino compatible boards MST Workshop, an interactive visual programming language for creating mathematical solutions, rapid prototyping, two-dimensional and three-dimensional graphic applications Node-RED: software system rapid development toolkit NXT-G, a visual programming language for the Lego Mindstorms NXT robotics kit OpenDX scientific data visualization using a visual programming language and data flow model OpenWire - adds visual dataflow programming abilities to Delphi via Visual Component Library (VCL) components and a graphical editor (homonymous binary protocol is unrelated) Orange - An open-source, visual programming tool for data mining, statistical data analysis, and machine learning OutSystems language, a visual modeling language to develop and change all layers of business centric web applications Prograph - an object-oriented programming language that uses iconic symbols to represent actions to be taken on data Ptolemy Project - a project aimed at modeling and designing real-time embedded systems. Qucs graphical interface to set up simulation of electronic circuit signal and noise behavior Reallusion - iClone, a 3D software with Lua language and visual programming design ROBO Pro, a visual programming language for the fischertechnik robotics kit Scicos A graphical language associated with the numerical analysis package ScicosLab (originally SciLab) Sequential function chart, a Petri-net like programming language for programmable logic controllers Simcenter Amesim, graphical programming environment for modeling, simulating and analyzing multidomain dynamical systems Simulink, graphical programming environment for modeling, simulating and analyzing multidomain dynamical systems Stateflow, a graphical language that includes â€¯executable state transition diagrams, flow charts, state transition tables, and truth tables STELLA, a VPL for system dynamics modeling Softimage ICE, a node-based system that is used to create and modify 3D models, simulate particles and perform various other tasks VEE is a powerful graphical programming environment for automated test, measurement and advanced analysis used in Test Engineering. VisSim, modeling and simulation language, allows making mathematical models quickly and executing them in real-time Automator CiMPLE, Visual Programming Language by ThinkLABs for teaching robotics Flow a graphical integration language used in the webMethods platform Pipeline Pilot is a scientific visual and dataflow programming language, and the authoring tool for the Accelrys Enterprise Platform. Ab Initio, a tool for ETL processing by creating graphs Alteryx Designer, a tool for data processing and analytics incorporating SQL, R, and Python. Apache Nifi, software project to automate the flow of data between software systems. IBM Cognos Business Intelligence, is an example for front-end programs in Business Intelligence applications, which are used to generate SQL queries to run against RDBMS databases IBM InfoSphere DataStage, an ETL tool Informatica Powercenter is an ETL tool to design mappings graphically for data load in Data Warehouse systems Microsoft Access, query design functionality Microsoft SQL Server Integration Services (SSIS), a platform for data integration and workflow applications Pentaho Data Integration (PDI), formerly named Kettle, an open-source ETL tool Cube, an esolang to emulate a 3D cube via a 2D text interface "Cube". Kwikpoint, an isotype visual translator created by Alan Stillman Lava, an experimental object oriented RAD language Morphic (software), makes it easier to build and edit graphical objects by direct manipulation and from within programs; the whole Self (programming language) programming environment is built using Morphic Piet, an esoteric language, the program is an image whose pixels are the language's elements PWCT, Free open source visual programming language for software development Pygmalion, a creative programming environment developed in 1975 by DARPA based on human communication and systems design Shortcuts, a visual scripting language developed by Apple for creating macros on macOS, iOS, iPadOS, and watchOS. StreamBase Systems, StreamBase EventFlow is a visual programming language for processing streaming events WebML, is a visual language for designing complex data-intensive Web applications that can be automatically generated Yahoo! Pipes is a visual data-flow programming system to process web data YAWL, graphical workflow language AppWare, also known as MicroBrew, icon based programming for classic Mac OS and Microsoft Windows Macromedia Authorware - flowchart based programming language Helix and Double Helix, a pioneering database management system for the Apple Macintosh platform, created in 1983 Illumination Software Creator, a language and IDE for visually creating desktop and mobile software ThingLab DRAKON (Dragon), a SDL- and AADL-influenced visual 2D programming language designed for developing the on-board hard real-time software system for automatic flight and landing of the Soviet/Russian Buran (Snowstorm) orbiting spacecraft Executable UML, a profile of the Universal Modeling Language specification defining executable semantics for a subset of UML Flowchart Subtext Argument map Cognitive dimensions of notations - Notation assessment for visual and non-visual languages Concept map Dataflow programming Deutsch limit, an aphorism about the information density of language primitives in a visual notation Domain-specific modeling Drag and drop Flow-based programming Graph drawing Low-code development platform No-code development platform Programming game Unified Modeling Language Visual language Visual modeling Visual thinking Bragg, S.D.; Driskill, C.G. (1994). "Diagrammatic-graphical programming languages and DoD-STD-2167A". Proceedings of AUTOTESTCON '94. pp.Â 211â€“220. doi:10.1109/AUTEST.1994.381508. ISBNÂ 0-7803-1910-9. S2CIDÂ 62509261. Kuhail, M. A.; Farooq, S.; Hammad, R.; Bahja, M. (2021). "Characterizing Visual Programming Approaches for End-User Developers: A Systematic Review". IEEE Access. 9: 14181â€“14202. Bibcode:2021IEEEA...914181K. doi:10.1109/ACCESS.2021.3051043. Jost, Beate; Ketterl, Markus; Budde, Reinhard; Leimbach, Thorsten (2014). "Graphical Programming Environments for Educational Robots: Open Roberta - Yet Another One?". 2014 IEEE International Symposium on Multimedia. pp.Â 381â€“386. doi:10.1109/ISM.2014.24. ISBNÂ 978-1-4799-4311-1. S2CIDÂ 8272806. Repenning, Alexander (2017). "Moving Beyond Syntax: Lessons from 20 Years of Blocks Programing in AgentSheets". Journal of Visual Languages and Sentient Systems. 3: 68â€“91. doi:10.18293/vlss2017-010. Johnston, W.M.; Hanna, J.R.P.; Millar, R.J. (2004). "Advances in dataflow programming languages" (PDF). ACM Computing Surveys. 36 (1): 1â€“34. doi:10.1145/1013208.1013209. S2CIDÂ 5257722. Retrieved 2011-02-16. Rekers, J.; SchÃ¼rr, A. (1997). "Defining and parsing visual languages with layered graph grammars". Journal of Visual Languages & Computing. 8 (1): 27â€“55. doi:10.1006/jvlc.1996.0027. S2CIDÂ 40088910. Zhang, D.-Q. (2001). "A context-sensitive graph grammar formalism for the specification of visual languages". The Computer Journal. 44 (3): 186â€“200. doi:10.1093/comjnl/44.3.186. hdl:10397/17637. S2CIDÂ 14139133. Asenov, D. and Muller, P., 2014, July. Envision: A fast and flexible visual code editor with fluid interactions (overview). In 2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC) (pp. 9-12). IEEE. "Envision". Fayed, M.S., Al-Qurishi, M., Alamri, A., Hossain, M.A. and Al-Daraiseh, A.A., 2020. PWCT: a novel general-purpose visual programming language in support of pervasive application development. CCF Transactions on Pervasive Computing and Interaction, 2, pp.164-177. Ayouni, M., 2020. Beginning Ring programming (Vol. 978, No. 1, pp. 4842-5832). Apress. http://www.computermusicjournal.org/reviews/31-* * * 2/regan-bidule.html "Shader Editor â€” Blender Manual". docs.blender.org. Retrieved 2021-01-22. "Compositing â€” Blender Manual". docs.blender.org. Retrieved 2021-01-22. "Texture Editing â€” Blender Manual". docs.blender.org. Retrieved 2021-01-22. "Reference/Release Notes/2.92/Geometry Nodes - Blender Developer Wiki". wiki.blender.org. Retrieved 2021-01-22. "Geometry Nodes â€” Blender Manual". docs.blender.org. Retrieved 2021-10-02. "Babylon.js Node Material Editor". nme.babylonjs.com. Retrieved 2021-01-22. Construct Classic home page Construct Classic page on SourceForge "Yahoo! pipes". Archived from the original on 2015-01-03. Retrieved 2015-01-03. Based on material from the Free On-line Dictionary of Computing, used with permission. Visual programming languages at Curlie