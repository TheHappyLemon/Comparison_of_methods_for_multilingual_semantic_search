Qt (pronounced "cute" or as an initialism) is cross-platform software for creating graphical user interfaces as well as cross-platform applications that run on various software and hardware platforms such as Linux, Windows, macOS, Android or embedded systems with little or no change in the underlying codebase while still being a native application with native capabilities and speed. Qt is currently being developed by The Qt Company, a publicly listed company, and the Qt Project under open-source governance, involving individual developers and organizations working to advance Qt. Qt is available under both commercial licenses and open-source GPL 2.0, GPL 3.0, and LGPL 3.0 licenses. Qt is used for developing graphical user interfaces (GUIs) and multi-platform applications that run on all major desktop platforms and mobile or embedded platforms. Most GUI programs created with Qt have a native-looking interface, in which case Qt is classified as a widget toolkit. Non-GUI programs can also be developed, such as command-line tools and consoles for servers. An example of such a non-GUI program using Qt is the Cutelyst web framework. Qt supports various C++ compilers, including the GCC and Clang C++ compilers and the Visual Studio suite. It supports other languages with bindings or extensions, such as Python via Python bindings and PHP via an extension for PHP5, and has extensive internationalization support. Qt also provides Qt Quick, that includes a declarative scripting language called QML that allows using JavaScript to provide the logic. With Qt Quick, rapid application development for mobile devices became possible, while logic can still be written with native code as well to achieve the best possible performance. Other features include SQL database access, XML parsing, JSON parsing, thread management and network support. The latest version of the Qt Framework is Qt 6.6, which was released on October 10, 2023. Also still supported are - for commercial users - 6.5 LTS, released on April 3, 2023, 6.2 LTS, released on 30 September 2021, and 5.15 LTS, released on 26 May 2020 – long-term support (LTS) versions are generally supported for three years with a commercial license, while 5.15 support was extended to five years for subscription license holders, and so it is supported until 26 May 2025. Additionally the KDE project provides unofficial support for, at least, Qt 5.15, i.e. not just for commercial users. In 2017, the Qt Company estimated a community of about 1 million developers worldwide in over 70 industries. Graphical user-interfaces and desktop environments that utilize Qt/QML as widget toolkit: KDE Plasma, a libre desktop environment for various computing devices DDE (Deepin Desktop Environment) of Linux Deepin UKUI (Ubuntu Kylin User Interface) CutefishDE, a desktop environment built with Qt Quick and essential KDE frameworks LXQt (Lightweight X11 Desktop Environment) Lumina, a desktop environment designed for BSD-based TrueOS Lomiri (formerly Unity8), a convergent desktop environment started by Canonical, maintained by Ubports Maui Shell, a DE that also features their own app suite Unity 2D, a desktop shell written in Qt and Qml Trinity DE, a continuously developed fork based on KDE3 SDDM, a display manager written in QML that is compatible with X11 and Wayland. Actively developed or maintained AsteroidOS, an open source operating system designed for smartwatches Avionics, Panasonic's in-flight entertainment system Sailfish OS, a mobile operating system developed by Jolla Plasma Mobile, a touch-based GUI developed by KDE LuneOS, community-driven successor for Palm/HP webOS Nemo Mobile, based on Mer Lomiri, formerly known as Unity8, a phone UI developed by Ubports, originally by Canonical Tesla Model S in-car UI webOS, a multitask operating system from LG for smart devices like TVs and smartwatches Sky Q, the home entertainment system of Sky plc Available, but inactive MeeGo handset and tablet UX Qtopia, a system by Nokia for embedded and mobile devices Many notable open-source or proprietary cross-platform software are using Qt or QML: 010 Editor, a commercial hex editor and text editor for Microsoft Windows, Linux and macOS. Ableton Live Adobe Photoshop Album Adobe Photoshop Elements AMD's Radeon Software Crimson Edition driver tool application. Audacious, a music player for Linux, Microsoft Windows, and other Unix-like operating systems. Autodesk Maya Autodesk 3ds Max Bitcoin Core, the reference bitcoin implementation. Most bitcoin forks also provide the reference GUI. Calibre, ebook collection application Celestia, real-time 3D simulator of the entire known universe (Qt only available with v1.7.0) CryEngine V editor DaVinci Resolve, a video editor Dogecoin Core community-driven cryptocurrency software. Dolphin (emulator), an emulator for the Wii and GameCube Dorico notation software Dragonframe stop motion animation software EAGLE by CadSoft Computer / Autodesk, an EDA application with schematic capture, PCB layout, auto-router and CAM features FreeCAD, free open source parametric 3D CAD modeler FreeMat free open source numerical computing environment Gambas free open source BASIC integrated development environment Google Earth GPlates, a plate tectonics visualisation software Igor Pro, a data analysis software Krita graphics editing and digital painting software LMMS, a cross-platform music production software Mathematica, a mathematical symbolic computation program, sometimes termed a computer algebra system or program, used in many scientific, engineering, mathematical, and computing fields. Monero, a privacy-focused cryptocurrency, implements its official desktop wallet software using Qt. MuseScore, an open-source, multiplatform notation software OBS, a libre cross-platform screencast software Orange data mining suite ParaView open-source cross-platform application for interactive, scientific visualization PCSX2, a free and open-source cross-platform Playstation 2 emulator qBittorrent cross-platform free and open-source BitTorrent client QGIS geographic information system Qtractor Audio multitrack recorder and editing software QuiteRSS Feed Reader Retroshare F2F communication platform Roblox Studio a game creation tool used on the Roblox platform Scribus desktop publishing software Sibelius music composition and notation software SoulseekQT, a P2P file-sharing client Source 2 engine tools a 3D video game engine developed by Valve Spyder, a Python IDE Stellarium, a planetarium program Subsurface, a software for logging and planning scuba dives initially designed and developed by Linus Torvalds SuperCollider, an environment and programming language for real-time audio synthesis and algorithmic composition Teamviewer, a computer software package for remote control, desktop sharing, online meetings, web conferencing and file transfer between computers Telegram, a messaging client available for Windows, Mac and Linux VirtualBox OS virtualization software VLC media player Wireshark, a packet analyzer WPS Office XaoS, a real-time fractal zoomer XnView MP Qt is utilized by a wide range of companies and organizations such as AMD Blizzard Entertainment BMW Crytek Daimler AG DreamWorks Electronic Arts European Space Agency German Air Traffic Control HP LG Lucasfilm Microsoft Panasonic Philips Robert Bosch GmbH Samsung Siemens Tesla Tomtom Valve Volvo Walt Disney Animation Studios Qt is built on these key concepts: Complete abstraction of the GUI When first released, Qt used its own paint engine and controls, emulating the look of the different platforms it runs on when it drew its widgets. This made the porting work easier because very few classes in Qt really depended on the target platform; however, this occasionally led to slight discrepancies where that emulation was imperfect. Recent versions of Qt use the native style APIs of the different platforms, on platforms that have a native widget set, to query metrics and draw most controls, and do not suffer from such issues as often. On some platforms (such as MeeGo and KDE) Qt is the native API. Some other portable graphical toolkits have made different design decisions; for example, wxWidgets uses the toolkits of the target platform for its implementations. Signals and slots A language construct introduced in Qt for communication between objects which makes it easy to implement the observer pattern while avoiding boilerplate code. The concept is that GUI widgets can send signals containing event information which can be received by other controls using special functions known as slots. Metaobject compiler The metaobject compiler, termed moc, is a tool that is run on the sources of a Qt program. It interprets certain macros from the C++ code as annotations, and uses them to generate added C++ code with meta information about the classes used in the program. This meta information is used by Qt to provide programming features not available natively in C++: signals and slots, introspection and asynchronous function calls. Language bindings Qt can be used in several programming languages other than C++, such as Python, Javascript, C# and Rust via language bindings; many languages have bindings for Qt 5 and bindings for Qt 4. Starting with Qt 4.0 the framework was split into individual modules. With Qt 5.0 the architecture was modularized even further. Qt is now split into essential and add-on modules. There are four editions of Qt available: Community, Indie Mobile, Professional and Enterprise. The Community version is under the open source licenses, while the Indie Mobile, Professional and Enterprise versions, which contain additional functionality and libraries, e.g. Enterprise Controls are commercially sold by The Qt Company. Qt works on many different platforms; the following are officially supported: After Nokia opened the Qt source code to the community on Gitorious, various ports appeared. There are also some ports of Qt that may be available, but are not supported anymore. These platforms are listed in List of platforms supported by Qt. See also there for current community support for other lesser known platforms, such as SailfishOS. Qt is available under the following free software licenses: GPL 2.0, GPL 3.0, LGPL 3.0 and LGPL 2.1 (with Qt special exception). Note that some modules are available only under a GPL license, which means that applications which link to these modules need to comply with that license. In addition, Qt has always been available under a commercial license, like the Qt Commercial License, that allows developing proprietary applications with no restrictions on licensing. Qt comes with its own set of tools to ease cross-platform development, which can otherwise be cumbersome due to different set of development tools. Qt Creator is a cross-platform IDE for C++ and QML. Qt Designer's GUI layout/design functionality is integrated into the IDE, although Qt Designer can still be started as a standalone tool. In addition to Qt Creator, Qt provides qmake, a cross-platform build script generation tool that automates the generation of Makefiles for development projects across different platforms. There are other tools available in Qt, including the Qt Designer interface builder and the Qt Assistant help browser (which are both embedded in Qt Creator), the Qt Linguist translation tool, uic (user interface compiler), and moc (Meta-Object Compiler). In the summer of 1990, Haavard Nord and Eirik Chambe-Eng (the original developers of Qt and the CEO and President, respectively, of Trolltech) were working together on a database application for ultrasound images written in C++ and running on Mac OS, Unix, and Microsoft Windows. They began development of "Qt" in 1991, three years before the company was incorporated as Quasar Technologies, then changed the name to Troll Tech and then to Trolltech. The toolkit was called Qt because the letter Q looked appealing in Haavard's Emacs typeface, and "t" was inspired by Xt, the X toolkit. The first two versions of Qt had only two flavors: Qt/X11 for Unix and Qt/Windows for Windows. On 20 May 1995 Trolltech publicly released Qt 0.90 for X11/Linux with the source code under the Qt Free Edition License. This license was viewed as not compliant with the free software definition by Free Software Foundation because, while the source was available, it did not allow the redistribution of modified versions. Trolltech used this license until version 1.45. Controversy erupted around 1998 when it became clear that the K Desktop Environment was going to become one of the leading desktop environments for Linux. As it was based on Qt, many people in the free software movement worried that an essential piece of one of their major operating systems would be proprietary. The Windows platform was available only under a proprietary license, which meant free/open source applications written in Qt for X11 could not be ported to Windows without purchasing the proprietary edition. With the release of version 2.0 of the toolkit in mid-1999, the license was changed to the Q Public License (QPL), a free software license, but one regarded by the Free Software Foundation as incompatible with the GPL. Compromises were sought between KDE and Trolltech whereby Qt would not be able to fall under a more restrictive license than the QPL, even if Trolltech was bought out or went bankrupt. This led to the creation of the KDE Free Qt foundation, which guarantees that Qt would fall under a BSD-style license should no free/open source version of Qt be released during 12 months. In 2000, Qt/X11 2.2 was released under the GPL v2, ending all controversy regarding GPL compatibility. At the end of 2001, Trolltech released Qt 3.0, which added support for Mac OS X (now known as macOS). The Mac OS X support was available only in the proprietary license until June 2003, when Trolltech released Qt 3.2 with Mac OS X support available under the GPL. In 2002, members of the KDE on Cygwin project began porting the GPL licensed Qt/X11 code base to Windows. This was in response to Trolltech's refusal to license Qt/Windows under the GPL on the grounds that Windows was not a free/open source software platform. The project achieved reasonable success although it never reached production quality. This was resolved when Trolltech released Qt 4.0 also for Windows under the GPL in June 2005. Qt 4 supported the same set of platforms in the free software/open source editions as in the proprietary edition, so it is possible, with Qt 4.0 and later releases, to create GPL-licensed free/open source applications using Qt on all supported platforms. The GPL v3 with special exception was later added as an added licensing option. The GPL exception allows the final application to be licensed under various GPL-incompatible free software/open source licenses such as the Mozilla Public License 1.1. Nokia acquired Trolltech ASA on 17 June 2008 and changed the name first to Qt Software, then to Qt Development Frameworks. Nokia focused on turning Qt into the main development platform for its devices, including a port to the Symbian S60 platform. Version 1.0 of the Nokia Qt SDK was released on 23 June 2010. The source code was made available over Gitorious, a community oriented git source code repository, with a goal of creating a broader community using and improving Qt. On 14 January 2009, Qt version 4.5 added another option, the LGPL, to make Qt more attractive for both non-GPL open source projects and closed applications. In February 2011, Nokia announced its decision to drop Symbian technologies and base their future smartphones on the Windows Phone platform instead (and since then support for that platform has also been dropped). One month later, Nokia announced the sale of Qt's commercial licensing and professional services to Digia, with the immediate goal of taking Qt support to Android, iOS and Windows 8 platforms, and to continue focusing on desktop and embedded development, although Nokia was to remain the main development force behind the framework at that time. In March 2011, Nokia sold the commercial licensing part of Qt to Digia, creating Qt Commercial. In August 2012, Digia announced that it would acquire Qt from Nokia. The Qt team at Digia started their work in September 2012. They released Qt 5.0 within a month and newer versions every six months with new features and additional supported platforms. In September 2014, Digia transferred the Qt business and copyrights to their wholly owned subsidiary, The Qt Company, which owns 25 brands related to Qt. In May 2016, Digia and Qt demerged completely into two independent companies. Qt 5 was officially released on 19 December 2012. This new version marked a major change in the platform, with hardware-accelerated graphics, QML and JavaScript playing a major role. The traditional C++-only QWidgets continued to be supported, but did not benefit from the performance improvements available through the new architecture. Qt 5 brings significant improvements to the speed and ease of developing user interfaces. Framework development of Qt 5 moved to open governance at qt-project.org, which made it possible for developers outside Digia to submit patches for review. Aside from The Qt Company, many organizations and individuals using Qt as their development platform participate in the open development of Qt via the Qt Project. One such Qt contributor is Klarälvdalens Datakonsult AB, a Swedish Qt consulting company. KDAB is involved in many areas, including maintenance of several components. Together with RIM/BlackBerry, KDAB is maintaining the QNX and BlackBerry 10 ports of Qt. Another participator is Intel, contributing for example Wayland support. AudioCodes maintains IBM ClearCase support in Qt Creator. As a heavy user of Qt, the KDE project submits many patches and features from its developer library KDE Frameworks back to Qt. List of widget toolkits Android software development iOS SDK Wt (web toolkit) Qt Wiki provides a comprehensive list of English books about Qt. This is a list of notable books: Bocklage-Ryannel, Juergen; Thelin, Johan (12 May 2015). "Qt 5 Cadaques" (1st ed.). Blanchette, Jasmin; Summerfield, Mark (14 February 2008). C++ GUI Programming with Qt 4 (2nd ed.). Prentice Hall. ISBN 978-0-13-235416-5. Summerfield, Mark (23 August 2010). Advanced Qt Programming: Creating Great Software with C++ and Qt 4 (1st ed.). Addison-Wesley. ISBN 978-0-321-63590-7. Fitzek, Frank H. P.; Mikkonen, Tommi; Torp, Tony (17 May 2010). Qt for Symbian (1st ed.). Wiley. ISBN 978-0-470-75010-0. Archived from the original on 19 December 2009. Summerfield, Mark (28 October 2007). Rapid GUI Programming with Python and Qt (1st ed.). Prentice Hall. ISBN 978-0-13-235418-9. Molkentin, Daniel (19 July 2007). The Book of Qt 4: The Art of Building Qt Applications (1st ed.). No Starch Press. ISBN 978-1-59327-147-3. Thelin, Johan (3 August 2007). Foundations of Qt Development (1st ed.). Apress. ISBN 978-1-59059-831-3. Archived from the original on 20 January 2015. Retrieved 18 June 2015. Dalheimer, Matthias (January 2002). Programming with Qt (2nd ed.). O'Reilly Media. ISBN 978-0-596-00064-6. Ezust, Alan; Ezust, Paul (10 September 2006). An Introduction to Design Patterns in C++ with Qt 4 (2nd ed.). Prentice Hall. ISBN 978-0-13-187905-8. Blanchette, Jasmin; Summerfield, Mark (June 2006). "A Brief History of Qt". C++ GUI Programming with Qt 4 (1st ed.). Prentice-Hall. pp. xv–xvii. Archived from the original on 23 September 2019. Retrieved 5 August 2013. "Qt 6.7 Beta 1 Released". 20 December 2023. Retrieved 20 December 2023. "Supported Platforms". "Licenses". "New agreement with the KDE Free Qt Foundation and changes for the open source version". The Qt Company. "Adding LGPL v3 to Qt". 20 August 2014. "Qt - About Us". Archived from the original on 22 February 2017. Ashlee Vance (16 February 2010). "That Smartphone Is So Qt". Retrieved 19 February 2010. Pintscher, Lydia (21 October 2011). "KDE Applauds Qt's Move to Open Governance". KDE.News. Retrieved 8 May 2013. Meyer, David (24 October 2011). "Nokia gives Qt open-source governance". ZDNet. Retrieved 8 May 2013. Knoll, Lars (6 August 2014). "Defragmenting Qt and Uniting Our Ecosystem". "Legal - FAQ - Qt". www.qt.io. The Qt Company. Retrieved 25 April 2019. "Cutelyst - Home". "PyQt Documentation". www.riverbankcomputing.com. 27 December 2023. "PHP-Qt - the Qt extension for php". www.php-qt.org. 10 October 2020. Archived from the original on 12 October 2020. Retrieved 12 October 2020. "Qt 6.2.2 Released". Qt. The Qt Company. 1 December 2021. Retrieved 6 December 2021. "QT GROUP OYJ - Managers' Transactions, 12/4/2017". 12 April 2017. Retrieved 8 June 2017. Shneor, Rotem (2012). Handbook of Research on Born Globals, Chapter 10: Born Global Firms, Internet, and New Forms of Internationalization. Edward Elgar. ISBN 9780857938046. Retrieved 8 June 2017. "The KDE development platform". Marius Nestor (24 December 2015). "Beautifully Crafted Deepin 15 Linux OS Drops Ubuntu for Debian Sid, RC Out Now". The Deepin desktop environment has been refactored in the latest Qt GUI toolkit, replacing the HTML5 and WebKit frameworks, while Go is still used for the backend. "深度操作系统 15 RC ——用真心捕获你的芳心 – 深度科技社区". Deepin.org. 23 December 2015. Retrieved 15 June 2017. Joey Sneddon (5 February 2020). "Wowser, the UKUI 3.0 Desktop Looks Phenomenal (Updated)". omg!ubuntu!. "OMGUbuntu Review". 11 June 2021. "Lumina Homepage". "Lomiri: New name, Same Great Unity8". ubports.com. 12 July 2019. "Unity8 Code Repository on Github". Github.com. 13 September 2022. "Review by Tylers Tech channel". YouTube. "About Trinity". www.trinitydesktop.org. Retrieved 25 April 2019. "X Series Qt-based graphical user interface". Archived from the original on 23 February 2016. Retrieved 14 March 2016. "Avionics powered by Qt". 17 June 2015. "Qt Interface". 23 October 2013. "Sky teams up with The QT Company on Sky Q". 19 April 2016. Blanchette, Jasmin; Summerfield, Mark (4 February 2008). C++ GUI Programming with Qt4 By Jasmin Blanchette, Mark Summerfield. Pearson Education. ISBN 9780132703000. Zerfos, Petros; Montanari, Rebecca; Phan, Thomas (11 May 2010). Mobile Computing, Applications, and Services: First International ICST Conference, MobiCASE 2009, San Diego, CA, USA, October 26-29, 2009, Revised Selected Papers, Edited by Petros Zerfos, Rebecca Montanari, Thomas Phan. Springer. ISBN 9783642126062. Walton, Mark (2 November 2015). "AMD Radeon Software Crimson: A new name and a new look for Catalyst". "Qt in Autodesk". Archived from the original on 23 July 2011. "What's New: 3ds Max 2018 SDK". help.autodesk.com. Retrieved 14 June 2019. 3ds Max 2018 now uses Qt 5.6.2, and plug-ins can build UIs in Qt using the standard GPL Qt 5.6.2 distribution, and the Visual Studio 2015 Qt add-on "Plugin devs: Upcoming migration to Qt 6 - MobileRead Forums". "An update on our Sandbox interface and the Legacy Editor". "Dogecoin Core [DOGE, Ð]". GitHub. "Dyami Caliri, Qt Champion 2014". "Google Earth Includes a Web Browser". Googlesystem.Blogspot.de. 15 June 2010. Retrieved 8 April 2013. "Krita 3.0 Released". 31 May 2016. Retrieved 5 September 2017. "Mathematica by Wolfram Research". Archived from the original on 29 May 2013. "Monero GUI". GitHub. 2 June 2022. "Orange3 Data Mining Suite". GitHub. 3 June 2022. "Parallel Data Analysis and Visualization Application based on VTK". "Qbittorrent". GitHub. 18 February 2022. "PyQGIS Developer Cookbook: Introduction". qgis.org. Retrieved 1 March 2017. the whole QGIS code depends on Qt libraries "Scribus Development". "Sibelius - the leading music composition and notation software". www.sibelius.com. Retrieved 19 October 2016. "SoulseekQT Public Build 1". Archived from the original on 12 May 2014. Retrieved 4 January 2024. "Panorama". Valve Developer Community. Retrieved 28 April 2017. "Subsurface 4.0 has been released". 15 December 2013. "TeamViewer 13". December 2017. "Telegram desktop messaging app". GitHub. 17 February 2022. "VBoxMainLogging - Oracle VM VirtualBox". "Qt Interface". "Qt Application Framework". wps-community (14 June 2017). "wps_i18n: KSO/WPS internationalization support". Retrieved 15 June 2017 – via GitHub. "XnView MP". "AMD's Radeon Software Crimson Edition". Retrieved 30 June 2016. "Blizzard's additions/modifications to Qt". GitHub. 28 April 2021. QtWS16- Qt Creator as BMW Car IT Automotive IDE, Helio Chissini de Castro, BMW Car IT. Archived from the original on 11 December 2021. "Qt selected for In-Vehicle Infotainment (IVI) Systems by leading automotive OEMs" (Press release). Built with Qt: Mercedes-Benz Generation EQ. Archived from the original on 11 December 2021. Behind the Scenes at DreamWorks Animation: Making the Apps that Make the Movies. Archived from the original on 11 December 2021. UI & System Design Challenges for the NxG Lighting Tool. Archived from the original on 11 December 2021. "Open Source - Electronic Arts". "Qt in the European Space Agency". Archived from the original on 23 July 2011. "10 Qt use cases you didn't know". Archived from the original on 30 July 2013. "Developing Innovative Desktop and Embedded HP Products with Qt". Archived from the original on 6 May 2014. Porter, Jon (26 June 2019). "LG tries to bring webOS to cars, robots, and the smart home with new partnership". The Verge. Retrieved 28 April 2020. "Lucasfilm Entertainment Company Ltd" (Press release). "Qt in Visual Effects". Archived from the original on 23 July 2011. "Qt World Summit talk". "Panasonic selects Qt for HD video system". Archived from the original on 23 July 2011. "Qt in IP Communications". Archived from the original on 23 July 2011. "Bosch DruckMessWT built with Qt". January 2019. "Qt in Home Media". Archived from the original on 23 July 2011. "Qt helped Siemens deliver a C++ development platform for manufacturing software GUIs". Archived from the original on 14 July 2011. Fred Lambert (19 May 2018). "Tesla releases some of its software to comply with open source licences". "TomTom Builds Automotive HMIs with Qt". Retrieved 20 May 2019. "Qt". Valve Developer Community. Retrieved 28 April 2017. "Volvo Mobility Systems". Archived from the original on 14 July 2011. "Qt helped Walt Disney reduce development time spent on its cross-platform feature film production application". Archived from the original on 14 July 2011. "Library". Digia. Archived from the original on 1 November 2013. Qt uses the native graphics APIs of each platform it supports, taking full advantage of system resources and ensuring that applications have native look and feel. "Signals & Slots - QtCore 5.1". Qt Project. 4 July 2013. Retrieved 10 April 2015. "Qt applications with Cargo". www.vandenoever.info. 30 October 2018. Retrieved 25 April 2019. "Trolltech Releases Qt 4.0". KDE. 28 June 2005. Retrieved 5 August 2013. "All Modules | Documentation". Qt Project. Archived from the original on 29 March 2013. Retrieved 8 April 2013. Qt Blog (19 December 2012). "Introducing Qt 5.0 | Qt Blog". Digia. Retrieved 8 April 2013. Kyle Morris (24 December 2012). "Qt 5.0 - Congratulations to the Qt Project". KDE. Retrieved 5 August 2013. "Qt 6 Documentation: All Modules". Qt Project. Retrieved 1 December 2022. "Qt Download page". Download Qt. The Qt Company. Retrieved 21 November 2014. "Qt Wiki – Support for Linux/X11". Qt Project. 24 March 2016. Retrieved 27 July 2019. "Getting started with Lighthouse". Retrieved 25 November 2011. Høgsberg, Kristian (25 January 2011). "Add wayland lighthouse plugin". Archived from the original on 3 February 2016. Lind, Jørgen (18 March 2011). "Multi-process Lighthouse". Qt Project. Retrieved 21 August 2013. "New Features in Qt 5.1 - Support for New Platforms". Digia. 3 July 2013. Retrieved 10 April 2015. "Necessitas project". Archived from the original on 20 February 2016. Retrieved 10 April 2015. "Qt Wiki – Support for Embedded Linux". Qt Project. 12 August 2011. Retrieved 10 April 2015. "Qt Wiki – Support for Windows". Qt Project. 11 August 2011. Retrieved 11 August 2013. "Windows 10 Support in Qt". The Qt Company. 29 April 2015. Retrieved 28 January 2016. "Qt for WinRT". Qt Project. Retrieved 9 September 2014. "Qt Wiki – Support for OS X". Qt Project. 14 August 2011. Retrieved 21 August 2013. "Supported Platforms". Retrieved 1 February 2014. "Qt Product pages, Supported platforms". Qt - Product - Qt Framework. The Qt Company. Retrieved 21 November 2014. Katherine Barrios (29 November 2011). "Qt Commercial Formally Supports QNX | Qt Blog". Retrieved 13 March 2018. "Platform and Compiler Notes - QNX | Qt 5.10". Tuukka Turunen (28 June 2012). "Qt Commercial for VxWorks | Qt Blog". Retrieved 13 March 2018. "Qt for VxWorks | Qt 5.10". "Digia Qt LGPL Exception version 1.1". "Qt Licensing". The Qt Company. Retrieved 7 January 2017. "Qt - Qt20". Qt. "Qt Free Edition License". Trolltech. 1992. Archived from the original on 14 October 2016. Retrieved 14 October 2016. "Happy 20th Anniversary Qt!". Qt Blog. "Qt framework celebrates its 20th anniversary". SD Times. 21 May 2015. "KDE Free Qt Foundation". "KDE Free Qt Foundation announcement". June 1998. "Software License Agreement" (PDF). Digia. 13 April 2013. "Trolltech offers a choice in licensing with the addition of GPL licensing for the upcoming release of Qt". Qt.nokia.com. Archived from the original on 13 March 2012. Retrieved 13 November 2011. "Q../Windows Edition history". 5 June 2006. Archived from the original on 31 July 2010. E-mail to the kde-cygwin mailing list by Chris January, 4 February 2003 "Qt Non-commercial FAQ". Trolltech. Archived from the original on 5 October 2003. "Trolltech Releases Qt 4.0 | KDE.news". KDE.News. 28 June 2005. Retrieved 13 November 2011. "Nokia Corporation Qt GPL Exception Version 1.3". Doc.trolltech.com. 22 July 1999. Archived from the original on 3 October 2010. Retrieved 13 November 2011. Weber, Niels (23 June 2010). "Nokia Qt SDK 1.0 released". Labs.trolltech.com. Retrieved 13 November 2011. Nyström, Sebastian (14 January 2009). "Nokia to license Qt under LGPL". Retrieved 17 September 2013. "ICS Whitepaper on the Implications of Qt under LGPL for Commercial and Government users" (PDF). Retrieved 13 November 2011. "Nokia and Microsoft Announce Plans for a Broad Strategic Partnership to Build a New Global Mobile Ecosystem" (Press release). Microsoft. 10 February 2011. Archived from the original on 1 April 2011. Retrieved 27 October 2011. Nystrom, Sebastian (7 March 2011). "Nokia and Digia working together to grow the Qt community". Retrieved 8 July 2011. Digia Plc (9 August 2012). "Digia to acquire Qt from Nokia". Digia Plc. Retrieved 17 October 2014. Digia Plc (18 September 2012). "The journey starts today". Digia Plc. Retrieved 17 October 2014. "TMview search result shown on September 12th, 2016". TMDN.org. Retrieved 15 June 2017. "Digia and Qt have demerged into two companies – Digia's new strategy's main themes revealed". Digia. Retrieved 15 June 2017. "Concern about removal of QWidget classes". Qt5-feedback (Mailing list). 7 October 2011. Knoll, Lars (9 May 2011). "Thoughts about Qt 5". Digia. Retrieved 9 May 2011. Knoll, Lars (21 October 2011). "The Qt Project is live!". Nokia. Retrieved 8 February 2012. Macieira, Thiago. "Qt Project Statistics". Thiago Macieira's blog. Macieira.org. Retrieved 8 May 2013. "contributions to Qt 5.0 (part 1)". KDAB. 20 December 2012. Retrieved 8 May 2013. "contributions to Qt 5.0 (part 2)". KDAB. 21 December 2012. Retrieved 8 May 2013. "Maintaining Qt3D". KDAB. 21 December 2012. Retrieved 8 May 2013. "Qt5 on the QNX operating system". KDAB. 19 April 2012. Retrieved 8 May 2013. "[Phoronix] Qt Is Now Drawing On Wayland". Phoronix.com. 21 September 2010. Retrieved 8 May 2013. "Maintainers | Qt Wiki". Qt Project. 12 April 2013. Retrieved 8 May 2013. "Frameworks/Epics/Contributions to Qt5". KDE Community Wiki. Retrieved 27 April 2015. "Books - Qt Wiki". wiki.Qt.io. Retrieved 15 June 2017. Wikimedia Commons has media related to Qt. Wikibooks has a book on the topic of: Qt Official website "The Qt 4 Dance" (video). YouTube. Archived from the original on 11 December 2021. Retrieved 7 September 2015.