Šis raksts ir par programmēšanas valodu. Par citām jēdziena python nozīmēm skatīt nozīmju atdalīšanas lapu. Python (no angļu: ‘pitons’, izrunā kā paiton, reizēm arī piton) ir augsta līmeņa programmēšanas valoda. Tā ir interpretējama objektorientētā skriptu valoda. Python valoda ir veidota, akcentu liekot uz programmētāja ērtībām pār datoru, programmas lasāmību pār ātrumu. Python principi ir apkopoti 19 aforismos. Jaunu programmēšanas valodu 1991. gadā radīja Gvido van Rosums (Guido van Rossum), kad viņš strādāja CWI institūtā Nīderlandē. Tajā laikā viņš strādāja ar operētājsistēmu Amoeba, un bija nepieciešama valoda, kas būtu līdzīga ABC programmēšanas valodai, bet ar vieglu piekļuvi sistēmas funkcijām. 1989. gada beigās Gvido sāka projektēt valodu, kurai būtu paplašināšanas iespējas. Tā kā Rosumam bija pieredze ar Modula-2+, tad viņš jaunajā valodā sintaksi un pārtraukumu semantiku pielietoja no valodas Modula-3. Pēc Gvido van Rosuma ieceres jaunās valodas nosaukumam bija jābūt īsam, unikālam un nedaudz noslēpumainam. Viņš to nosauca par Python, kas bija aizgūts no BBC televīzijas komēdiju seriāla Monty Python, kas Gvido ļoti patika. Par godu Monty Python aktierim Ērikam Aidlam nosaukta arī Python integrētā izstrādes vide IDLE. Python izstrādes laikā Gvido van Rosums nomainīja vairākas darbavietas. Python ir vairāku paradigmu programmēšanas valoda. Objektorientētā programmēšana un strukturētā programmēšana tiek pilnībā atbalstīta, un daudzas tās funkcijas atbalsta funkcionālo programmēšanu un aspektorientētu programmēšanu (tostarp ar metaprogrammēšanu un metaobjektiem — maģiskās metodes) .Daudzas citas paradigmas tiek atbalstītas, izmantojot paplašinājumus, tostarp dizains pēc līguma un loģiskā programmēšana. Python atmiņas pārvaldībai izmanto dinamisko rakstīšanu un atsauces skaitīšanas un cikla noteikšanas atkritumu savācēja kombināciju.Tam ir arī dinamiska nosaukumu izšķirtspēja (vēlīna saistīšana), kas programmas izpildes laikā saista metodes un mainīgo nosaukumus. Python dizains piedāvā zināmu atbalstu funkcionālai programmēšanai Lisp tradīcijās. Tam ir filtrēšanas, reducēšanas funkcijas; sarakstu izpratnes, vārdnīcas, kopas un ģeneratoru izteiksmes.Standarta bibliotēkā ir divi moduļi (itertools un functools), kas ievieš funkcionālos rīkus, kas aizgūti no Haskell un Standard ML. Valodas pamatfilozofija ir apkopota dokumentā The Zen of Python (PEP 20), kas ietver tādus apgalvojumus kā: Skaists ir labāks par neglītu. Skaidrs ir labāks nekā netiešs. Vienkāršs ir labāks par sarežģītu. Sarežģīts ir labāks par sarežģītu. Lasāmība ir svarīga. Python Software Foundation Python License PEP 20 — The Zen of Python Programmēšanas valoda Python iesācējiem Oficiālā mājaslapa (angliski)