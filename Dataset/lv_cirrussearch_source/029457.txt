AngularJS ir atvērtā pirmkoda tīmekļa lietotņu ietvars, kura izstrādi uztur Google un atsevišķu izstrādātāju un uzņēmumu kopiena. Tas tika radīts, lai risinātu daudzus no izaicinājumiem, ar ko saskaras izstrādātāji, radot vienas lapas lietotnes. Tā mērķis ir vienkāršot gan izstrādi, gan šādu lietotņu testēšanu, piedāvājot ietvaru klienta puses model–view–controller (MVC) un model-view-viewmodel (MVVM) arhitektūrai, piedāvājot arī komponentes, ko bieži izmanto tīmekļa lietotnēs. AngularJS bibliotēka darbojas sākumā nolasot HTML lapu, kurā ir iekļauti papildus īpaši iezīmju atribūti. Angular interpretē šos atribūtus kā direktīvas sasaistīt lapas ievades vai izvades daļas ar modeli, ko reprezentē standarta JavaScript mainīgie. Šo JavaScript mainīgo vērtības var manuāli uzstādīt kodā vai arī iegūt no statiskiem vai dinamiskiem JSON resursiem. AngularJS ietvars saņems ilgtermiņa atbalstu (LTS) līdz 2021. gada 31. decembrim. Pēc šī datuma Google vairs neuzturēs AngularJS, neveicot drošības, pārlūku savietojamības, vai jQuery problēmu labojumus. Angular komanda kā labāko risinājumu iesaka veikt migrāciju uz Angular (v2+), piedāvājot arī citas alternatīvas. AngularJS ir radīts ar uzskatu, ka deklaratīvā programmēšana būtu jāizmanto lietotāja saskarņu veidošanai un programmatūras komponenšu savienošanai, bet imperatīvā programmēšana ir labāk der lietotnes biznesa loģikai. Ietvars pielāgo un paplašina tradicionālo HTML, lai attēlotu dinamisku saturu, izmantojot divvirzienu datu sasaisti, kas ļauj automātiski sinhronizēt modeļus un skatus. Tā rezultātā AngularJS samazina uzsvaru uz DOM manipulēšanu ar mērķi uzlabot testējamību un ātrdarbību. AngularJS plānotie mērķi iekļauj: atdalīt DOM manipulēšanu no lietotnes loģikas. Šī sarežģītību ietekmē tas, kā tiek strukturēts kods. atdalīt lietotnes klienta daļu no servera daļas. Tas ļauj izstrādāt šis daļas paralēli. piedāvāt struktūru lietotnes radīšanai no lietotāja saskarnes izveides, biznesa loģikas ieviešanas līdz testēšanai. Angular realizē MVC modeli, lai atdalītu prezentāciju, datu un loģikas komponentes. Izmantojot atkarību injekciju, Angular pārnes tradicionālus servera puses pakalpojumus kā no skatiem atkarīgus kontrolierus uz tīmekļa lietotņu klienta daļu. Šādi var tikt samazināta serveru noslodze. Hardik Shah. «8 Reasons why Angular is perfect for your Web App Development - pontikis.net» (en-US). Skatīts: 2021-04-26. «AngularJS». docs.angularjs.org. Skatīts: 2021-05-14. Pete Bacon Darwin. «Stable AngularJS and Long Term Support». Angular Blog, 2020. gada 27. jūlijs. Skatīts: 2021. gada 9. aprīlis. «AngularJS». docs.angularjs.org. Skatīts: 2021. gada 9. aprīlis. Mark Techson. «Finding a Path Forward with AngularJs». Medium, 2021. gada 2. februāris. Skatīts: 2021. gada 9. aprīlis. «What Is Angular?». Skatīts: 2013. gada 12. februāris. «Angular vs Vue: Which Framework to Choose in 2021?». Insights on Latest Technologies - Simform Blog (en-US). 2021-06-17. Skatīts: 2021-08-26. Oficiālā tīmekļa vietne Angular 2 versija AngularJS moduļu repozitorijs Ar AngularJS izstrādātās lietotnes AngularJS Google grupa AngularJS Google+ konts Batarang Chrome spraudnis NG-CONF 2014 video un prezentācijas NG-EUROPE 2014 video un prezentācijas Arhivēts 2016. gada 14. jūnijā, Wayback Machine vietnē. NG-CONF 2015 video un prezentācijas AngularJS izstrādātāju kopiena AngularJS lietotņu ielādētāju salīdzinājums