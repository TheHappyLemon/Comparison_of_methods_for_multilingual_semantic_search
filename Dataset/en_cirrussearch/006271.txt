Google Web Toolkit (GWT /ˈɡwɪt/), or GWT Web Toolkit, is an open-source set of tools that allows web developers to create and maintain JavaScript front-end applications in Java. It is licensed under Apache License 2.0. GWT emphasizes reusable approaches to everyday web development tasks, namely asynchronous remote procedure calls, history management, bookmarking, UI abstraction, internationalization, and cross-browser portability. GWT version 1.0 RC 1 was released on May 16, 2006. Google announced GWT at the JavaOne conference in 2006. In August 2010, Google acquired Instantiations, a company known for focusing on Eclipse Java developer tools, including GWT Designer, which is now bundled with Google Plugin for Eclipse. In 2011 with the introduction of the Dart programming language, Google reassured the GWT community that GWT would continue to be supported for the foreseeable future but also hinted at a possible rapprochement between the two Google approaches to "structured web programming". They've also admitted, however, that several of the engineers previously working on GWT are now working on Dart. In 2012 at their annual I/O conference, Google announced that GWT would be transformed from a Google project to a fully open-sourced project. In July 2013, Google posted on its GWT blog that the transformation to an open-source project was complete. Using GWT, developers have the ability to develop and debug Ajax applications in the Java language using the Java development tools of their choice. When the application is deployed, the GWT cross-compiler translates the Java application to standalone JavaScript files that are optionally obfuscated and deeply optimized. When needed, JavaScript can also be embedded directly into Java code using Java comments. GWT does not revolve only around user interface programming; it is a broad set of tools for building high-performance client-side JavaScript functionality. Indeed, many vital architectural decisions are left entirely to the developer. The GWT mission statement clarifies the philosophical breakdown of GWT's role versus the developer's role. History is an example of such: although GWT manages history tokens as users click Back or Forward in the browser, it does not prescribe how to map history tokens to an application state. GWT applications can be run in two modes: Development mode (formerly Hosted mode): The application runs as Java bytecode within the Java Virtual Machine (JVM). This mode is typically used for development, supporting the hot swapping of code and debugging. In 2014, the classic implementation of Dev Mode was rendered unusable by browser updates until its replacement with the more compatible Super Dev Mode, which became the default in GWT 2.7. Production mode (formerly Web mode): The application is run as pure JavaScript and HTML, compiled from the Java source. This mode is typically used for deployment. Several open-source plugins are available for making GWT development easier with other IDEs, including GWT4NB for NetBeans, Cypal Studio for GWT (an Eclipse plugin), and GWT Developer for JDeveloper. The Google Plugin for Eclipse handles most GWT-related tasks in the IDE, including creating projects, invoking the GWT compiler, creating GWT launch configurations, validation, and syntax highlighting. The major GWT components include: GWT Java-to-JavaScript Compiler Translates the Java programming language to the JavaScript programming language. GWT Development Mode Allows the developers to run and execute GWT applications in development mode (the app runs as Java in the JVM without compiling to JavaScript). Prior to 2.0, GWT hosted mode provided a special-purpose "hosted browser" to debug your GWT code. In 2.0, the web page being debugged is viewed within a regular browser. Development mode is supported by using a native-code plugin called the Google Web Toolkit Developer Plugin for many popular browsers. JRE emulation library JavaScript implementations of the commonly used classes in the Java standard class library (such as most of the java.lang package classes and a subset of the java.util package classes). GWT Web UI class library A set of custom interfaces and classes for creating widgets. Dynamic and reusable UI components: programmers can use pre-designed classes to implement otherwise time-consuming dynamic behaviors, such as drag-and-drop or sophisticated visual tree structures. Simple RPC mechanism Browser history management Support for full-featured Java debugging GWT handles some cross-browser issues for the developer. Unit testing integration Support for Internationalization and localization HTML Canvas support (subject to API changes) The developers can mix handwritten JavaScript in the Java source code using the JavaScript Native Interface (JSNI). Support for using Google APIs in GWT applications (initially, support for Google Gears). Open-source The developers can design and develop their applications in a pure object-oriented fashion since they're using Java (instead of JavaScript). Common JavaScript errors, such as typos and type mismatches, are caught at compile time. The JavaScript that the GWT compiler generates can be tailored to be either unobfuscated (Source-Mapped or Source-Code) and easier to understand or obfuscated and compressed. A number of libraries are available for GWT, by Google and third parties. These extend the toolkit's features. As of version 2.4 (September 2011), Google Web Toolkit offers several widgets and panels. Many common widgets not found in the GWT have been implemented in third-party libraries. GWT uses or supports Java, Apache Tomcat (or similar web container), Eclipse IDE, Internet Explorer, and internationalization and localization. Java-based GWT rich web applications can be tested using JUnit testing framework and code coverage tools. Because GWT allows compile time verification of images, CSS, and business logic, many common development defects are automatically discovered without requiring the manual testing commonly required by RIAs. Google has noted that some of its products are GWT-based: Blogger, AdWords, Flights, Wallet, Offers, Groups, Inbox. On December 8, 2009, Google launched Google Web Toolkit 2.0 with Speed Tracer. Version 2.0 of GWT offers a number of new features, including: In-Browser Development Mode (formerly known as Out Of Process Hosted Mode, OOPHM): prior to version 2.0, the hosted mode was used to embed a modified browser to allow running the bytecode version of the application during development. With version 2.0, hosted mode, renamed "development mode", allows using any (supported) browser to view the page being debugged through the use of a browser plugin. The plugin communicates with the development mode shell using TCP/IP, which allows cross-platform debugging (for example, debugging in Internet Explorer on Windows from a development mode shell running on a Linux machine). Code splitting: with the developer providing "split points" in the source code, the GWT compiler can split the JavaScript code into several small chunks instead of one big download. This will lead to reduced application startup time as the size of the initial download is decreased. Declarative User Interface: using an XML format, the new feature known as UiBinder allows the creation of user interfaces through declaration rather than code. This allows a clean separation of UI construction and behavior implementation. Resource bundling: the ClientBundle interface will allow resources of any nature (images, CSS, text, binary) to be bundled together and transferred in one download, resulting in fewer round-trips to the server and hence lower application latency. Since the new development mode removed most platform-specific code, the new version will be distributed as a unique archive, instead of one per supported platform, as was the case with previous versions. As a general framework for making web apps, Google Web Toolkit is also capable of being used as a framework for creating mobile and tablet apps, either by making the needed widgets and animations from scratch or by using one of the mobile frameworks for GWT. An HTML5 app written in GWT can have separate views for Tablets and Mobile phones. Free and open-source software portal Computer programming portal Dart (programming language) Google Plugin for Eclipse Google Code Comparison of JavaScript-based web frameworks Comparison of web frameworks Emscripten for converting C++ into JavaScript or WebAssembly RAS syndrome "GWT Name Use Policy". Retrieved April 23, 2014. "Google Web Toolkit License Information". February 23, 2007. Retrieved September 25, 2007. "Google Web Toolkit Release Archive". Retrieved September 25, 2007. Olson, Steven Douglas (2007). Ajax on Java. O'Reilly. p. 183. ISBN 978-0-596-10187-9. Ramsdale, Chris. "Google Relaunches Instantiations Developer Tools". "Google Web Toolkit Blog: GWT and Dart". Googlewebtoolkit.blogspot.com. November 10, 2011. Retrieved June 16, 2013. Vaadin to Support Google Web Toolkit (GWT) Development. vaadin.com (June 29, 2012). Retrieved on 2014-05-15. Google Web Toolkit Blog: GWT News. Googlewebtoolkit.blogspot.com (July 15, 2013). Retrieved on 2014-05-15. "Coding Basics - JavaScript Native Interface (JSNI) - Google Web Toolkit — Google Developers". Google Inc. October 25, 2012. Retrieved June 16, 2013. GWT mission statement Debugging in Development Mode "Development Mode will not be supported in Firefox 27+". google-web-toolkit@googlegroups.com (Mailing list). "GWT Developer Plugin no longer works with Chrome on Linux". google-web-toolkit@googlegroups.com (Mailing list). "Super Dev Mode". GWT4NB Cypal Studio for GWT "com.google.gwt.dev.Compiler". GitHub. The main executable entry point for the GWT Java to JavaScript compiler. "com.google.gwt.dev.jjs.JavaToJavaScriptCompiler". GitHub. A base for classes that compile Java JProgram representations into corresponding Js source. Perry, Bruce W (2007). Google Web Toolkit for Ajax. O'Reilly Short Cuts. O'Reilly. pp. 1–5. ISBN 978-0-596-51022-0. "GWT Javadoc Canvas". "Widget List". Google Inc. Retrieved May 21, 2012. GWT Project. GWT Project. Retrieved on May 15, 2014. "Google I/O 2012 - The History and Future of Google Web Toolkit". GoogleDevelopers. Retrieved March 18, 2013. Toubassi, Garrick. "Going under the hood of Inbox". Official Gmail Blog. Retrieved November 22, 2014. Introducing Google Web Toolkit 2.0, now with Speed Tracer "GWT 2.0 milestone 1 announcement". Amit Manjhi. Retrieved October 5, 2009. Dewsbury, Ryan (December 15, 2007). Google Web Toolkit Applications. Prentice Hall. p. 608. ISBN 978-0-321-50196-7. Chaganti, Prabhakar (February 15, 2007). Google Web Toolkit: GWT Java Ajax Programming. Packt Publishing. p. 248. ISBN 978-1-84719-100-7. Geary, David (November 17, 2007). Google Web Toolkit Solutions: More Cool & Useful Stuff. Prentice Hall. p. 408. ISBN 978-0-13-234481-4. Hanson, Robert; Adam Tacy (February 7, 2013). GWT in Action (2nd ed.). Manning. p. 643. ISBN 978-1-935182-84-9. Cooper, Robert; Charlie Collins (May 12, 2008). GWT in Practice. Manning. p. 376. ISBN 978-1-933988-29-0.