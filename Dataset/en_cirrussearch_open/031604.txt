A programming paradigm is a relatively high-level way to structure and conceptualize the implementation of a computer program. A programming language can be classified as supporting one or more paradigms. Paradigms are separated along and described by different dimensions of programming. Some paradigms are about implications of the execution model, such as allowing side effects, or whether the sequence of operations is defined by the execution model. Other paradigms are about the way code is organized, such as grouping into units that include both state and behavior. Yet others are about syntax and grammar. Some common programming paradigms include (shown in hierarchical relationship): Imperative – code directly controls execution flow and state change procedural – organized as procedures that call each other object-oriented – organized as objects that contain both data structure and associated behavior Declarative – code declares properties of the desired result, but not how to compute it functional – a desired result is declared as the value of a series of function evaluations logic – a desired result is declared as the answer to a question about a system of facts and rules reactive – a desired result is declared with data streams and the propagation of change